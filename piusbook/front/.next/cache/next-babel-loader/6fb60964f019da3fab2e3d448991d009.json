{"ast":null,"code":"var _jsxFileName = \"/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/components/PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPostRequest } from '../reducer/post';\nimport useInput from '../hooks/useInput';\nconst Form = styled.form.withConfig({\n  displayName: \"PostForm__Form\",\n  componentId: \"sc-1fhb6li-0\"\n})([\"\"]);\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  const [text, onChangeText, setText] = useInput('');\n  const {\n    addPostDone\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  const handleSubmit = useCallback(e => {\n    e.preventDefault();\n    dispatch(addPostRequest(text));\n  });\n  return __jsx(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }\n  }, __jsx(\"textarea\", {\n    type: \"textarea\",\n    row: \"4\",\n    value: text,\n    onChange: onChangeText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\")), __jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }\n  }, \"\\uC0DD\\uC131\"));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/components/PostForm.js"],"names":["React","useCallback","useEffect","styled","useDispatch","useSelector","addPostRequest","useInput","Form","form","PostForm","dispatch","text","onChangeText","setText","addPostDone","state","post","handleSubmit","e","preventDefault"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,MAAMC,IAAI,GAAGL,MAAM,CAACM,IAAV;AAAA;AAAA;AAAA,QAAV;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACtB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM,CAACQ,IAAD,EAAOC,YAAP,EAAqBC,OAArB,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAkBV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAnC;AACAf,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIa,WAAJ,EAAiB;AAChBD,MAAAA,OAAO,CAAC,EAAD,CAAP;AACA;AACD,GAJQ,EAIN,CAACC,WAAD,CAJM,CAAT;AAKA,QAAMG,YAAY,GAAGjB,WAAW,CAACkB,CAAC,IAAI;AACrCA,IAAAA,CAAC,CAACC,cAAF;AACAT,IAAAA,QAAQ,CAACL,cAAc,CAACM,IAAD,CAAf,CAAR;AACA,GAH+B,CAAhC;AAIA,SACC,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEM,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAU,IAAA,IAAI,EAAC,UAAf;AAA0B,IAAA,GAAG,EAAC,GAA9B;AAAkC,IAAA,KAAK,EAAEN,IAAzC;AAA+C,IAAA,QAAQ,EAAEC,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAFD,CAFD,EAMC;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAND,CADD;AAUA,CAvBD;;AAyBA,eAAeH,QAAf","sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPostRequest } from '../reducer/post';\nimport useInput from '../hooks/useInput';\nconst Form = styled.form``;\n\nconst PostForm = () => {\n\tconst dispatch = useDispatch();\n\tconst [text, onChangeText, setText] = useInput('');\n\tconst { addPostDone } = useSelector(state => state.post);\n\tuseEffect(() => {\n\t\tif (addPostDone) {\n\t\t\tsetText('');\n\t\t}\n\t}, [addPostDone]);\n\tconst handleSubmit = useCallback(e => {\n\t\te.preventDefault();\n\t\tdispatch(addPostRequest(text));\n\t});\n\treturn (\n\t\t<Form onSubmit={handleSubmit}>\n\t\t\t<textarea type=\"textarea\" row=\"4\" value={text} onChange={onChangeText} />\n\t\t\t<div>\n\t\t\t\t<input type=\"file\" />\n\t\t\t\t<button>이미지 업로드</button>\n\t\t\t</div>\n\t\t\t<button type=\"submit\">생성</button>\n\t\t</Form>\n\t);\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}