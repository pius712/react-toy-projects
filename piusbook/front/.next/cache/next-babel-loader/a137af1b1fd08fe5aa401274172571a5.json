{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/components/CommentForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux'; // import { ADD_COMMENT_REQUEST } from '../actions';\n\nimport { addCommentRequest } from '../reducer/post';\nimport useInput from '../hooks/useInput';\nimport styled from 'styled-components';\nvar Form = styled.form.withConfig({\n  displayName: \"CommentForm__Form\",\n  componentId: \"oy06y7-0\"\n})([\"display:flex;margin:5px 0;\"]);\n_c = Form;\nvar TextArea = styled.textarea.withConfig({\n  displayName: \"CommentForm__TextArea\",\n  componentId: \"oy06y7-1\"\n})([\"flex-basis:85%;margin-right:3px;border-radius:5px;\"]);\n_c2 = TextArea;\nvar Button = styled.button.withConfig({\n  displayName: \"CommentForm__Button\",\n  componentId: \"oy06y7-2\"\n})([\"flex-basis:15%;text-align:center;text-align:center;background-color:#5f0080;color:white;border-radius:5px;\"]);\n_c3 = Button;\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      comment = _useInput2[0],\n      onChangeComment = _useInput2[1],\n      setComment = _useInput2[2];\n\n  var me = useSelector(function (state) {\n    return state.user.me;\n  });\n  var id = me && me.id;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      addCommentDone = _useSelector.addCommentDone;\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (addCommentDone) {\n      setComment('');\n    }\n  }, [addCommentDone]);\n  var onSubmitComment = useCallback(function (e) {\n    e.preventDefault();\n    dispatch(addCommentRequest({\n      content: comment,\n      postId: post.id,\n      userId: id\n    }));\n  }, [comment, id, dispatch, post]);\n  return __jsx(Form, {\n    onSubmit: onSubmitComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }\n  }, __jsx(TextArea, {\n    rows: \"2\",\n    value: comment,\n    onChange: onChangeComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }\n  }), __jsx(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }\n  }, \"\\uC0DD\\uC131\"));\n};\n\n_s(CommentForm, \"mpYpICKU12f0WRIxuH+kZR+H4uI=\", false, function () {\n  return [useInput, useSelector, useSelector, useDispatch];\n});\n\n_c4 = CommentForm;\nCommentForm.propTypes = {\n  post: propTypes.object\n};\nexport default CommentForm;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"TextArea\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"CommentForm\");","map":null,"metadata":{},"sourceType":"module"}