{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from '../reducer/index.js';\nimport rootSaga from '../sagas'; // preloadedState, { isServer, req = null }\n\nvar configureStore = function configureStore() {\n  var sagaMiddleware = createSagaMiddleware();\n  var middleware = [sagaMiddleware];\n  var enhancer = true ? compose(applyMiddleware.apply(void 0, middleware)) : composeWithDevTools(applyMiddleware.apply(void 0, middleware));\n  var store = createStore(reducer, enhancer); // if (req || !isServer) {\n\n  store.sagaTask = sagaMiddleware.run(rootSaga); // }\n\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: false\n});\nexport default wrapper;","map":null,"metadata":{},"sourceType":"module"}