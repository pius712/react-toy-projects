{"ast":null,"code":"import axios from 'axios'; // Cors 문제로 인해서 백엔드로 cookie를 보내지 않는 문제를\n// withCredentials: true 옵션을 주어서 해결\n// const instance = axios.create({\n// \tbaseURL: 'http://localhost:8080/',\n// });\n\naxios.defaults.baseURL = 'http://localhost:8080';\naxios.defaults.withCredentials = true;\n\nconst loginUser = data => {\n  return axios.post('user/login', data);\n};\n\nconst registerUser = data => {\n  return axios.post('user', data); // data = {email, password, nickname}\n};\n\nconst logoutUser = () => {\n  return axios.post('user/logout');\n}; // 게시글 업로드\n// data = {conetent: text}\n// postform.js\n\n\nconst uploadPost = data => {\n  return axios.post('post', data);\n}; // 댓글 업로드\n// data = {\n// \tcontent: comment,\n// \tpostId: post.id,\n// \tuserId: id,\n// }\n// commentForm.js\n\n\nconst uploadComment = data => {\n  return axios.post(`post/${data.postId}/comment`, data);\n};\n\nconst fetchPost = data => {\n  return axios.get(`post?lastId=${data.lastId || 0}`);\n};\n\nconst fetchMyInfo = () => {\n  return axios.get('user');\n};\n\nconst likePostAPI = data => {\n  return axios.patch(`post/${data.postId}/like`);\n};\n\nconst unlikePostAPI = data => {\n  return axios.patch(`post/${data.postId}/unlike`);\n};\n\nconst editNicknameAPI = data => {\n  return axios.patch('user/edit/nickname', data);\n};\n\nconst removePostAPI = data => {\n  return axios.delete(`post/${data.PostId}/delete`);\n};\n\nconst followAPI = data => {\n  return axios.patch(`user/${data.UserId}/follow`);\n};\n\nconst unfollowAPI = data => {\n  return axios.patch(`user/${data.UserId}/unfollow`);\n};\n\nconst loadFollowingsAPI = () => {\n  return axios.get('user/followings');\n};\n\nconst loadFollowersAPI = () => {\n  return axios.get('user/followers');\n};\n\nconst removeFollowerAPI = data => {\n  return axios.delete(`user/follower/${data.UserId}`);\n}; // form data는 {name : data} 이런식으로 보내면 json이 되서 안된다. 그냥 그대로 보내야함\n\n\nconst uploadImagesAPI = data => {\n  return axios.post('post/images', data);\n};\n\nconst retweetAPI = data => {\n  return axios.post(`post/${data.PostId}/retweet`);\n};\n\nexport { registerUser, loginUser, logoutUser, uploadPost, uploadComment, fetchMyInfo, fetchPost, likePostAPI, unlikePostAPI, editNicknameAPI, removePostAPI, followAPI, unfollowAPI, loadFollowingsAPI, loadFollowersAPI, removeFollowerAPI, uploadImagesAPI, retweetAPI };","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/API/index.js"],"names":["axios","defaults","baseURL","withCredentials","loginUser","data","post","registerUser","logoutUser","uploadPost","uploadComment","postId","fetchPost","get","lastId","fetchMyInfo","likePostAPI","patch","unlikePostAPI","editNicknameAPI","removePostAPI","delete","PostId","followAPI","UserId","unfollowAPI","loadFollowingsAPI","loadFollowersAPI","removeFollowerAPI","uploadImagesAPI","retweetAPI"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\n// Cors 문제로 인해서 백엔드로 cookie를 보내지 않는 문제를\n// withCredentials: true 옵션을 주어서 해결\n// const instance = axios.create({\n// \tbaseURL: 'http://localhost:8080/',\n// });\naxios.defaults.baseURL = 'http://localhost:8080';\naxios.defaults.withCredentials = true;\n\nconst loginUser = data => {\n\treturn axios.post('user/login', data);\n};\nconst registerUser = data => {\n\treturn axios.post('user', data);\n\t// data = {email, password, nickname}\n};\n\nconst logoutUser = () => {\n\treturn axios.post('user/logout');\n};\n\n// 게시글 업로드\n// data = {conetent: text}\n// postform.js\n\nconst uploadPost = data => {\n\treturn axios.post('post', data);\n};\n\n// 댓글 업로드\n// data = {\n// \tcontent: comment,\n// \tpostId: post.id,\n// \tuserId: id,\n// }\n// commentForm.js\nconst uploadComment = data => {\n\treturn axios.post(`post/${data.postId}/comment`, data);\n};\n\nconst fetchPost = data => {\n\treturn axios.get(`post?lastId=${data.lastId || 0}`);\n};\nconst fetchMyInfo = () => {\n\treturn axios.get('user');\n};\n\nconst likePostAPI = data => {\n\treturn axios.patch(`post/${data.postId}/like`);\n};\nconst unlikePostAPI = data => {\n\treturn axios.patch(`post/${data.postId}/unlike`);\n};\n\nconst editNicknameAPI = data => {\n\treturn axios.patch('user/edit/nickname', data);\n};\nconst removePostAPI = data => {\n\treturn axios.delete(`post/${data.PostId}/delete`);\n};\nconst followAPI = data => {\n\treturn axios.patch(`user/${data.UserId}/follow`);\n};\nconst unfollowAPI = data => {\n\treturn axios.patch(`user/${data.UserId}/unfollow`);\n};\nconst loadFollowingsAPI = () => {\n\treturn axios.get('user/followings');\n};\nconst loadFollowersAPI = () => {\n\treturn axios.get('user/followers');\n};\nconst removeFollowerAPI = data => {\n\treturn axios.delete(`user/follower/${data.UserId}`);\n};\n// form data는 {name : data} 이런식으로 보내면 json이 되서 안된다. 그냥 그대로 보내야함\nconst uploadImagesAPI = data => {\n\treturn axios.post('post/images', data);\n};\n\nconst retweetAPI = data => {\n\treturn axios.post(`post/${data.PostId}/retweet`);\n};\nexport {\n\tregisterUser,\n\tloginUser,\n\tlogoutUser,\n\tuploadPost,\n\tuploadComment,\n\tfetchMyInfo,\n\tfetchPost,\n\tlikePostAPI,\n\tunlikePostAPI,\n\teditNicknameAPI,\n\tremovePostAPI,\n\tfollowAPI,\n\tunfollowAPI,\n\tloadFollowingsAPI,\n\tloadFollowersAPI,\n\tremoveFollowerAPI,\n\tuploadImagesAPI,\n\tretweetAPI,\n};\n"]},"metadata":{},"sourceType":"module"}