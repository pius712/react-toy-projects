{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, fork } from 'redux-saga/effects';\nimport userSaga from './user';\nimport postSaga from './post'; // function* login() {\n// \ttry {\n// \t\t// const result = yield call();\n// \t\tyield delay(1000);\n// \t\tyield put({\n// \t\t\ttype: 'LOG_IN_SUCCESS',\n// \t\t\tdata: result.data,\n// \t\t});\n// \t} catch (error) {\n// \t\tyield put({\n// \t\t\ttype: 'LOG_IN_FAILURE',\n// \t\t\tdata: error.response.message,\n// \t\t});\n// \t}\n// }\n// function* logout() {\n// \ttry {\n// \t\t// yield call();\n// \t\tyield delay(1000);\n// \t\tyield put({\n// \t\t\ttype: 'LOG_OUT_SUCCESS',\n// \t\t});\n// \t} catch {\n// \t\tyield put({\n// \t\t\ttype: 'LOG_OUT_FAILURE',\n// \t\t});\n// \t}\n// }\n// function* addPost() {\n// \ttry {\n// \t\t// const result = yield call();\n// \t\tyield delay(1000);\n// \t\tyield put({\n// \t\t\ttype: 'ADD_POST_SUCCESS',\n// \t\t\tdata: response.data,\n// \t\t});\n// \t} catch (error) {\n// \t\tyield put({\n// \t\t\ttype: 'ADD_POST_FAILURE',\n// \t\t\tdata: error.response.data,\n// \t\t});\n// \t}\n// }\n// user.js 로 이동\n// function* watchLogin() {\n// \tyield takeLatest('LOG_IN_REQUEST', login);\n// }\n// function* watchLogout() {\n// \tyield takeLatest('LOG_OUT_REQUEST', logout);\n// }\n// function* watchAddPost() {\n// \tyield takeLatest('ADD_POST_REQUEST', addPost);\n// }\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([fork(userSaga), fork(postSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":null,"metadata":{},"sourceType":"module"}