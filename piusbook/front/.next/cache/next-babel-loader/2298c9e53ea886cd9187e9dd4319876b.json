{"ast":null,"code":"import { call, put, delay, takeLatest, all, fork } from 'redux-saga/effects';\n\nfunction* login(action) {\n  try {\n    // const result = yield call();\n    yield delay(1000);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: action.data\n    });\n  } catch (error) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: error.response.message\n    });\n  }\n}\n\nfunction* logout() {\n  try {\n    // yield call();\n    yield delay(1000);\n    yield put({\n      type: 'LOG_OUT_SUCCESS'\n    });\n  } catch {\n    yield put({\n      type: 'LOG_OUT_FAILURE'\n    });\n  }\n}\n\nfunction* watchLogin() {\n  console.log('saga');\n  yield takeLatest('LOG_IN_REQUEST', login);\n}\n\nfunction* watchLogout() {\n  yield takeLatest('LOG_OUT_REQUEST', logout);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogout)]);\n}","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/sagas/user.js"],"names":["call","put","delay","takeLatest","all","fork","login","action","type","data","error","response","message","logout","watchLogin","console","log","watchLogout","userSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,KAApB,EAA2BC,UAA3B,EAAuCC,GAAvC,EAA4CC,IAA5C,QAAwD,oBAAxD;;AAEA,UAAUC,KAAV,CAAgBC,MAAhB,EAAwB;AACvB,MAAI;AACH;AACA,UAAML,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACTO,MAAAA,IAAI,EAAE,gBADG;AAETC,MAAAA,IAAI,EAAEF,MAAM,CAACE;AAFJ,KAAD,CAAT;AAIA,GAPD,CAOE,OAAOC,KAAP,EAAc;AACf,UAAMT,GAAG,CAAC;AACTO,MAAAA,IAAI,EAAE,gBADG;AAETC,MAAAA,IAAI,EAAEC,KAAK,CAACC,QAAN,CAAeC;AAFZ,KAAD,CAAT;AAIA;AACD;;AACD,UAAUC,MAAV,GAAmB;AAClB,MAAI;AACH;AACA,UAAMX,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACTO,MAAAA,IAAI,EAAE;AADG,KAAD,CAAT;AAGA,GAND,CAME,MAAM;AACP,UAAMP,GAAG,CAAC;AACTO,MAAAA,IAAI,EAAE;AADG,KAAD,CAAT;AAGA;AACD;;AAED,UAAUM,UAAV,GAAuB;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,QAAMb,UAAU,CAAC,gBAAD,EAAmBG,KAAnB,CAAhB;AACA;;AAED,UAAUW,WAAV,GAAwB;AACvB,QAAMd,UAAU,CAAC,iBAAD,EAAoBU,MAApB,CAAhB;AACA;;AAED,eAAe,UAAUK,QAAV,GAAqB;AACnC,QAAMd,GAAG,CAAC,CAACC,IAAI,CAACS,UAAD,CAAL,EAAmBT,IAAI,CAACY,WAAD,CAAvB,CAAD,CAAT;AACA","sourcesContent":["import { call, put, delay, takeLatest, all, fork } from 'redux-saga/effects';\n\nfunction* login(action) {\n\ttry {\n\t\t// const result = yield call();\n\t\tyield delay(1000);\n\t\tyield put({\n\t\t\ttype: 'LOG_IN_SUCCESS',\n\t\t\tdata: action.data,\n\t\t});\n\t} catch (error) {\n\t\tyield put({\n\t\t\ttype: 'LOG_IN_FAILURE',\n\t\t\tdata: error.response.message,\n\t\t});\n\t}\n}\nfunction* logout() {\n\ttry {\n\t\t// yield call();\n\t\tyield delay(1000);\n\t\tyield put({\n\t\t\ttype: 'LOG_OUT_SUCCESS',\n\t\t});\n\t} catch {\n\t\tyield put({\n\t\t\ttype: 'LOG_OUT_FAILURE',\n\t\t});\n\t}\n}\n\nfunction* watchLogin() {\n\tconsole.log('saga');\n\tyield takeLatest('LOG_IN_REQUEST', login);\n}\n\nfunction* watchLogout() {\n\tyield takeLatest('LOG_OUT_REQUEST', logout);\n}\n\nexport default function* userSaga() {\n\tyield all([fork(watchLogin), fork(watchLogout)]);\n}\n"]},"metadata":{},"sourceType":"module"}