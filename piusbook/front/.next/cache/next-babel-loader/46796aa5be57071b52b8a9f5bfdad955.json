{"ast":null,"code":"var _jsxFileName = \"/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/components/PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPostRequest } from '../reducer/post';\nimport useInput from '../hooks/useInput';\nconst Form = styled.form.withConfig({\n  displayName: \"PostForm__Form\",\n  componentId: \"sc-1fhb6li-0\"\n})([\"margin:20px 0;background-color:#fff;\"]);\nconst TextArea = styled.textarea.withConfig({\n  displayName: \"PostForm__TextArea\",\n  componentId: \"sc-1fhb6li-1\"\n})([\"display:block;width:100%;\"]);\nconst ButtonWrapper = styled.div.withConfig({\n  displayName: \"PostForm__ButtonWrapper\",\n  componentId: \"sc-1fhb6li-2\"\n})([\"display:flex;justify-content:space-between;align-items:center;height:20px;margin:10px 0;\"]);\nconst ImageUploadButton = styled.button.withConfig({\n  displayName: \"PostForm__ImageUploadButton\",\n  componentId: \"sc-1fhb6li-3\"\n})([\"padding:10px 20px;display:inline-block;text-align:center;\"]);\nconst SubmitButton = styled.button.withConfig({\n  displayName: \"PostForm__SubmitButton\",\n  componentId: \"sc-1fhb6li-4\"\n})([\"display:inline-block;text-align:center;margin-left:auto;background-color:#5f0080;color:white;padding:10px 20px;\"]);\nconst Wrapper = styled.div.withConfig({\n  displayName: \"PostForm__Wrapper\",\n  componentId: \"sc-1fhb6li-5\"\n})([\"display:inline-block;width:100%;\"]);\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  const [text, onChangeText, setText] = useInput('');\n  const {\n    addPostDone\n  } = useSelector(state => state.post);\n  const imageInput = useRef(null);\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [setText, addPostDone]);\n  const handleSubmit = useCallback(e => {\n    e.preventDefault();\n\n    if (text === '') {\n      return;\n    }\n\n    dispatch(addPostRequest({\n      content: text\n    }));\n  }, [text, dispatch]);\n  const onChangeImages = useCallback(e => {\n    console.log('images', e.target.files);\n  });\n  const openDialog = useCallback(() => {\n    imageInput.current.click();\n  });\n  return __jsx(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 3\n    }\n  }, __jsx(TextArea, {\n    type: \"textarea\",\n    row: \"4\",\n    value: text,\n    onChange: onChangeText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }\n  }), __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }\n  }, __jsx(ButtonWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    id: \"inputButton\",\n    name: \"image\",\n    ref: imageInput,\n    type: \"file\",\n    onChange: onChangeImages,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 6\n    }\n  }), __jsx(ImageUploadButton, {\n    onClick: openDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 6\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(SubmitButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 6\n    }\n  }, \"\\uC0DD\\uC131\"))));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/components/PostForm.js"],"names":["React","useCallback","useEffect","useRef","styled","useDispatch","useSelector","addPostRequest","useInput","Form","form","TextArea","textarea","ButtonWrapper","div","ImageUploadButton","button","SubmitButton","Wrapper","PostForm","dispatch","text","onChangeText","setText","addPostDone","state","post","imageInput","handleSubmit","e","preventDefault","content","onChangeImages","console","log","target","files","openDialog","current","click"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPostRequest } from '../reducer/post';\nimport useInput from '../hooks/useInput';\nconst Form = styled.form`\n\tmargin: 20px 0;\n\tbackground-color: #fff;\n`;\nconst TextArea = styled.textarea`\n\tdisplay: block;\n\twidth: 100%;\n`;\nconst ButtonWrapper = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\theight: 20px;\n\tmargin: 10px 0;\n`;\n\nconst ImageUploadButton = styled.button`\n\tpadding: 10px 20px;\n\tdisplay: inline-block;\n\ttext-align: center;\n`;\nconst SubmitButton = styled.button`\n\tdisplay: inline-block;\n\ttext-align: center;\n\tmargin-left: auto;\n\tbackground-color: #5f0080;\n\tcolor: white;\n\tpadding: 10px 20px;\n`;\nconst Wrapper = styled.div`\n\tdisplay: inline-block;\n\twidth: 100%;\n`;\nconst PostForm = () => {\n\tconst dispatch = useDispatch();\n\tconst [text, onChangeText, setText] = useInput('');\n\tconst { addPostDone } = useSelector(state => state.post);\n\tconst imageInput = useRef(null);\n\tuseEffect(() => {\n\t\tif (addPostDone) {\n\t\t\tsetText('');\n\t\t}\n\t}, [setText, addPostDone]);\n\tconst handleSubmit = useCallback(\n\t\te => {\n\t\t\te.preventDefault();\n\t\t\tif (text === '') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdispatch(addPostRequest({ content: text }));\n\t\t},\n\t\t[text, dispatch],\n\t);\n\tconst onChangeImages = useCallback(e => {\n\t\tconsole.log('images', e.target.files);\n\t});\n\tconst openDialog = useCallback(() => {\n\t\timageInput.current.click();\n\t});\n\treturn (\n\t\t<Form onSubmit={handleSubmit}>\n\t\t\t<TextArea type=\"textarea\" row=\"4\" value={text} onChange={onChangeText} />\n\t\t\t<Wrapper>\n\t\t\t\t<ButtonWrapper>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"inputButton\"\n\t\t\t\t\t\tname=\"image\"\n\t\t\t\t\t\tref={imageInput}\n\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\tonChange={onChangeImages}\n\t\t\t\t\t\thidden\n\t\t\t\t\t/>\n\t\t\t\t\t<ImageUploadButton onClick={openDialog}>\n\t\t\t\t\t\t이미지 업로드\n\t\t\t\t\t</ImageUploadButton>\n\t\t\t\t\t<SubmitButton type=\"submit\">생성</SubmitButton>\n\t\t\t\t</ButtonWrapper>\n\t\t\t</Wrapper>\n\t\t</Form>\n\t);\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}