{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/components/CommentForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux'; // import { ADD_COMMENT_REQUEST } from '../actions';\n\nimport { addCommentRequest } from '../reducer/post';\nimport useInput from '../hooks/useInput';\nimport styled from 'styled-components';\nvar Form = styled.form.withConfig({\n  displayName: \"CommentForm__Form\",\n  componentId: \"oy06y7-0\"\n})([\"display:block;\"]);\nvar TextArea = styled.textarea.withConfig({\n  displayName: \"CommentForm__TextArea\",\n  componentId: \"oy06y7-1\"\n})([\"display:inline-block;\"]);\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      comment = _useInput2[0],\n      onChangeComment = _useInput2[1],\n      setComment = _useInput2[2];\n\n  var me = useSelector(function (state) {\n    return state.user.me;\n  });\n  var id = me && me.id;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      addCommentDone = _useSelector.addCommentDone;\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (addCommentDone) {\n      setComment('');\n    }\n  }, [addCommentDone]);\n  var onSubmitComment = useCallback(function (e) {\n    e.preventDefault();\n    dispatch(addCommentRequest({\n      content: comment,\n      postId: post.id,\n      userId: id\n    }));\n  }, [comment, id, dispatch, post]);\n  return __jsx(\"form\", {\n    onSubmit: onSubmitComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }\n  }, __jsx(\"textarea\", {\n    rows: \"4\",\n    value: comment,\n    onChange: onChangeComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }), __jsx(\"button\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }\n  }, \"\\uC0DD\\uC131\"));\n};\n\n_s(CommentForm, \"mpYpICKU12f0WRIxuH+kZR+H4uI=\", false, function () {\n  return [useInput, useSelector, useSelector, useDispatch];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: propTypes.object\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/components/CommentForm.js"],"names":["React","useState","useCallback","useEffect","propTypes","useSelector","useDispatch","addCommentRequest","useInput","styled","Form","form","TextArea","textarea","CommentForm","post","comment","onChangeComment","setComment","me","state","user","id","addCommentDone","dispatch","onSubmitComment","e","preventDefault","content","postId","userId","object"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,IAAI,GAAGD,MAAM,CAACE,IAAV;AAAA;AAAA;AAAA,sBAAV;AAGA,IAAMC,QAAQ,GAAGH,MAAM,CAACI,QAAV;AAAA;AAAA;AAAA,6BAAd;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACcP,QAAQ,CAAC,EAAD,CADtB;AAAA;AAAA,MAC1BQ,OAD0B;AAAA,MACjBC,eADiB;AAAA,MACAC,UADA;;AAEjC,MAAMC,EAAE,GAAGd,WAAW,CAAC,UAAAe,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWF,EAAf;AAAA,GAAN,CAAtB;AACA,MAAMG,EAAE,GAAGH,EAAE,IAAIA,EAAE,CAACG,EAApB;;AAHiC,qBAINjB,WAAW,CAAC,UAAAe,KAAK;AAAA,WAAIA,KAAK,CAACL,IAAV;AAAA,GAAN,CAJL;AAAA,MAIzBQ,cAJyB,gBAIzBA,cAJyB;;AAMjC,MAAMC,QAAQ,GAAGlB,WAAW,EAA5B;AACAH,EAAAA,SAAS,CAAC,YAAM;AACf,QAAIoB,cAAJ,EAAoB;AACnBL,MAAAA,UAAU,CAAC,EAAD,CAAV;AACA;AACD,GAJQ,EAIN,CAACK,cAAD,CAJM,CAAT;AAKA,MAAME,eAAe,GAAGvB,WAAW,CAClC,UAAAwB,CAAC,EAAI;AACJA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,QAAQ,CACPjB,iBAAiB,CAAC;AACjBqB,MAAAA,OAAO,EAAEZ,OADQ;AAEjBa,MAAAA,MAAM,EAAEd,IAAI,CAACO,EAFI;AAGjBQ,MAAAA,MAAM,EAAER;AAHS,KAAD,CADV,CAAR;AAOA,GAViC,EAWlC,CAACN,OAAD,EAAUM,EAAV,EAAcE,QAAd,EAAwBT,IAAxB,CAXkC,CAAnC;AAaA,SACC;AAAM,IAAA,QAAQ,EAAEU,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAU,IAAA,IAAI,EAAC,GAAf;AAAmB,IAAA,KAAK,EAAET,OAA1B;AAAmC,IAAA,QAAQ,EAAEC,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFD,CADD;AAMA,CA/BD;;GAAMH,W;UAC0CN,Q,EACpCH,W,EAEgBA,W,EAEVC,W;;;KANZQ,W;AAiCNA,WAAW,CAACV,SAAZ,GAAwB;AACvBW,EAAAA,IAAI,EAAEX,SAAS,CAAC2B;AADO,CAAxB;AAGA,eAAejB,WAAf","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n// import { ADD_COMMENT_REQUEST } from '../actions';\nimport { addCommentRequest } from '../reducer/post';\nimport useInput from '../hooks/useInput';\nimport styled from 'styled-components';\n\nconst Form = styled.form`\n\tdisplay: block;\n`;\nconst TextArea = styled.textarea`\n\tdisplay: inline-block;\n`;\nconst CommentForm = ({ post }) => {\n\tconst [comment, onChangeComment, setComment] = useInput('');\n\tconst me = useSelector(state => state.user.me);\n\tconst id = me && me.id;\n\tconst { addCommentDone } = useSelector(state => state.post);\n\n\tconst dispatch = useDispatch();\n\tuseEffect(() => {\n\t\tif (addCommentDone) {\n\t\t\tsetComment('');\n\t\t}\n\t}, [addCommentDone]);\n\tconst onSubmitComment = useCallback(\n\t\te => {\n\t\t\te.preventDefault();\n\t\t\tdispatch(\n\t\t\t\taddCommentRequest({\n\t\t\t\t\tcontent: comment,\n\t\t\t\t\tpostId: post.id,\n\t\t\t\t\tuserId: id,\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t\t[comment, id, dispatch, post],\n\t);\n\treturn (\n\t\t<form onSubmit={onSubmitComment}>\n\t\t\t<textarea rows=\"4\" value={comment} onChange={onChangeComment}></textarea>\n\t\t\t<button>생성</button>\n\t\t</form>\n\t);\n};\n\nCommentForm.propTypes = {\n\tpost: propTypes.object,\n};\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}