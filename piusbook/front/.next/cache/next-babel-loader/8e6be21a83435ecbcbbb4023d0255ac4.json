{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/components/CommentForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport propTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../actions';\nimport { addCommentRequest } from '../reducer/post';\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useState = useState(''),\n      comment = _useState[0],\n      setComment = _useState[1];\n\n  var me = useSelector(function (state) {\n    return state.user.me;\n  });\n  var id = me && me.id;\n  var dispatch = useDispatch();\n  var onChangeComment = useCallback(function (e) {\n    setComment(e.target.value);\n  }, []);\n  var onSubmitComment = useCallback(function (e) {\n    e.preventDefault();\n    dispatch(addCommentRequest({\n      content: comment,\n      postId: post.id,\n      userId: id\n    }));\n  }, [comment, id, dispatch, post]);\n  return __jsx(\"form\", {\n    onSubmit: onSubmitComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }, __jsx(\"textarea\", {\n    rows: \"4\",\n    value: comment,\n    onChange: onChangeComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }\n  }), __jsx(\"button\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }\n  }, \"\\uC0DD\\uC131\"));\n};\n\n_s(CommentForm, \"9bL50ClXklOmmeQgA6eaoObA+bA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: propTypes.object\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/components/CommentForm.js"],"names":["React","useState","useCallback","propTypes","useSelector","useDispatch","ADD_COMMENT_REQUEST","addCommentRequest","CommentForm","post","comment","setComment","me","state","user","id","dispatch","onChangeComment","e","target","value","onSubmitComment","preventDefault","content","postId","userId","object"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,YAApC;AACA,SAASC,iBAAT,QAAkC,iBAAlC;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACHR,QAAQ,CAAC,EAAD,CADL;AAAA,MAC1BS,OAD0B;AAAA,MACjBC,UADiB;;AAEjC,MAAMC,EAAE,GAAGR,WAAW,CAAC,UAAAS,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWF,EAAf;AAAA,GAAN,CAAtB;AACA,MAAMG,EAAE,GAAGH,EAAE,IAAIA,EAAE,CAACG,EAApB;AAEA,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAEA,MAAMY,eAAe,GAAGf,WAAW,CAAC,UAAAgB,CAAC,EAAI;AACxCP,IAAAA,UAAU,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACA,GAFkC,EAEhC,EAFgC,CAAnC;AAGA,MAAMC,eAAe,GAAGnB,WAAW,CAClC,UAAAgB,CAAC,EAAI;AACJA,IAAAA,CAAC,CAACI,cAAF;AACAN,IAAAA,QAAQ,CACPT,iBAAiB,CAAC;AACjBgB,MAAAA,OAAO,EAAEb,OADQ;AAEjBc,MAAAA,MAAM,EAAEf,IAAI,CAACM,EAFI;AAGjBU,MAAAA,MAAM,EAAEV;AAHS,KAAD,CADV,CAAR;AAOA,GAViC,EAWlC,CAACL,OAAD,EAAUK,EAAV,EAAcC,QAAd,EAAwBP,IAAxB,CAXkC,CAAnC;AAaA,SACC;AAAM,IAAA,QAAQ,EAAEY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAU,IAAA,IAAI,EAAC,GAAf;AAAmB,IAAA,KAAK,EAAEX,OAA1B;AAAmC,IAAA,QAAQ,EAAEO,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFD,CADD;AAMA,CA7BD;;GAAMT,W;UAEMJ,W,EAGMC,W;;;KALZG,W;AA+BNA,WAAW,CAACL,SAAZ,GAAwB;AACvBM,EAAAA,IAAI,EAAEN,SAAS,CAACuB;AADO,CAAxB;AAGA,eAAelB,WAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport propTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../actions';\nimport { addCommentRequest } from '../reducer/post';\nconst CommentForm = ({ post }) => {\n\tconst [comment, setComment] = useState('');\n\tconst me = useSelector(state => state.user.me);\n\tconst id = me && me.id;\n\n\tconst dispatch = useDispatch();\n\n\tconst onChangeComment = useCallback(e => {\n\t\tsetComment(e.target.value);\n\t}, []);\n\tconst onSubmitComment = useCallback(\n\t\te => {\n\t\t\te.preventDefault();\n\t\t\tdispatch(\n\t\t\t\taddCommentRequest({\n\t\t\t\t\tcontent: comment,\n\t\t\t\t\tpostId: post.id,\n\t\t\t\t\tuserId: id,\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t\t[comment, id, dispatch, post],\n\t);\n\treturn (\n\t\t<form onSubmit={onSubmitComment}>\n\t\t\t<textarea rows=\"4\" value={comment} onChange={onChangeComment}></textarea>\n\t\t\t<button>생성</button>\n\t\t</form>\n\t);\n};\n\nCommentForm.propTypes = {\n\tpost: propTypes.object,\n};\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}