{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/pages/user/[id].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Head from 'next/head';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, Avatar } from 'antd';\nimport { LOAD_A_POST_REQUEST, LOAD_USER_POSTS_REQUEST } from '../../actions';\nimport PostCard from '../../components/PostCard';\nimport AppLayout from '../../components/AppLayout';\nimport { useRouter } from 'next/dist/client/router';\n\nvar User = function User() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      userInfo = _useSelector.userInfo;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePosts = _useSelector2.hasMorePosts,\n      loadPostLoading = _useSelector2.loadPostLoading;\n\n  var router = useRouter();\n  var id = router.query.id;\n  useEffect(function () {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight + 300 > document.documentElement.scrollHeight && hasMorePosts && !loadPostLoading) {\n        // 마지막 mainPosts의 id\n        var lastId = mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id;\n        console.log('lastId', lastId);\n        dispatch({\n          type: LOAD_USER_POSTS_REQUEST,\n          lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\n          data: id\n        });\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePosts, loadPostLoading, mainPosts]);\n  return __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, userInfo.nickname, \"\\uB2D8\\uC758 \\uAE00\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"\".concat(userInfo.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: \"\".concat(userInfo.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: \"\".concat(userInfo.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: \"https://nodebird.com/favicon.ico\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: \"https://nodebird.com/user/\".concat(id),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  })), userInfo ? __jsx(Card, {\n    actions: [__jsx(\"div\", {\n      key: \"twit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, \"\\uC9F9\\uC9F9\", __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 8\n      }\n    }), userInfo.Posts), __jsx(\"div\", {\n      key: \"following\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, \"\\uD314\\uB85C\\uC789\", __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 8\n      }\n    }), userInfo.Followings), __jsx(\"div\", {\n      key: \"follower\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, \"\\uD314\\uB85C\\uC6CC\", __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 8\n      }\n    }), userInfo.Followers)],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, userInfo.nickname[0]),\n    title: userInfo.nickname,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 6\n    }\n  })) : null, mainPosts.map(function (c) {\n    return __jsx(PostCard, {\n      key: c.id,\n      post: c,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }\n    });\n  }));\n};\n\n_s(User, \"O7c+68BnWt1u5xXrKahGLNGIA+Q=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useRouter];\n});\n\n_c = User;\nexport var __N_SSP = true;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/pages/user/[id].js"],"names":["React","useEffect","Head","useSelector","useDispatch","Card","Avatar","LOAD_A_POST_REQUEST","LOAD_USER_POSTS_REQUEST","PostCard","AppLayout","useRouter","User","dispatch","state","user","userInfo","post","mainPosts","hasMorePosts","loadPostLoading","router","id","query","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","console","log","type","data","addEventListener","removeEventListener","nickname","Posts","Followings","Followers","map","c"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,MAA7B;AACA,SACCC,mBADD,EAGCC,uBAHD,QAIO,eAJP;AAKA,OAAOC,QAAP,MAAqB,2BAArB;AAGA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,SAAT,QAA0B,yBAA1B;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AAClB,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AADkB,qBAEGD,WAAW,CAAC,UAAAW,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAFd;AAAA,MAEVC,QAFU,gBAEVA,QAFU;;AAAA,sBAGmCb,WAAW,CAC/D,UAAAW,KAAK;AAAA,WAAIA,KAAK,CAACG,IAAV;AAAA,GAD0D,CAH9C;AAAA,MAGVC,SAHU,iBAGVA,SAHU;AAAA,MAGCC,YAHD,iBAGCA,YAHD;AAAA,MAGeC,eAHf,iBAGeA,eAHf;;AAMlB,MAAMC,MAAM,GAAGV,SAAS,EAAxB;AACA,MAAMW,EAAE,GAAGD,MAAM,CAACE,KAAP,CAAaD,EAAxB;AAEArB,EAAAA,SAAS,CAAC,YAAM;AACf,aAASuB,QAAT,GAAoB;AACnB,UACCC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyD,GAAzD,GACCF,QAAQ,CAACC,eAAT,CAAyBE,YAD1B,IAEAX,YAFA,IAGA,CAACC,eAJF,EAKE;AACD;AACA,YAAMW,MAAM,GACXb,SAAS,CAACA,SAAS,CAACc,MAAV,GAAmB,CAApB,CAAT,IAAmCd,SAAS,CAACA,SAAS,CAACc,MAAV,GAAmB,CAApB,CAAT,CAAgCV,EADpE;AAEAW,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,MAAtB;AACAlB,QAAAA,QAAQ,CAAC;AACRsB,UAAAA,IAAI,EAAE3B,uBADE;AAERuB,UAAAA,MAAM,EACLb,SAAS,CAACA,SAAS,CAACc,MAAV,GAAmB,CAApB,CAAT,IACAd,SAAS,CAACA,SAAS,CAACc,MAAV,GAAmB,CAApB,CAAT,CAAgCV,EAJzB;AAKRc,UAAAA,IAAI,EAAEd;AALE,SAAD,CAAR;AAOA;AACD;;AACDG,IAAAA,MAAM,CAACY,gBAAP,CAAwB,QAAxB,EAAkCb,QAAlC;AACA,WAAO,YAAM;AACZC,MAAAA,MAAM,CAACa,mBAAP,CAA2B,QAA3B,EAAqCd,QAArC;AACA,KAFD;AAGA,GAzBQ,EAyBN,CAACL,YAAD,EAAeC,eAAf,EAAgCF,SAAhC,CAzBM,CAAT;AA0BA,SACC,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEF,QAAQ,CAACuB,QADX,wBADD,EAKC;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,YAAKvB,QAAQ,CAACuB,QAAd,oCAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,EAMC;AAAM,IAAA,QAAQ,EAAC,UAAf;AAA0B,IAAA,OAAO,YAAKvB,QAAQ,CAACuB,QAAd,oCAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAND,EAOC;AACC,IAAA,QAAQ,EAAC,gBADV;AAEC,IAAA,OAAO,YAAKvB,QAAQ,CAACuB,QAAd,oCAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPD,EAWC;AAAM,IAAA,QAAQ,EAAC,UAAf;AAA0B,IAAA,OAAO,EAAC,kCAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXD,EAYC;AAAM,IAAA,QAAQ,EAAC,QAAf;AAAwB,IAAA,OAAO,sCAA+BjB,EAA/B,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZD,CADD,EAeEN,QAAQ,GACR,MAAC,IAAD;AACC,IAAA,OAAO,EAAE,CACR;AAAK,MAAA,GAAG,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAGEA,QAAQ,CAACwB,KAHX,CADQ,EAMR;AAAK,MAAA,GAAG,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAGExB,QAAQ,CAACyB,UAHX,CANQ,EAWR;AAAK,MAAA,GAAG,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAGEzB,QAAQ,CAAC0B,SAHX,CAXQ,CADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAmBC,MAAC,IAAD,CAAM,IAAN;AACC,IAAA,MAAM,EAAE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAS1B,QAAQ,CAACuB,QAAT,CAAkB,CAAlB,CAAT,CADT;AAEC,IAAA,KAAK,EAAEvB,QAAQ,CAACuB,QAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBD,CADQ,GAyBL,IAxCL,EAyCErB,SAAS,CAACyB,GAAV,CAAc,UAAAC,CAAC;AAAA,WACf,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,CAAC,CAACtB,EAAjB;AAAqB,MAAA,IAAI,EAAEsB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADe;AAAA,GAAf,CAzCF,CADD;AA+CA,CAlFD;;GAAMhC,I;UACYR,W,EACID,W,EACgCA,W,EAGtCQ,S;;;KANVC,I;;AAoFN,eAAeA,IAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport wrapper from '../../store/configureStore';\nimport Head from 'next/head';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, Avatar } from 'antd';\nimport {\n\tLOAD_A_POST_REQUEST,\n\tLOAD_MY_INFO_REQUEST,\n\tLOAD_USER_POSTS_REQUEST,\n} from '../../actions';\nimport PostCard from '../../components/PostCard';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport AppLayout from '../../components/AppLayout';\nimport { useRouter } from 'next/dist/client/router';\nconst User = () => {\n\tconst dispatch = useDispatch();\n\tconst { userInfo } = useSelector(state => state.user);\n\tconst { mainPosts, hasMorePosts, loadPostLoading } = useSelector(\n\t\tstate => state.post,\n\t);\n\tconst router = useRouter();\n\tconst id = router.query.id;\n\n\tuseEffect(() => {\n\t\tfunction onScroll() {\n\t\t\tif (\n\t\t\t\twindow.scrollY + document.documentElement.clientHeight + 300 >\n\t\t\t\t\tdocument.documentElement.scrollHeight &&\n\t\t\t\thasMorePosts &&\n\t\t\t\t!loadPostLoading\n\t\t\t) {\n\t\t\t\t// 마지막 mainPosts의 id\n\t\t\t\tconst lastId =\n\t\t\t\t\tmainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id;\n\t\t\t\tconsole.log('lastId', lastId);\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: LOAD_USER_POSTS_REQUEST,\n\t\t\t\t\tlastId:\n\t\t\t\t\t\tmainPosts[mainPosts.length - 1] &&\n\t\t\t\t\t\tmainPosts[mainPosts.length - 1].id,\n\t\t\t\t\tdata: id,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\twindow.addEventListener('scroll', onScroll);\n\t\treturn () => {\n\t\t\twindow.removeEventListener('scroll', onScroll);\n\t\t};\n\t}, [hasMorePosts, loadPostLoading, mainPosts]);\n\treturn (\n\t\t<AppLayout>\n\t\t\t<Head>\n\t\t\t\t<title>\n\t\t\t\t\t{userInfo.nickname}\n\t\t\t\t\t님의 글\n\t\t\t\t</title>\n\t\t\t\t<meta name=\"description\" content={`${userInfo.nickname}님의 게시글`} />\n\t\t\t\t<meta property=\"og:title\" content={`${userInfo.nickname}님의 게시글`} />\n\t\t\t\t<meta\n\t\t\t\t\tproperty=\"og:description\"\n\t\t\t\t\tcontent={`${userInfo.nickname}님의 게시글`}\n\t\t\t\t/>\n\t\t\t\t<meta property=\"og:image\" content=\"https://nodebird.com/favicon.ico\" />\n\t\t\t\t<meta property=\"og:url\" content={`https://nodebird.com/user/${id}`} />\n\t\t\t</Head>\n\t\t\t{userInfo ? (\n\t\t\t\t<Card\n\t\t\t\t\tactions={[\n\t\t\t\t\t\t<div key=\"twit\">\n\t\t\t\t\t\t\t짹짹\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t{userInfo.Posts}\n\t\t\t\t\t\t</div>,\n\t\t\t\t\t\t<div key=\"following\">\n\t\t\t\t\t\t\t팔로잉\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t{userInfo.Followings}\n\t\t\t\t\t\t</div>,\n\t\t\t\t\t\t<div key=\"follower\">\n\t\t\t\t\t\t\t팔로워\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t{userInfo.Followers}\n\t\t\t\t\t\t</div>,\n\t\t\t\t\t]}\n\t\t\t\t>\n\t\t\t\t\t<Card.Meta\n\t\t\t\t\t\tavatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\n\t\t\t\t\t\ttitle={userInfo.nickname}\n\t\t\t\t\t/>\n\t\t\t\t</Card>\n\t\t\t) : null}\n\t\t\t{mainPosts.map(c => (\n\t\t\t\t<PostCard key={c.id} post={c} />\n\t\t\t))}\n\t\t</AppLayout>\n\t);\n};\n\nexport default User;\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n\tasync ({ store, req }) => {\n\t\tconst cookie = req ? req.headers.cookie : '';\n\t\taxios.defaults.headers.Cookie = '';\n\t\tif (req && cookie) {\n\t\t\taxios.defaults.headers.Cookie = cookie;\n\t\t}\n\t\tstore.dispatch({\n\t\t\ttype: LOAD_USER_POSTS_REQUEST,\n\t\t});\n\t\tcontext.store.dispatch({\n\t\t\ttype: LOAD_USER_REQUEST,\n\t\t\tdata: context.params.id,\n\t\t});\n\t\tstore.dispatch({\n\t\t\ttype: LOAD_MY_INFO_REQUEST,\n\t\t});\n\t\tstore.dispatch(END);\n\t\tawait store.sagaTask.toPromise();\n\t},\n);\n"]},"metadata":{},"sourceType":"module"}