{"ast":null,"code":"var _jsxFileName = \"/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/pages/hashtag/[tag].js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { END } from 'redux-saga';\nimport AppLayout from '../../components/AppLayout';\nimport PostForm from '../../components/PostForm';\nimport PostCard from '../../components/PostCard';\nimport { LOAD_POST_REQUEST, LOAD_MY_INFO_REQUEST, LOAD_HASHTAG_POSTS_REQUEST } from '../../actions';\nimport wrapper from '../../store/configureStore';\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\n\nconst Hashtag = () => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostLoading\n  } = useSelector(state => state.post);\n  const router = useRouter();\n  const {\n    tag\n  } = router.query;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight + 300 > document.documentElement.scrollHeight && hasMorePosts && !loadPostLoading) {\n        // 마지막 mainPosts의 id\n        const lastId = mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id;\n        console.log('lastId', lastId);\n        dispatch({\n          type: LOAD_HASHTAG_POSTS_REQUEST,\n          data: lastId\n        });\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePosts, loadPostLoading, mainPosts]);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }\n  }, me && __jsx(PostForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), mainPosts.map((post, index) => __jsx(PostCard, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  })));\n}; // AppLayout 안에 있는 것이 children이 되는 것.\n\n\nexport default Hashtag;\nexport const getServerSideProps = wrapper.getServerSideProps(async ({\n  store,\n  req,\n  params\n}) => {\n  const cookie = req ? req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  store.dispatch({\n    type: LOAD_HASHTAG_POSTS_REQUEST,\n    data: params.tag\n  });\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/pages/hashtag/[tag].js"],"names":["React","useEffect","useSelector","useDispatch","END","AppLayout","PostForm","PostCard","LOAD_POST_REQUEST","LOAD_MY_INFO_REQUEST","LOAD_HASHTAG_POSTS_REQUEST","wrapper","axios","useRouter","Hashtag","me","state","user","mainPosts","hasMorePosts","loadPostLoading","post","router","tag","query","dispatch","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","console","log","type","data","addEventListener","removeEventListener","map","index","getServerSideProps","store","req","params","cookie","headers","defaults","Cookie","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { END } from 'redux-saga';\nimport AppLayout from '../../components/AppLayout';\nimport PostForm from '../../components/PostForm';\nimport PostCard from '../../components/PostCard';\nimport {\n\tLOAD_POST_REQUEST,\n\tLOAD_MY_INFO_REQUEST,\n\tLOAD_HASHTAG_POSTS_REQUEST,\n} from '../../actions';\nimport wrapper from '../../store/configureStore';\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nconst Hashtag = () => {\n\tconst { me } = useSelector(state => state.user);\n\tconst { mainPosts, hasMorePosts, loadPostLoading } = useSelector(\n\t\tstate => state.post,\n\t);\n\tconst router = useRouter();\n\tconst { tag } = router.query;\n\tconst dispatch = useDispatch();\n\tuseEffect(() => {\n\t\tfunction onScroll() {\n\t\t\tif (\n\t\t\t\twindow.scrollY + document.documentElement.clientHeight + 300 >\n\t\t\t\t\tdocument.documentElement.scrollHeight &&\n\t\t\t\thasMorePosts &&\n\t\t\t\t!loadPostLoading\n\t\t\t) {\n\t\t\t\t// 마지막 mainPosts의 id\n\t\t\t\tconst lastId =\n\t\t\t\t\tmainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id;\n\t\t\t\tconsole.log('lastId', lastId);\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: LOAD_HASHTAG_POSTS_REQUEST,\n\t\t\t\t\tdata: lastId,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\twindow.addEventListener('scroll', onScroll);\n\t\treturn () => {\n\t\t\twindow.removeEventListener('scroll', onScroll);\n\t\t};\n\t}, [hasMorePosts, loadPostLoading, mainPosts]);\n\treturn (\n\t\t<AppLayout>\n\t\t\t{me && <PostForm></PostForm>}\n\t\t\t{mainPosts.map((post, index) => (\n\t\t\t\t<PostCard key={post.id} post={post}></PostCard>\n\t\t\t))}\n\t\t</AppLayout>\n\t);\n};\n// AppLayout 안에 있는 것이 children이 되는 것.\nexport default Hashtag;\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n\tasync ({ store, req, params }) => {\n\t\tconst cookie = req ? req.headers.cookie : '';\n\t\taxios.defaults.headers.Cookie = '';\n\t\tif (req && cookie) {\n\t\t\taxios.defaults.headers.Cookie = cookie;\n\t\t}\n\t\tstore.dispatch({\n\t\t\ttype: LOAD_HASHTAG_POSTS_REQUEST,\n\t\t\tdata: params.tag,\n\t\t});\n\t\tstore.dispatch({\n\t\t\ttype: LOAD_MY_INFO_REQUEST,\n\t\t});\n\t\tstore.dispatch(END);\n\t\tawait store.sagaTask.toPromise();\n\t},\n);\n"]},"metadata":{},"sourceType":"module"}