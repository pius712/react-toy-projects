{"ast":null,"code":"import produce from 'immer'; // import faker from 'faker';\n// import shortid from 'shortid';\n\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, ADD_POST_TO_ME, REMOVE_POST_OF_MINE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE } from '../actions';\nexport var initialState = {\n  mainPosts: [// {\n    // \tid: shortid.generate(),\n    // \tUser: {\n    // \t\tid: 1,\n    // \t\tnickname: 'pius',\n    // \t},\n    // \tcontent: '#Hello#react made by #pius ',\n    // \tImages: [\n    // \t\t{\n    // \t\t\tid: shortid.generate(),\n    // \t\t\tsrc:\n    // \t\t\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRL13vWu8GOWHAFISKo9v5oBEU75C9udknN2w&usqp=CAU',\n    // \t\t},\n    // \t\t{\n    // \t\t\tid: shortid.generate(),\n    // \t\t\tsrc:\n    // \t\t\t\t'https://i.pinimg.com/736x/0b/2f/8a/0b2f8a51314ab1ebe0505aee843a33b1.jpg',\n    // \t\t},\n    // \t\t{\n    // \t\t\tid: shortid.generate(),\n    // \t\t\tsrc:\n    // \t\t\t\t'https://pbs.twimg.com/profile_images/1256251357763235842/zY8KO59p_400x400.jpg',\n    // \t\t},\n    // \t],\n    // \tComments: [\n    // \t\t{\n    // \t\t\tid: shortid.generate(),\n    // \t\t\tUser: {\n    // \t\t\t\tid: shortid.generate(),\n    // \t\t\t\tnickname: 'aksfbs',\n    // \t\t\t},\n    // \t\t\tcontent: '안녕하세요',\n    // \t\t},\n    // \t],\n    // Likers: []\n    // },\n  ],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  hasMorePosts: true,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null\n}; // export const generateDummyPost = num =>\n// \tArray(num)\n// \t\t.fill()\n// \t\t.map((item, idx) => ({\n// \t\t\tid: shortid.generate(),\n// \t\t\tUser: {\n// \t\t\t\tid: shortid.generate(),\n// \t\t\t\tnickname: faker.name.findName(),\n// \t\t\t},\n// \t\t\tcontent: faker.lorem.paragraph(),\n// \t\t\tImages: [],\n// \t\t\tComments: [\n// \t\t\t\t{\n// \t\t\t\t\tid: shortid.generate(),\n// \t\t\t\t\tUser: {\n// \t\t\t\t\t\tid: shortid.generate(),\n// \t\t\t\t\t\tnickname: faker.name.findName(),\n// \t\t\t\t\t},\n// \t\t\t\t\tcontent: faker.lorem.paragraph(),\n// \t\t\t\t},\n// \t\t\t],\n// \t\t}));\n// initialState.mainPosts = initialState.mainPosts.concat(\n// \tArray(20)\n// \t\t.fill()\n// \t\t.map((item, idx) => ({\n// \t\t\tid: shortid.generate(),\n// \t\t\tUser: {\n// \t\t\t\tid: shortid.generate(),\n// \t\t\t\tnickname: faker.name.findName(),\n// \t\t\t},\n// \t\t\tcontent: faker.lorem.paragraph(),\n// \t\t\tImages: [],\n// \t\t\tComments: [\n// \t\t\t\t{\n// \t\t\t\t\tid: shortid.generate(),\n// \t\t\t\t\tUser: {\n// \t\t\t\t\t\tid: shortid.generate(),\n// \t\t\t\t\t\tnickname: faker.name.findName(),\n// \t\t\t\t\t},\n// \t\t\t\t\tcontent: faker.lorem.paragraph(),\n// \t\t\t\t},\n// \t\t\t],\n// \t\t})),\n// );\n// const dummyPost = data => ({\n// \tid: data.id,\n// \tUser: {\n// \t\tid: 1,\n// \t\tnickname: 'pius',\n// \t},\n// \tcontent: data.content,\n// \tImage: [],\n// \tComments: [],\n// });\n// const dummyComment = data => ({\n// \tid: shortid.generate(),\n// \tUser: {\n// \t\tnickname: 'aksfbs',\n// \t},\n// \tcontent: data,\n// });\n\nexport var addPostRequest = function addPostRequest(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var removePostRequest = function removePostRequest(data) {\n  return {\n    type: REMOVE_POST_REQUEST,\n    data: data\n  };\n};\nexport var addCommentRequest = function addCommentRequest(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draftState) {\n    switch (action.type) {\n      // POST\n      case ADD_POST_REQUEST:\n        draftState.addPostLoading = true;\n        draftState.addPostDone = false;\n        break;\n\n      case ADD_POST_SUCCESS:\n        // draftState.mainPosts.unshift(dummyPost(action.data));\n        draftState.mainPosts.unshift(action.data);\n        draftState.addPostLoading = false;\n        draftState.addPostDone = true;\n        break;\n\n      case ADD_POST_FAILURE:\n        draftState.addPostError = action.error;\n        break;\n      // Comment\n\n      case ADD_COMMENT_REQUEST:\n        draftState.addCommentLoading = true;\n        draftState.addCommentDone = false;\n        draftState.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          //action.data.content, postId, userId\n          // comment form에서 comment를 추가할때,\n          // store에 있는 mainPosts를 찾아서 추가해준다.\n          var idx = draftState.mainPosts.findIndex(function (item) {\n            return item.id === action.data.PostId;\n          });\n          console.log('idx', idx);\n          console.log(action.data);\n          draftState.mainPosts[idx].Comments.unshift(action.data // dummyComment(action.data.content),\n          );\n          draftState.addCommentLoading = false;\n          draftState.addCommentDone = true;\n          break;\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draftState.addCommentError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draftState.removePostLoading = true;\n        draftState.removePostDone = false;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draftState.removePostLoading = false;\n        draftState.removePostDone = true;\n        draftState.mainPosts = draftState.mainPosts.filter(function (item) {\n          return item.id !== action.data;\n        });\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draftState.removePostLoading = false;\n        draftState.removePostError = action.data;\n        break;\n\n      case LOAD_POST_REQUEST:\n        draftState.loadPostLoading = true;\n        draftState.loadPostDone = false;\n        break;\n\n      case LOAD_POST_SUCCESS:\n        draftState.loadPostLoading = false;\n        draftState.loadPostDone = true;\n        console.log(action.data);\n        draftState.mainPosts = action.data.concat(draftState.mainPosts);\n        draftState.hasMorePosts = draftState.mainPosts.length < 30;\n        break;\n\n      case LOAD_POST_FAILURE:\n        draftState.loadPostError = action.data;\n        break;\n      // 좋아요 버튼\n\n      case LIKE_POST_REQUEST:\n        draftState.likePostLoading = true;\n        draftState.likePostDone = false;\n        break;\n\n      case LIKE_POST_SUCCESS:\n        {\n          var _idx = draftState.mainPosts.findIndex(function (item) {\n            return item.id === action.data.PostId;\n          });\n\n          draftState.mainPosts[_idx].Likers.push({\n            id: action.data.UserId\n          });\n\n          draftState.likePostLoading = false;\n          draftState.likePostDone = true;\n          break;\n        }\n\n      case LIKE_POST_FAILURE:\n        draftState.likePostError = action.error;\n        break;\n      // 좋아요 버튼 취소\n\n      case UNLIKE_POST_REQUEST:\n        draftState.unlikePostLoading = true;\n        draftState.unlikePostDone = false;\n        break;\n\n      case UNLIKE_POST_SUCCESS:\n        {\n          // draftState.mainPosts.unshift(dummyPost(action.data));\n          var _idx2 = draftState.mainPosts.findIndex(function (item) {\n            return item.id === action.data.PostId;\n          });\n\n          var userIdx = draftState.mainPosts[_idx2].Likers.findIndex(function (user) {\n            return user.id === action.data.UserId;\n          });\n\n          draftState.mainPosts[_idx2].Likers.splice(userIdx, 1);\n\n          draftState.unlikePostLoading = false;\n          draftState.unlikePostDone = true;\n          break;\n        }\n\n      case UNLIKE_POST_FAILURE:\n        draftState.unlikePostError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/reducer/post.js"],"names":["produce","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_MINE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","initialState","mainPosts","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","removePostLoading","removePostDone","removePostError","loadPostLoading","loadPostDone","loadPostError","hasMorePosts","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","addPostRequest","data","type","removePostRequest","addCommentRequest","reducer","state","action","draftState","unshift","error","idx","findIndex","item","id","PostId","console","log","Comments","filter","concat","length","Likers","push","UserId","userIdx","user","splice"],"mappings":"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","sourcesContent":["import produce from 'immer';\n// import faker from 'faker';\n// import shortid from 'shortid';\nimport {\n\tADD_POST_REQUEST,\n\tADD_POST_SUCCESS,\n\tADD_POST_FAILURE,\n\tADD_COMMENT_REQUEST,\n\tADD_COMMENT_SUCCESS,\n\tADD_COMMENT_FAILURE,\n\tADD_POST_TO_ME,\n\tREMOVE_POST_OF_MINE,\n\tREMOVE_POST_REQUEST,\n\tREMOVE_POST_SUCCESS,\n\tREMOVE_POST_FAILURE,\n\tLOAD_POST_REQUEST,\n\tLOAD_POST_SUCCESS,\n\tLOAD_POST_FAILURE,\n\tLIKE_POST_REQUEST,\n\tLIKE_POST_SUCCESS,\n\tLIKE_POST_FAILURE,\n\tUNLIKE_POST_REQUEST,\n\tUNLIKE_POST_SUCCESS,\n\tUNLIKE_POST_FAILURE,\n} from '../actions';\n\nexport const initialState = {\n\tmainPosts: [\n\t\t// {\n\t\t// \tid: shortid.generate(),\n\t\t// \tUser: {\n\t\t// \t\tid: 1,\n\t\t// \t\tnickname: 'pius',\n\t\t// \t},\n\t\t// \tcontent: '#Hello#react made by #pius ',\n\t\t// \tImages: [\n\t\t// \t\t{\n\t\t// \t\t\tid: shortid.generate(),\n\t\t// \t\t\tsrc:\n\t\t// \t\t\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRL13vWu8GOWHAFISKo9v5oBEU75C9udknN2w&usqp=CAU',\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\tid: shortid.generate(),\n\t\t// \t\t\tsrc:\n\t\t// \t\t\t\t'https://i.pinimg.com/736x/0b/2f/8a/0b2f8a51314ab1ebe0505aee843a33b1.jpg',\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\tid: shortid.generate(),\n\t\t// \t\t\tsrc:\n\t\t// \t\t\t\t'https://pbs.twimg.com/profile_images/1256251357763235842/zY8KO59p_400x400.jpg',\n\t\t// \t\t},\n\t\t// \t],\n\t\t// \tComments: [\n\t\t// \t\t{\n\t\t// \t\t\tid: shortid.generate(),\n\t\t// \t\t\tUser: {\n\t\t// \t\t\t\tid: shortid.generate(),\n\t\t// \t\t\t\tnickname: 'aksfbs',\n\t\t// \t\t\t},\n\t\t// \t\t\tcontent: '안녕하세요',\n\t\t// \t\t},\n\t\t// \t],\n\t\t// Likers: []\n\t\t// },\n\t],\n\timagePaths: [],\n\taddPostLoading: false,\n\taddPostDone: false,\n\taddPostError: null,\n\taddCommentLoading: false,\n\taddCommentDone: false,\n\taddCommentError: null,\n\tremovePostLoading: false,\n\tremovePostDone: false,\n\tremovePostError: null,\n\tloadPostLoading: false,\n\tloadPostDone: false,\n\tloadPostError: null,\n\thasMorePosts: true,\n\tlikePostLoading: false,\n\tlikePostDone: false,\n\tlikePostError: null,\n\tunlikePostLoading: false,\n\tunlikePostDone: false,\n\tunlikePostError: null,\n};\n// export const generateDummyPost = num =>\n// \tArray(num)\n// \t\t.fill()\n// \t\t.map((item, idx) => ({\n// \t\t\tid: shortid.generate(),\n// \t\t\tUser: {\n// \t\t\t\tid: shortid.generate(),\n// \t\t\t\tnickname: faker.name.findName(),\n// \t\t\t},\n// \t\t\tcontent: faker.lorem.paragraph(),\n// \t\t\tImages: [],\n// \t\t\tComments: [\n// \t\t\t\t{\n// \t\t\t\t\tid: shortid.generate(),\n// \t\t\t\t\tUser: {\n// \t\t\t\t\t\tid: shortid.generate(),\n// \t\t\t\t\t\tnickname: faker.name.findName(),\n// \t\t\t\t\t},\n// \t\t\t\t\tcontent: faker.lorem.paragraph(),\n// \t\t\t\t},\n// \t\t\t],\n// \t\t}));\n// initialState.mainPosts = initialState.mainPosts.concat(\n// \tArray(20)\n// \t\t.fill()\n// \t\t.map((item, idx) => ({\n// \t\t\tid: shortid.generate(),\n// \t\t\tUser: {\n// \t\t\t\tid: shortid.generate(),\n// \t\t\t\tnickname: faker.name.findName(),\n// \t\t\t},\n// \t\t\tcontent: faker.lorem.paragraph(),\n// \t\t\tImages: [],\n// \t\t\tComments: [\n// \t\t\t\t{\n// \t\t\t\t\tid: shortid.generate(),\n// \t\t\t\t\tUser: {\n// \t\t\t\t\t\tid: shortid.generate(),\n// \t\t\t\t\t\tnickname: faker.name.findName(),\n// \t\t\t\t\t},\n// \t\t\t\t\tcontent: faker.lorem.paragraph(),\n// \t\t\t\t},\n// \t\t\t],\n// \t\t})),\n// );\n// const dummyPost = data => ({\n// \tid: data.id,\n// \tUser: {\n// \t\tid: 1,\n// \t\tnickname: 'pius',\n// \t},\n// \tcontent: data.content,\n// \tImage: [],\n// \tComments: [],\n// });\n\n// const dummyComment = data => ({\n// \tid: shortid.generate(),\n// \tUser: {\n// \t\tnickname: 'aksfbs',\n// \t},\n// \tcontent: data,\n// });\n\nexport const addPostRequest = data => {\n\treturn {\n\t\ttype: ADD_POST_REQUEST,\n\t\tdata: data,\n\t};\n};\n\nexport const removePostRequest = data => {\n\treturn {\n\t\ttype: REMOVE_POST_REQUEST,\n\t\tdata: data,\n\t};\n};\nexport const addCommentRequest = data => {\n\treturn {\n\t\ttype: ADD_COMMENT_REQUEST,\n\t\tdata: data,\n\t};\n};\n\nconst reducer = (state = initialState, action) => {\n\treturn produce(state, draftState => {\n\t\tswitch (action.type) {\n\t\t\t// POST\n\t\t\tcase ADD_POST_REQUEST:\n\t\t\t\tdraftState.addPostLoading = true;\n\t\t\t\tdraftState.addPostDone = false;\n\t\t\t\tbreak;\n\n\t\t\tcase ADD_POST_SUCCESS:\n\t\t\t\t// draftState.mainPosts.unshift(dummyPost(action.data));\n\t\t\t\tdraftState.mainPosts.unshift(action.data);\n\t\t\t\tdraftState.addPostLoading = false;\n\t\t\t\tdraftState.addPostDone = true;\n\t\t\t\tbreak;\n\t\t\tcase ADD_POST_FAILURE:\n\t\t\t\tdraftState.addPostError = action.error;\n\t\t\t\tbreak;\n\t\t\t// Comment\n\t\t\tcase ADD_COMMENT_REQUEST:\n\t\t\t\tdraftState.addCommentLoading = true;\n\t\t\t\tdraftState.addCommentDone = false;\n\t\t\t\tdraftState.addCommentError = null;\n\t\t\t\tbreak;\n\t\t\tcase ADD_COMMENT_SUCCESS: {\n\t\t\t\t//action.data.content, postId, userId\n\t\t\t\t// comment form에서 comment를 추가할때,\n\t\t\t\t// store에 있는 mainPosts를 찾아서 추가해준다.\n\t\t\t\tconst idx = draftState.mainPosts.findIndex(\n\t\t\t\t\titem => item.id === action.data.PostId,\n\t\t\t\t);\n\t\t\t\tconsole.log('idx', idx);\n\t\t\t\tconsole.log(action.data);\n\t\t\t\tdraftState.mainPosts[idx].Comments.unshift(\n\t\t\t\t\taction.data,\n\t\t\t\t\t// dummyComment(action.data.content),\n\t\t\t\t);\n\t\t\t\tdraftState.addCommentLoading = false;\n\t\t\t\tdraftState.addCommentDone = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ADD_COMMENT_FAILURE:\n\t\t\t\tdraftState.addCommentError = action.error;\n\t\t\t\tbreak;\n\t\t\tcase REMOVE_POST_REQUEST:\n\t\t\t\tdraftState.removePostLoading = true;\n\t\t\t\tdraftState.removePostDone = false;\n\t\t\t\tbreak;\n\t\t\tcase REMOVE_POST_SUCCESS:\n\t\t\t\tdraftState.removePostLoading = false;\n\t\t\t\tdraftState.removePostDone = true;\n\t\t\t\tdraftState.mainPosts = draftState.mainPosts.filter(\n\t\t\t\t\titem => item.id !== action.data,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase REMOVE_POST_FAILURE:\n\t\t\t\tdraftState.removePostLoading = false;\n\t\t\t\tdraftState.removePostError = action.data;\n\t\t\t\tbreak;\n\t\t\tcase LOAD_POST_REQUEST:\n\t\t\t\tdraftState.loadPostLoading = true;\n\t\t\t\tdraftState.loadPostDone = false;\n\t\t\t\tbreak;\n\t\t\tcase LOAD_POST_SUCCESS:\n\t\t\t\tdraftState.loadPostLoading = false;\n\t\t\t\tdraftState.loadPostDone = true;\n\t\t\t\tconsole.log(action.data);\n\t\t\t\tdraftState.mainPosts = action.data.concat(draftState.mainPosts);\n\t\t\t\tdraftState.hasMorePosts = draftState.mainPosts.length < 30;\n\t\t\t\tbreak;\n\t\t\tcase LOAD_POST_FAILURE:\n\t\t\t\tdraftState.loadPostError = action.data;\n\t\t\t\tbreak;\n\t\t\t// 좋아요 버튼\n\t\t\tcase LIKE_POST_REQUEST:\n\t\t\t\tdraftState.likePostLoading = true;\n\t\t\t\tdraftState.likePostDone = false;\n\t\t\t\tbreak;\n\t\t\tcase LIKE_POST_SUCCESS: {\n\t\t\t\tconst idx = draftState.mainPosts.findIndex(\n\t\t\t\t\titem => item.id === action.data.PostId,\n\t\t\t\t);\n\t\t\t\tdraftState.mainPosts[idx].Likers.push({ id: action.data.UserId });\n\t\t\t\tdraftState.likePostLoading = false;\n\t\t\t\tdraftState.likePostDone = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase LIKE_POST_FAILURE:\n\t\t\t\tdraftState.likePostError = action.error;\n\t\t\t\tbreak;\n\t\t\t// 좋아요 버튼 취소\n\t\t\tcase UNLIKE_POST_REQUEST:\n\t\t\t\tdraftState.unlikePostLoading = true;\n\t\t\t\tdraftState.unlikePostDone = false;\n\t\t\t\tbreak;\n\n\t\t\tcase UNLIKE_POST_SUCCESS: {\n\t\t\t\t// draftState.mainPosts.unshift(dummyPost(action.data));\n\t\t\t\tconst idx = draftState.mainPosts.findIndex(\n\t\t\t\t\titem => item.id === action.data.PostId,\n\t\t\t\t);\n\t\t\t\tconst userIdx = draftState.mainPosts[idx].Likers.findIndex(\n\t\t\t\t\tuser => user.id === action.data.UserId,\n\t\t\t\t);\n\n\t\t\t\tdraftState.mainPosts[idx].Likers.splice(userIdx, 1);\n\n\t\t\t\tdraftState.unlikePostLoading = false;\n\t\t\t\tdraftState.unlikePostDone = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase UNLIKE_POST_FAILURE:\n\t\t\t\tdraftState.unlikePostError = action.error;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t});\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}