{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport wrapper from '../../store/configureStore';\nimport Head from 'next/head';\nimport { useSelector } from 'react-redux';\nimport { LOAD_A_POST_REQUEST, LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from '../../actions';\nimport PostCard from '../../components/PostCard';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport AppLayout from '../../components/AppLayout';\nimport { useRouter } from 'next/router';\n\nconst SinglePost = () => {\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n  const router = useRouter();\n  const id = router.query.id;\n  return __jsx(AppLayout, null, __jsx(Head, null, __jsx(\"title\", null, singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAE00\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: singlePost.content\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: `${singlePost.User.nickname}님의 게시글`\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: singlePost.content\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: singlePost.Images[0] ? singlePost.Images[0].src : 'https://piusbook.com/favicon.ico'\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: `https://piusbook.com/post/${id}`\n  })), __jsx(PostCard, {\n    post: singlePost\n  }));\n};\n\nexport default SinglePost;\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_A_POST_REQUEST,\n    data: {\n      postId: context.params.id\n    }\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});","map":null,"metadata":{},"sourceType":"module"}