{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/components/PostCard.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport propTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Card, Popover, Button, List, Comment, Avatar } from 'antd';\nimport { RetweetOutlined, HeartOutlined, HeartFilled, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PostCardContent from './PostCardContent';\nimport CommentForm from './CommentForm';\nimport PostImages from './PostImages';\nimport FollowButton from './FollowButton';\nimport { removePostRequest } from '../reducer/post';\nimport { LIKE_POST_REQUEST, UNLIKE_POST_REQUEST } from '../actions';\nvar PostCardWrapper = styled.div.withConfig({\n  displayName: \"PostCard__PostCardWrapper\",\n  componentId: \"v37uo4-0\"\n})([\"margin:10px 5px;\"]);\nvar Content = styled.div.withConfig({\n  displayName: \"PostCard__Content\",\n  componentId: \"v37uo4-1\"\n})([\"\"]);\nvar Image = styled.img.withConfig({\n  displayName: \"PostCard__Image\",\n  componentId: \"v37uo4-2\"\n})([\"\"]);\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n  var me = useSelector(function (state) {\n    return state.user.me;\n  });\n  var id = me && me.id;\n  var liked = post.Likers.find(function (liker) {\n    return liker.id === id;\n  }); // const [liked, setLiked] = useState(false);\n\n  var _useState = useState(false),\n      commentFormOpend = _useState[0],\n      setCommentFormOpend = _useState[1];\n\n  var onLike = useCallback(function () {\n    // setLiked(true);\n    dispatch({\n      type: LIKE_POST_REQUEST,\n      data: {\n        postId: post.id\n      }\n    });\n  }, []);\n  var onUnlike = useCallback(function () {\n    // setLiked(false);\n    dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpend(function (prev) {\n      return !prev;\n    });\n  }, [setCommentFormOpend]);\n  var onDeletePost = useCallback(function () {\n    dispatch(removePostRequest(post.id));\n  }, [dispatch, post]);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }\n  }, __jsx(Card, {\n    cover: post.Images && __jsx(PostImages, {\n      images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 27\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 6\n      }\n    }), liked ? __jsx(HeartFilled, {\n      key: \"heart-filled\",\n      onClick: onUnlike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"message\",\n      onClick: onToggleComment,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 6\n      }\n    }), __jsx(Popover, {\n      key: \"ellipsis\",\n      content: __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 8\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        onClick: onDeletePost,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 10\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 6\n      }\n    }, __jsx(EllipsisOutlined, {\n      key: \"ellipsis\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }))],\n    extra: me && __jsx(FollowButton, {\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 18\n      }\n    }, \"\\uD314\\uB85C\\uC6B0\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }\n  }, __jsx(Card.Meta, {\n    avatar: post.User.nickname[0],\n    title: post.User.nickname,\n    description: __jsx(PostCardContent, {\n      postData: post.content,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  })), commentFormOpend && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, __jsx(CommentForm, {\n    post: post,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 6\n    }\n  }), __jsx(List, {\n    header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\\uC774 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"),\n    dataSource: post.Comments,\n    renderItem: function renderItem(item) {\n      return __jsx(\"li\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 8\n        }\n      }, __jsx(Comment, {\n        avatar: __jsx(Avatar, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 18\n          }\n        }, item.User.nickname),\n        author: item.User.nickname,\n        content: item.content,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 6\n    }\n  })));\n};\n\n_s(PostCard, \"B3P/EyZqEOrPizQdyvaefKM1RtI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: propTypes.object\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/components/PostCard.js"],"names":["React","useState","useCallback","propTypes","styled","Card","Popover","Button","List","Comment","Avatar","RetweetOutlined","HeartOutlined","HeartFilled","MessageOutlined","EllipsisOutlined","useSelector","useDispatch","PostCardContent","CommentForm","PostImages","FollowButton","removePostRequest","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","PostCardWrapper","div","Content","Image","img","PostCard","post","dispatch","me","state","user","id","liked","Likers","find","liker","commentFormOpend","setCommentFormOpend","onLike","type","data","postId","onUnlike","onToggleComment","prev","onDeletePost","Images","User","nickname","content","Comments","length","item","object"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport propTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Card, Popover, Button, List, Comment, Avatar } from 'antd';\nimport {\n\tRetweetOutlined,\n\tHeartOutlined,\n\tHeartFilled,\n\tMessageOutlined,\n\tEllipsisOutlined,\n} from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PostCardContent from './PostCardContent';\nimport CommentForm from './CommentForm';\nimport PostImages from './PostImages';\nimport FollowButton from './FollowButton';\nimport { removePostRequest } from '../reducer/post';\nimport { LIKE_POST_REQUEST, UNLIKE_POST_REQUEST } from '../actions';\n\nconst PostCardWrapper = styled.div`\n\tmargin: 10px 5px;\n`;\nconst Content = styled.div``;\nconst Image = styled.img``;\nconst PostCard = ({ post }) => {\n\tconst dispatch = useDispatch();\n\tconst me = useSelector(state => state.user.me);\n\tconst id = me && me.id;\n\tconst liked = post.Likers.find(liker => liker.id === id);\n\t// const [liked, setLiked] = useState(false);\n\tconst [commentFormOpend, setCommentFormOpend] = useState(false);\n\tconst onLike = useCallback(() => {\n\t\t// setLiked(true);\n\t\tdispatch({\n\t\t\ttype: LIKE_POST_REQUEST,\n\t\t\tdata: {\n\t\t\t\tpostId: post.id,\n\t\t\t},\n\t\t});\n\t}, []);\n\n\tconst onUnlike = useCallback(() => {\n\t\t// setLiked(false);\n\t\tdispatch({\n\t\t\ttype: UNLIKE_POST_REQUEST,\n\t\t\tdata: post.id,\n\t\t});\n\t}, []);\n\tconst onToggleComment = useCallback(() => {\n\t\tsetCommentFormOpend(prev => !prev);\n\t}, [setCommentFormOpend]);\n\tconst onDeletePost = useCallback(() => {\n\t\tdispatch(removePostRequest(post.id));\n\t}, [dispatch, post]);\n\treturn (\n\t\t<div>\n\t\t\t<Card\n\t\t\t\tcover={post.Images && <PostImages images={post.Images}></PostImages>}\n\t\t\t\tactions={[\n\t\t\t\t\t<RetweetOutlined key=\"retweet\" />,\n\t\t\t\t\tliked ? (\n\t\t\t\t\t\t<HeartFilled key=\"heart-filled\" onClick={onUnlike} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<HeartOutlined key=\"heart\" onClick={onLike} />\n\t\t\t\t\t),\n\n\t\t\t\t\t<MessageOutlined key=\"message\" onClick={onToggleComment} />,\n\t\t\t\t\t<Popover\n\t\t\t\t\t\tkey=\"ellipsis\"\n\t\t\t\t\t\tcontent={\n\t\t\t\t\t\t\t<Button.Group>\n\t\t\t\t\t\t\t\t{id && post.User.id === id ? (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<Button>수정</Button>\n\t\t\t\t\t\t\t\t\t\t<Button onClick={onDeletePost}>삭제</Button>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Button>신고</Button>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Button.Group>\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<EllipsisOutlined key=\"ellipsis\" />\n\t\t\t\t\t</Popover>,\n\t\t\t\t]}\n\t\t\t\textra={me && <FollowButton post={post}>팔로우</FollowButton>}\n\t\t\t>\n\t\t\t\t<Card.Meta\n\t\t\t\t\tavatar={post.User.nickname[0]}\n\t\t\t\t\ttitle={post.User.nickname}\n\t\t\t\t\tdescription={\n\t\t\t\t\t\t<PostCardContent postData={post.content}></PostCardContent>\n\t\t\t\t\t}\n\t\t\t\t></Card.Meta>\n\t\t\t</Card>\n\t\t\t{commentFormOpend && (\n\t\t\t\t<div>\n\t\t\t\t\t<CommentForm post={post} />\n\t\t\t\t\t<List\n\t\t\t\t\t\theader={`${post.Comments.length}개의 댓글이 있습니다.`}\n\t\t\t\t\t\tdataSource={post.Comments}\n\t\t\t\t\t\trenderItem={item => (\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<Comment\n\t\t\t\t\t\t\t\t\tavatar={<Avatar>{item.User.nickname}</Avatar>}\n\t\t\t\t\t\t\t\t\tauthor={item.User.nickname}\n\t\t\t\t\t\t\t\t\tcontent={item.content}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\nPostCard.propTypes = {\n\tpost: propTypes.object,\n};\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}