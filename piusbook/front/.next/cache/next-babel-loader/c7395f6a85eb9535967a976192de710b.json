{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/components/PostCard.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Card, Popover, Button } from 'antd';\nimport { RetweetOutlined, HeartOutlined, HeartFilled, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nvar Content = styled.div.withConfig({\n  displayName: \"PostCard__Content\",\n  componentId: \"v37uo4-0\"\n})([\"\"]);\nvar Image = styled.img.withConfig({\n  displayName: \"PostCard__Image\",\n  componentId: \"v37uo4-1\"\n})([\"\"]);\n_c = Image;\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var me = useSelector(function (state) {\n    return state.user.me;\n  });\n  var id = me && me.id;\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 3\n    }\n  }, __jsx(Card, {\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 6\n      }\n    }), liked ? __jsx(HeartFilled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 14\n      }\n    }) : __jsx(HeartOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 32\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"message\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 6\n      }\n    }), __jsx(Popover, {\n      key: \"ellipsis\",\n      content: __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 8\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 10\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 6\n      }\n    }, __jsx(EllipsisOutlined, {\n      key: \"ellipsis\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }))],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }\n  }, __jsx(Card.Meta, {\n    avatar: post.User.nickname[0],\n    title: post.User.nickname,\n    description: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }), __jsx(Image, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  })));\n};\n\n_s(PostCard, \"sc5XejnYk5KF7j5obILon9kGsUs=\", false, function () {\n  return [useSelector];\n});\n\n_c2 = PostCard;\nPostCard.propTypes = {\n  post: propTypes.object\n};\nexport default PostCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Image\");\n$RefreshReg$(_c2, \"PostCard\");","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/components/PostCard.js"],"names":["React","useState","propTypes","styled","Card","Popover","Button","RetweetOutlined","HeartOutlined","HeartFilled","MessageOutlined","EllipsisOutlined","useSelector","Content","div","Image","img","PostCard","post","me","state","user","id","liked","setLiked","User","nickname","content","object"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,MAAxB,QAAsC,MAAtC;AACA,SACCC,eADD,EAECC,aAFD,EAGCC,WAHD,EAICC,eAJD,EAKCC,gBALD,QAMO,mBANP;AAOA,SAASC,WAAT,QAA4B,aAA5B;AACA,IAAMC,OAAO,GAAGV,MAAM,CAACW,GAAV;AAAA;AAAA;AAAA,QAAb;AACA,IAAMC,KAAK,GAAGZ,MAAM,CAACa,GAAV;AAAA;AAAA;AAAA,QAAX;KAAMD,K;;AACN,IAAME,QAAQ,GAAG,SAAXA,QAAW,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC9B,MAAMC,EAAE,GAAGP,WAAW,CAAC,UAAAQ,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWF,EAAf;AAAA,GAAN,CAAtB;AACA,MAAMG,EAAE,GAAGH,EAAE,IAAIA,EAAE,CAACG,EAApB;;AAF8B,kBAGJrB,QAAQ,CAAC,KAAD,CAHJ;AAAA,MAGvBsB,KAHuB;AAAA,MAGhBC,QAHgB;;AAK9B,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AACC,IAAA,OAAO,EAAE,CACR,MAAC,eAAD;AAAiB,MAAA,GAAG,EAAC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADQ,EAERD,KAAK,GAAG,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAqB,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFlB,EAGR,MAAC,eAAD;AAAiB,MAAA,GAAG,EAAC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHQ,EAIR,MAAC,OAAD;AACC,MAAA,GAAG,EAAC,UADL;AAEC,MAAA,OAAO,EACN,MAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACED,EAAE,IAAIJ,IAAI,CAACO,IAAL,CAAUH,EAAV,KAAiBA,EAAvB,GACA,4BACC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADD,EAEC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFD,CADA,GAMA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF,CAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAeC,MAAC,gBAAD;AAAkB,MAAA,GAAG,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfD,CAJQ,CADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAwBC,MAAC,IAAD,CAAM,IAAN;AACC,IAAA,MAAM,EAAEJ,IAAI,CAACO,IAAL,CAAUC,QAAV,CAAmB,CAAnB,CADT;AAEC,IAAA,KAAK,EAAER,IAAI,CAACO,IAAL,CAAUC,QAFlB;AAGC,IAAA,WAAW,EAAER,IAAI,CAACS,OAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBD,EA6BC,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BD,CADD,CADD;AAmCA,CAxCD;;GAAMV,Q;UACML,W;;;MADNK,Q;AAyCNA,QAAQ,CAACf,SAAT,GAAqB;AACpBgB,EAAAA,IAAI,EAAEhB,SAAS,CAAC0B;AADI,CAArB;AAGA,eAAeX,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Card, Popover, Button } from 'antd';\nimport {\n\tRetweetOutlined,\n\tHeartOutlined,\n\tHeartFilled,\n\tMessageOutlined,\n\tEllipsisOutlined,\n} from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nconst Content = styled.div``;\nconst Image = styled.img``;\nconst PostCard = ({ post }) => {\n\tconst me = useSelector(state => state.user.me);\n\tconst id = me && me.id;\n\tconst [liked, setLiked] = useState(false);\n\n\treturn (\n\t\t<div>\n\t\t\t<Card\n\t\t\t\tactions={[\n\t\t\t\t\t<RetweetOutlined key=\"retweet\" />,\n\t\t\t\t\tliked ? <HeartFilled /> : <HeartOutlined />,\n\t\t\t\t\t<MessageOutlined key=\"message\" />,\n\t\t\t\t\t<Popover\n\t\t\t\t\t\tkey=\"ellipsis\"\n\t\t\t\t\t\tcontent={\n\t\t\t\t\t\t\t<Button.Group>\n\t\t\t\t\t\t\t\t{id && post.User.id === id ? (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<Button>수정</Button>\n\t\t\t\t\t\t\t\t\t\t<Button>삭제</Button>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Button>신고</Button>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Button.Group>\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<EllipsisOutlined key=\"ellipsis\" />\n\t\t\t\t\t</Popover>,\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t<Card.Meta\n\t\t\t\t\tavatar={post.User.nickname[0]}\n\t\t\t\t\ttitle={post.User.nickname}\n\t\t\t\t\tdescription={post.content}\n\t\t\t\t></Card.Meta>\n\t\t\t\t<Image />\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\nPostCard.propTypes = {\n\tpost: propTypes.object,\n};\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}