{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: 'pius'\n    },\n    content: 'Hello react',\n    Images: [],\n    Comments: [{\n      User: {\n        nickname: 'aksfbs'\n      },\n      content: '안녕하세요'\n    }]\n  }],\n  imagePaths: [],\n  postAdded: false\n};\nvar dummyPost = {\n  id: 2,\n  User: {\n    id: 1,\n    nickname: 'pius'\n  },\n  content: 'Hello react',\n  Image: [],\n  Comments: []\n};\nvar ADD_POST = 'ADD_POST';\nexport var addPost = function addPost() {\n  return {\n    type: ADD_POST\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost].concat(_toConsumableArray(state.mainPosts)),\n        postAdded: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/reducer/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","Images","Comments","imagePaths","postAdded","dummyPost","Image","ADD_POST","addPost","type","reducer","state","action"],"mappings":";;;;;;;AAAA,OAAO,IAAMA,YAAY,GAAG;AAC3BC,EAAAA,SAAS,EAAE,CACV;AACCC,IAAAA,EAAE,EAAE,CADL;AAECC,IAAAA,IAAI,EAAE;AACLD,MAAAA,EAAE,EAAE,CADC;AAELE,MAAAA,QAAQ,EAAE;AAFL,KAFP;AAMCC,IAAAA,OAAO,EAAE,aANV;AAOCC,IAAAA,MAAM,EAAE,EAPT;AAQCC,IAAAA,QAAQ,EAAE,CACT;AACCJ,MAAAA,IAAI,EAAE;AACLC,QAAAA,QAAQ,EAAE;AADL,OADP;AAICC,MAAAA,OAAO,EAAE;AAJV,KADS;AARX,GADU,CADgB;AAoB3BG,EAAAA,UAAU,EAAE,EApBe;AAqB3BC,EAAAA,SAAS,EAAE;AArBgB,CAArB;AAwBP,IAAMC,SAAS,GAAG;AACjBR,EAAAA,EAAE,EAAE,CADa;AAEjBC,EAAAA,IAAI,EAAE;AACLD,IAAAA,EAAE,EAAE,CADC;AAELE,IAAAA,QAAQ,EAAE;AAFL,GAFW;AAMjBC,EAAAA,OAAO,EAAE,aANQ;AAOjBM,EAAAA,KAAK,EAAE,EAPU;AAQjBJ,EAAAA,QAAQ,EAAE;AARO,CAAlB;AAUA,IAAMK,QAAQ,GAAG,UAAjB;AACA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC5B,SAAO;AACNC,IAAAA,IAAI,EAAEF;AADA,GAAP;AAGA,CAJM;;AAKP,IAAMG,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBhB,YAAyB;AAAA,MAAXiB,MAAW;;AACjD,UAAQA,MAAM,CAACH,IAAf;AACC,SAAKF,QAAL;AACC,6CACII,KADJ;AAECf,QAAAA,SAAS,GAAGS,SAAH,4BAAiBM,KAAK,CAACf,SAAvB,EAFV;AAGCQ,QAAAA,SAAS,EAAE;AAHZ;;AAKD;AACC,aAAOO,KAAP;AARF;AAUA,CAXD;;AAaA,eAAeD,OAAf","sourcesContent":["export const initialState = {\n\tmainPosts: [\n\t\t{\n\t\t\tid: 1,\n\t\t\tUser: {\n\t\t\t\tid: 1,\n\t\t\t\tnickname: 'pius',\n\t\t\t},\n\t\t\tcontent: 'Hello react',\n\t\t\tImages: [],\n\t\t\tComments: [\n\t\t\t\t{\n\t\t\t\t\tUser: {\n\t\t\t\t\t\tnickname: 'aksfbs',\n\t\t\t\t\t},\n\t\t\t\t\tcontent: '안녕하세요',\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t],\n\timagePaths: [],\n\tpostAdded: false,\n};\n\nconst dummyPost = {\n\tid: 2,\n\tUser: {\n\t\tid: 1,\n\t\tnickname: 'pius',\n\t},\n\tcontent: 'Hello react',\n\tImage: [],\n\tComments: [],\n};\nconst ADD_POST = 'ADD_POST';\nexport const addPost = () => {\n\treturn {\n\t\ttype: ADD_POST,\n\t};\n};\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase ADD_POST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmainPosts: [dummyPost, ...state.mainPosts],\n\t\t\t\tpostAdded: true,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}