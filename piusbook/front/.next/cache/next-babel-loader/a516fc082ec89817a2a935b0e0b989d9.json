{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/components/PostForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPostRequest } from '../reducer/post';\nimport useInput from '../hooks/useInput';\nvar Form = styled.form.withConfig({\n  displayName: \"PostForm__Form\",\n  componentId: \"sc-1fhb6li-0\"\n})([\"margin:20px 0;background-color:#fff;\"]);\n_c = Form;\nvar TextArea = styled.textarea.withConfig({\n  displayName: \"PostForm__TextArea\",\n  componentId: \"sc-1fhb6li-1\"\n})([\"display:block;width:100%;\"]);\n_c2 = TextArea;\nvar ButtonWrapper = styled.div.withConfig({\n  displayName: \"PostForm__ButtonWrapper\",\n  componentId: \"sc-1fhb6li-2\"\n})([\"display:flex;justify-content:space-between;align-items:center;height:20px;margin:10px 0;\"]);\n_c3 = ButtonWrapper;\nvar ImageUploadButton = styled.button.withConfig({\n  displayName: \"PostForm__ImageUploadButton\",\n  componentId: \"sc-1fhb6li-3\"\n})([\"padding:10px 20px;display:inline-block;text-align:center;\"]);\n_c4 = ImageUploadButton;\nvar SubmitButton = styled.button.withConfig({\n  displayName: \"PostForm__SubmitButton\",\n  componentId: \"sc-1fhb6li-4\"\n})([\"display:inline-block;text-align:center;margin-left:auto;background-color:#5f0080;color:white;padding:10px 20px;\"]);\n_c5 = SubmitButton;\nvar Wrapper = styled.div.withConfig({\n  displayName: \"PostForm__Wrapper\",\n  componentId: \"sc-1fhb6li-5\"\n})([\"display:inline-block;width:100%;\"]);\n_c6 = Wrapper;\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      addPostDone = _useSelector.addPostDone;\n\n  var imageInput = useRef(null);\n  useEffect(function () {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [setText, addPostDone]);\n  var handleSubmit = useCallback(function (e) {\n    e.preventDefault();\n\n    if (text === '') {\n      return;\n    }\n\n    dispatch(addPostRequest({\n      content: text\n    }));\n  }, [text, dispatch]);\n  var openDialog = useCallback(function () {\n    imageInput.current.click();\n  });\n  return __jsx(Form, {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }\n  }, __jsx(TextArea, {\n    type: \"textarea\",\n    row: \"4\",\n    value: text,\n    onChange: onChangeText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }\n  }), __jsx(Wrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }\n  }, __jsx(ButtonWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    id: \"inputButton\",\n    name: \"image\",\n    ref: imageInput,\n    type: \"file\",\n    hidden: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 6\n    }\n  }), __jsx(ImageUploadButton, {\n    onClick: openDialog,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 6\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(SubmitButton, {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 6\n    }\n  }, \"\\uC0DD\\uC131\"))));\n};\n\n_s(PostForm, \"/rcQwEZni/30yTx7a4ogwTzKQAw=\", false, function () {\n  return [useDispatch, useInput, useSelector];\n});\n\n_c7 = PostForm;\nexport default PostForm;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"TextArea\");\n$RefreshReg$(_c3, \"ButtonWrapper\");\n$RefreshReg$(_c4, \"ImageUploadButton\");\n$RefreshReg$(_c5, \"SubmitButton\");\n$RefreshReg$(_c6, \"Wrapper\");\n$RefreshReg$(_c7, \"PostForm\");","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/components/PostForm.js"],"names":["React","useCallback","useEffect","useRef","styled","useDispatch","useSelector","addPostRequest","useInput","Form","form","TextArea","textarea","ButtonWrapper","div","ImageUploadButton","button","SubmitButton","Wrapper","PostForm","dispatch","text","onChangeText","setText","state","post","addPostDone","imageInput","handleSubmit","e","preventDefault","content","openDialog","current","click"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPostRequest } from '../reducer/post';\nimport useInput from '../hooks/useInput';\nconst Form = styled.form`\n\tmargin: 20px 0;\n\tbackground-color: #fff;\n`;\nconst TextArea = styled.textarea`\n\tdisplay: block;\n\twidth: 100%;\n`;\nconst ButtonWrapper = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\theight: 20px;\n\tmargin: 10px 0;\n`;\n\nconst ImageUploadButton = styled.button`\n\tpadding: 10px 20px;\n\tdisplay: inline-block;\n\ttext-align: center;\n`;\nconst SubmitButton = styled.button`\n\tdisplay: inline-block;\n\ttext-align: center;\n\tmargin-left: auto;\n\tbackground-color: #5f0080;\n\tcolor: white;\n\tpadding: 10px 20px;\n`;\nconst Wrapper = styled.div`\n\tdisplay: inline-block;\n\twidth: 100%;\n`;\nconst PostForm = () => {\n\tconst dispatch = useDispatch();\n\tconst [text, onChangeText, setText] = useInput('');\n\tconst { addPostDone } = useSelector(state => state.post);\n\tconst imageInput = useRef(null);\n\tuseEffect(() => {\n\t\tif (addPostDone) {\n\t\t\tsetText('');\n\t\t}\n\t}, [setText, addPostDone]);\n\tconst handleSubmit = useCallback(\n\t\te => {\n\t\t\te.preventDefault();\n\t\t\tif (text === '') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdispatch(addPostRequest({ content: text }));\n\t\t},\n\t\t[text, dispatch],\n\t);\n\tconst openDialog = useCallback(() => {\n\t\timageInput.current.click();\n\t});\n\treturn (\n\t\t<Form onSubmit={handleSubmit}>\n\t\t\t<TextArea type=\"textarea\" row=\"4\" value={text} onChange={onChangeText} />\n\t\t\t<Wrapper>\n\t\t\t\t<ButtonWrapper>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"inputButton\"\n\t\t\t\t\t\tname=\"image\"\n\t\t\t\t\t\tref={imageInput}\n\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\thidden\n\t\t\t\t\t/>\n\t\t\t\t\t<ImageUploadButton onClick={openDialog}>\n\t\t\t\t\t\t이미지 업로드\n\t\t\t\t\t</ImageUploadButton>\n\t\t\t\t\t<SubmitButton type=\"submit\">생성</SubmitButton>\n\t\t\t\t</ButtonWrapper>\n\t\t\t</Wrapper>\n\t\t</Form>\n\t);\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}