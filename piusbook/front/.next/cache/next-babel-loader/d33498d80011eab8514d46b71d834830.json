{"ast":null,"code":"var _jsxFileName = \"/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/components/PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport propTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Card, Popover, Button } from 'antd';\nimport { RetweetOutlined, HeartOutlined, HeartFilled, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nconst Content = styled.div.withConfig({\n  displayName: \"PostCard__Content\",\n  componentId: \"v37uo4-0\"\n})([\"\"]);\nconst Image = styled.img.withConfig({\n  displayName: \"PostCard__Image\",\n  componentId: \"v37uo4-1\"\n})([\"\"]);\n\nconst PostCard = ({\n  post\n}) => {\n  const me = useSelector(state => state.user.me);\n  const id = me && me.id;\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const onToggleButton = useCallback(() => {\n    setLiked(!liked);\n  }, [liked, setLiked]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }, __jsx(Card, {\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 6\n      }\n    }), liked ? __jsx(HeartFilled, {\n      key: \"heart-filled\",\n      onClick: onToggleButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onToggleButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 6\n      }\n    }), __jsx(Popover, {\n      key: \"ellipsis\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 8\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 10\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 6\n      }\n    }, __jsx(EllipsisOutlined, {\n      key: \"ellipsis\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }\n  }, __jsx(Card.Meta, {\n    avatar: post.User.nickname[0],\n    title: post.User.nickname,\n    description: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }), __jsx(Image, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  })));\n};\n\nPostCard.propTypes = {\n  post: propTypes.object\n};\nexport default PostCard;","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/components/PostCard.js"],"names":["React","useState","useCallback","propTypes","styled","Card","Popover","Button","RetweetOutlined","HeartOutlined","HeartFilled","MessageOutlined","EllipsisOutlined","useSelector","Content","div","Image","img","PostCard","post","me","state","user","id","liked","setLiked","onToggleButton","User","nickname","content","object"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport propTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Card, Popover, Button } from 'antd';\nimport {\n\tRetweetOutlined,\n\tHeartOutlined,\n\tHeartFilled,\n\tMessageOutlined,\n\tEllipsisOutlined,\n} from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nconst Content = styled.div``;\nconst Image = styled.img``;\nconst PostCard = ({ post }) => {\n\tconst me = useSelector(state => state.user.me);\n\tconst id = me && me.id;\n\tconst [liked, setLiked] = useState(false);\n\tconst onToggleButton = useCallback(() => {\n\t\tsetLiked(!liked);\n\t}, [liked, setLiked]);\n\treturn (\n\t\t<div>\n\t\t\t<Card\n\t\t\t\tactions={[\n\t\t\t\t\t<RetweetOutlined key=\"retweet\" />,\n\t\t\t\t\tliked ? (\n\t\t\t\t\t\t<HeartFilled key=\"heart-filled\" onClick={onToggleButton} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<HeartOutlined key=\"heart\" onClick={onToggleButton} />\n\t\t\t\t\t),\n\t\t\t\t\t<MessageOutlined key=\"message\" />,\n\t\t\t\t\t<Popover\n\t\t\t\t\t\tkey=\"ellipsis\"\n\t\t\t\t\t\tcontent={\n\t\t\t\t\t\t\t<Button.Group>\n\t\t\t\t\t\t\t\t{id && post.User.id === id ? (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<Button>수정</Button>\n\t\t\t\t\t\t\t\t\t\t<Button>삭제</Button>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Button>신고</Button>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Button.Group>\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<EllipsisOutlined key=\"ellipsis\" />\n\t\t\t\t\t</Popover>,\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t<Card.Meta\n\t\t\t\t\tavatar={post.User.nickname[0]}\n\t\t\t\t\ttitle={post.User.nickname}\n\t\t\t\t\tdescription={post.content}\n\t\t\t\t></Card.Meta>\n\t\t\t\t<Image />\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\nPostCard.propTypes = {\n\tpost: propTypes.object,\n};\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}