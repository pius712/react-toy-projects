{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from 'next-redux-wrapper';\nconst initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signupData: null,\n    loginData: null\n  },\n  post: {\n    mainPosts: []\n  }\n};\nexport const loginAction = data => {\n  return {\n    type: 'LOG_IN',\n    data\n  };\n};\nexport const logoutAction = () => {\n  return {\n    type: 'LOG_OUT'\n  };\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      console.log('HYDRATE', HYDRATE);\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true,\n          user: action.data\n        })\n      });\n\n    case 'LOG_OUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: false,\n          user: null\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/reducer/index.js"],"names":["HYDRATE","initialState","user","isLoggedIn","signupData","loginData","post","mainPosts","loginAction","data","type","logoutAction","rootReducer","state","action","console","log","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,IAAI,EAAE;AACLC,IAAAA,UAAU,EAAE,KADP;AAELD,IAAAA,IAAI,EAAE,IAFD;AAGLE,IAAAA,UAAU,EAAE,IAHP;AAILC,IAAAA,SAAS,EAAE;AAJN,GADc;AAOpBC,EAAAA,IAAI,EAAE;AACLC,IAAAA,SAAS,EAAE;AADN;AAPc,CAArB;AAWA,OAAO,MAAMC,WAAW,GAAGC,IAAI,IAAI;AAClC,SAAO;AACNC,IAAAA,IAAI,EAAE,QADA;AAEND,IAAAA;AAFM,GAAP;AAIA,CALM;AAMP,OAAO,MAAME,YAAY,GAAG,MAAM;AACjC,SAAO;AACND,IAAAA,IAAI,EAAE;AADA,GAAP;AAGA,CAJM;;AAKP,MAAME,WAAW,GAAG,CAACC,KAAK,GAAGZ,YAAT,EAAuBa,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACJ,IAAf;AACC,SAAKV,OAAL;AACCe,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBhB,OAAvB;AACA,6CACIa,KADJ,GAEIC,MAAM,CAACG,OAFX;;AAID,SAAK,QAAL;AACC,6CACIJ,KADJ;AAECX,QAAAA,IAAI,kCACAW,KAAK,CAACX,IADN;AAEHC,UAAAA,UAAU,EAAE,IAFT;AAGHD,UAAAA,IAAI,EAAEY,MAAM,CAACL;AAHV;AAFL;;AAQD,SAAK,SAAL;AACC,6CACII,KADJ;AAECX,QAAAA,IAAI,kCACAW,KAAK,CAACX,IADN;AAEHC,UAAAA,UAAU,EAAE,KAFT;AAGHD,UAAAA,IAAI,EAAE;AAHH;AAFL;;AAQD;AACC,aAAOW,KAAP;AA1BF;AA4BA,CA7BD;;AA+BA,eAAeD,WAAf","sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\nconst initialState = {\n\tuser: {\n\t\tisLoggedIn: false,\n\t\tuser: null,\n\t\tsignupData: null,\n\t\tloginData: null,\n\t},\n\tpost: {\n\t\tmainPosts: [],\n\t},\n};\nexport const loginAction = data => {\n\treturn {\n\t\ttype: 'LOG_IN',\n\t\tdata,\n\t};\n};\nexport const logoutAction = () => {\n\treturn {\n\t\ttype: 'LOG_OUT',\n\t};\n};\nconst rootReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase HYDRATE:\n\t\t\tconsole.log('HYDRATE', HYDRATE);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.payload,\n\t\t\t};\n\t\tcase 'LOG_IN':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuser: {\n\t\t\t\t\t...state.user,\n\t\t\t\t\tisLoggedIn: true,\n\t\t\t\t\tuser: action.data,\n\t\t\t\t},\n\t\t\t};\n\t\tcase 'LOG_OUT':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuser: {\n\t\t\t\t\t...state.user,\n\t\t\t\t\tisLoggedIn: false,\n\t\t\t\t\tuser: null,\n\t\t\t\t},\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}