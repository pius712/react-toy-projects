{"ast":null,"code":"var _jsxFileName = \"/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/components/CommentForm.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux'; // import { ADD_COMMENT_REQUEST } from '../actions';\n\nimport { addCommentRequest } from '../reducer/post';\nimport useInput from '../hooks/useInput';\nimport styled from 'styled-components';\nconst Form = styled.form.withConfig({\n  displayName: \"CommentForm__Form\",\n  componentId: \"oy06y7-0\"\n})([\"\"]);\nconst TextArea = styled.textarea.withConfig({\n  displayName: \"CommentForm__TextArea\",\n  componentId: \"oy06y7-1\"\n})([\"\"]);\n\nconst CommentForm = ({\n  post\n}) => {\n  const [comment, onChangeComment, setComment] = useInput('');\n  const me = useSelector(state => state.user.me);\n  const id = me && me.id;\n  const {\n    addCommentDone\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (addCommentDone) {\n      setComment('');\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(e => {\n    e.preventDefault();\n    dispatch(addCommentRequest({\n      content: comment,\n      postId: post.id,\n      userId: id\n    }));\n  }, [comment, id, dispatch, post]);\n  return __jsx(\"form\", {\n    onSubmit: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }\n  }, __jsx(\"textarea\", {\n    rows: \"4\",\n    value: comment,\n    onChange: onChangeComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }\n  }), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }\n  }, \"\\uC0DD\\uC131\"));\n};\n\nCommentForm.propTypes = {\n  post: propTypes.object\n};\nexport default CommentForm;","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/components/CommentForm.js"],"names":["React","useState","useCallback","useEffect","propTypes","useSelector","useDispatch","addCommentRequest","useInput","styled","Form","form","TextArea","textarea","CommentForm","post","comment","onChangeComment","setComment","me","state","user","id","addCommentDone","dispatch","onSubmitComment","e","preventDefault","content","postId","userId","object"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,IAAI,GAAGD,MAAM,CAACE,IAAV;AAAA;AAAA;AAAA,QAAV;AACA,MAAMC,QAAQ,GAAGH,MAAM,CAACI,QAAV;AAAA;AAAA;AAAA,QAAd;;AACA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACjC,QAAM,CAACC,OAAD,EAAUC,eAAV,EAA2BC,UAA3B,IAAyCV,QAAQ,CAAC,EAAD,CAAvD;AACA,QAAMW,EAAE,GAAGd,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,EAArB,CAAtB;AACA,QAAMG,EAAE,GAAGH,EAAE,IAAIA,EAAE,CAACG,EAApB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAqBlB,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACL,IAAhB,CAAtC;AAEA,QAAMS,QAAQ,GAAGlB,WAAW,EAA5B;AACAH,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIoB,cAAJ,EAAoB;AACnBL,MAAAA,UAAU,CAAC,EAAD,CAAV;AACA;AACD,GAJQ,EAIN,CAACK,cAAD,CAJM,CAAT;AAKA,QAAME,eAAe,GAAGvB,WAAW,CAClCwB,CAAC,IAAI;AACJA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,QAAQ,CACPjB,iBAAiB,CAAC;AACjBqB,MAAAA,OAAO,EAAEZ,OADQ;AAEjBa,MAAAA,MAAM,EAAEd,IAAI,CAACO,EAFI;AAGjBQ,MAAAA,MAAM,EAAER;AAHS,KAAD,CADV,CAAR;AAOA,GAViC,EAWlC,CAACN,OAAD,EAAUM,EAAV,EAAcE,QAAd,EAAwBT,IAAxB,CAXkC,CAAnC;AAaA,SACC;AAAM,IAAA,QAAQ,EAAEU,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAU,IAAA,IAAI,EAAC,GAAf;AAAmB,IAAA,KAAK,EAAET,OAA1B;AAAmC,IAAA,QAAQ,EAAEC,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFD,CADD;AAMA,CA/BD;;AAiCAH,WAAW,CAACV,SAAZ,GAAwB;AACvBW,EAAAA,IAAI,EAAEX,SAAS,CAAC2B;AADO,CAAxB;AAGA,eAAejB,WAAf","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n// import { ADD_COMMENT_REQUEST } from '../actions';\nimport { addCommentRequest } from '../reducer/post';\nimport useInput from '../hooks/useInput';\nimport styled from 'styled-components';\n\nconst Form = styled.form``;\nconst TextArea = styled.textarea``;\nconst CommentForm = ({ post }) => {\n\tconst [comment, onChangeComment, setComment] = useInput('');\n\tconst me = useSelector(state => state.user.me);\n\tconst id = me && me.id;\n\tconst { addCommentDone } = useSelector(state => state.post);\n\n\tconst dispatch = useDispatch();\n\tuseEffect(() => {\n\t\tif (addCommentDone) {\n\t\t\tsetComment('');\n\t\t}\n\t}, [addCommentDone]);\n\tconst onSubmitComment = useCallback(\n\t\te => {\n\t\t\te.preventDefault();\n\t\t\tdispatch(\n\t\t\t\taddCommentRequest({\n\t\t\t\t\tcontent: comment,\n\t\t\t\t\tpostId: post.id,\n\t\t\t\t\tuserId: id,\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t\t[comment, id, dispatch, post],\n\t);\n\treturn (\n\t\t<form onSubmit={onSubmitComment}>\n\t\t\t<textarea rows=\"4\" value={comment} onChange={onChangeComment}></textarea>\n\t\t\t<button>생성</button>\n\t\t</form>\n\t);\n};\n\nCommentForm.propTypes = {\n\tpost: propTypes.object,\n};\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}