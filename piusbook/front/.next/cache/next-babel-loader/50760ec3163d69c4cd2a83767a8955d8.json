{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { END } from 'redux-saga';\nimport AppLayout from '../../components/AppLayout';\nimport PostForm from '../../components/PostForm';\nimport PostCard from '../../components/PostCard';\nimport { LOAD_POST_REQUEST, LOAD_MY_INFO_REQUEST, LOAD_HASHTAG_POSTS_REQUEST } from '../../actions';\nimport wrapper from '../../store/configureStore';\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\n\nconst Hashtag = () => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostLoading\n  } = useSelector(state => state.post);\n  const router = useRouter();\n  const {\n    tag\n  } = router.query;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight + 300 > document.documentElement.scrollHeight && hasMorePosts && !loadPostLoading) {\n        // 마지막 mainPosts의 id\n        const lastId = mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id;\n        console.log('lastId', lastId);\n        dispatch({\n          type: LOAD_HASHTAG_POSTS_REQUEST,\n          data: tag\n        });\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePosts, loadPostLoading, mainPosts]);\n  return __jsx(AppLayout, null, me && __jsx(PostForm, null), mainPosts.map((post, index) => __jsx(PostCard, {\n    key: post.id,\n    post: post\n  })));\n}; // AppLayout 안에 있는 것이 children이 되는 것.\n\n\nexport default Hashtag;\nexport const getServerSideProps = wrapper.getServerSideProps(async ({\n  store,\n  req,\n  params\n}) => {\n  const cookie = req ? req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  store.dispatch({\n    type: LOAD_HASHTAG_POSTS_REQUEST,\n    data: params.tag\n  });\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});","map":null,"metadata":{},"sourceType":"module"}