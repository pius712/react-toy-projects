{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'; // import { ADD_COMMENT_REQUEST } from '../actions';\n\nimport { addCommentRequest } from '../reducer/post';\nimport useInput from '../hooks/useInput';\nimport styled from 'styled-components';\nconst Form = styled.form.withConfig({\n  displayName: \"CommentForm__Form\",\n  componentId: \"oy06y7-0\"\n})([\"display:flex;margin:5px 0;\"]);\nconst TextArea = styled.textarea.withConfig({\n  displayName: \"CommentForm__TextArea\",\n  componentId: \"oy06y7-1\"\n})([\"flex-basis:85%;margin-right:3px;border-radius:5px;\"]);\nconst Button = styled.button.withConfig({\n  displayName: \"CommentForm__Button\",\n  componentId: \"oy06y7-2\"\n})([\"flex-basis:15%;text-align:center;text-align:center;background-color:#5f0080;color:white;border-radius:5px;\"]);\n\nconst CommentForm = ({\n  post\n}) => {\n  const [comment, onChangeComment, setComment] = useInput('');\n  const me = useSelector(state => state.user.me);\n  const id = me && me.id;\n  const {\n    addCommentDone\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (addCommentDone) {\n      setComment('');\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(e => {\n    e.preventDefault();\n    dispatch(addCommentRequest({\n      content: comment,\n      postId: post.id,\n      userId: id\n    }));\n  }, [comment, id, dispatch, post]);\n  return __jsx(Form, {\n    onSubmit: onSubmitComment\n  }, __jsx(TextArea, {\n    rows: \"2\",\n    value: comment,\n    onChange: onChangeComment\n  }), __jsx(Button, null, \"\\uC0DD\\uC131\"));\n};\n\nexport default CommentForm;","map":null,"metadata":{},"sourceType":"module"}