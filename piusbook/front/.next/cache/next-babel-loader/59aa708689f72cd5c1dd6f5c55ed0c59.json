{"ast":null,"code":"import produce from 'immer';\nimport faker from 'faker';\nimport shortid from 'shortid';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, ADD_POST_TO_ME, REMOVE_POST_OF_MINE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE } from '../actions';\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: 'pius'\n    },\n    content: '#Hello#react made by #pius ',\n    Images: [{\n      id: shortid.generate(),\n      src: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRL13vWu8GOWHAFISKo9v5oBEU75C9udknN2w&usqp=CAU'\n    }, {\n      id: shortid.generate(),\n      src: 'https://i.pinimg.com/736x/0b/2f/8a/0b2f8a51314ab1ebe0505aee843a33b1.jpg'\n    }, {\n      id: shortid.generate(),\n      src: 'https://pbs.twimg.com/profile_images/1256251357763235842/zY8KO59p_400x400.jpg'\n    }],\n    Comments: [{\n      id: shortid.generate(),\n      User: {\n        id: shortid.generate(),\n        nickname: 'aksfbs'\n      },\n      content: '안녕하세요'\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null\n};\ninitialState.mainPosts.concat(Array(20).fill().map(function (item, idx) {\n  return {\n    id: shortid.generate(),\n    User: {\n      id: faker.name.findName(),\n      nickname: faker.internet.userName()\n    },\n    content: faker.lorem.sentence(),\n    Images: [],\n    Comments: [{\n      id: shortid.generate(),\n      User: {\n        id: faker.name.findName(),\n        nickname: faker.internet.userName()\n      },\n      content: faker.lorem.sentence()\n    }]\n  };\n}));\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    User: {\n      id: 1,\n      nickname: 'pius'\n    },\n    content: data.content,\n    Image: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortid.generate(),\n    User: {\n      nickname: 'aksfbs'\n    },\n    content: data\n  };\n};\n\nexport var addPostRequest = function addPostRequest(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var removePostRequest = function removePostRequest(data) {\n  return {\n    type: REMOVE_POST_REQUEST,\n    data: data\n  };\n};\nexport var addCommentRequest = function addCommentRequest(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draftState) {\n    switch (action.type) {\n      // POST\n      case ADD_POST_REQUEST:\n        draftState.addPostLoading = true;\n        draftState.addPostDone = false;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draftState.mainPosts.unshift(dummyPost(action.data));\n        draftState.addPostLoading = false;\n        draftState.addPostDone = true;\n        break;\n\n      case ADD_POST_FAILURE:\n        draftState.addPostError = action.error;\n        break;\n      // Comment\n\n      case ADD_COMMENT_REQUEST:\n        draftState.addCommentLoading = true;\n        draftState.addCommentDone = false;\n        draftState.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          //action.data.content, postId, userId\n          // comment form에서 comment를 추가할때,\n          // store에 있는 mainPosts를 찾아서 추가해준다.\n          var idx = draftState.mainPosts.findIndex(function (item) {\n            return item.id === action.data.postId;\n          });\n          draftState.mainPosts[idx].Comments.unshift(dummyComment(action.data.content));\n          draftState.addCommentLoading = false;\n          draftState.addCommentDone = true;\n          break;\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draftState.addCommentError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draftState.removePostLoading = true;\n        draftState.removePostDone = false;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draftState.removePostLoading = false;\n        draftState.removePostDone = true;\n        draftState.mainPosts = draftState.mainPosts.filter(function (item) {\n          return item.id !== action.data;\n        });\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draftState.removePostLoading = false;\n        draftState.removePostError = action.data;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/reducer/post.js"],"names":["produce","faker","shortid","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_MINE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","initialState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","removePostLoading","removePostDone","removePostError","concat","Array","fill","map","item","idx","name","findName","internet","userName","lorem","sentence","dummyPost","data","Image","dummyComment","addPostRequest","type","removePostRequest","addCommentRequest","reducer","state","action","draftState","unshift","error","findIndex","postId","filter"],"mappings":"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","sourcesContent":["import produce from 'immer';\nimport faker from 'faker';\nimport shortid from 'shortid';\nimport {\n\tADD_POST_REQUEST,\n\tADD_POST_SUCCESS,\n\tADD_POST_FAILURE,\n\tADD_COMMENT_REQUEST,\n\tADD_COMMENT_SUCCESS,\n\tADD_COMMENT_FAILURE,\n\tADD_POST_TO_ME,\n\tREMOVE_POST_OF_MINE,\n\tREMOVE_POST_REQUEST,\n\tREMOVE_POST_SUCCESS,\n\tREMOVE_POST_FAILURE,\n} from '../actions';\n\nexport const initialState = {\n\tmainPosts: [\n\t\t{\n\t\t\tid: 1,\n\t\t\tUser: {\n\t\t\t\tid: 1,\n\t\t\t\tnickname: 'pius',\n\t\t\t},\n\t\t\tcontent: '#Hello#react made by #pius ',\n\t\t\tImages: [\n\t\t\t\t{\n\t\t\t\t\tid: shortid.generate(),\n\t\t\t\t\tsrc:\n\t\t\t\t\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRL13vWu8GOWHAFISKo9v5oBEU75C9udknN2w&usqp=CAU',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: shortid.generate(),\n\t\t\t\t\tsrc:\n\t\t\t\t\t\t'https://i.pinimg.com/736x/0b/2f/8a/0b2f8a51314ab1ebe0505aee843a33b1.jpg',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: shortid.generate(),\n\t\t\t\t\tsrc:\n\t\t\t\t\t\t'https://pbs.twimg.com/profile_images/1256251357763235842/zY8KO59p_400x400.jpg',\n\t\t\t\t},\n\t\t\t],\n\t\t\tComments: [\n\t\t\t\t{\n\t\t\t\t\tid: shortid.generate(),\n\t\t\t\t\tUser: {\n\t\t\t\t\t\tid: shortid.generate(),\n\t\t\t\t\t\tnickname: 'aksfbs',\n\t\t\t\t\t},\n\t\t\t\t\tcontent: '안녕하세요',\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t],\n\timagePaths: [],\n\taddPostLoading: false,\n\taddPostDone: false,\n\taddPostError: null,\n\taddCommentLoading: false,\n\taddCommentDone: false,\n\taddCommentError: null,\n\tremovePostLoading: false,\n\tremovePostDone: false,\n\tremovePostError: null,\n};\n\ninitialState.mainPosts.concat(\n\tArray(20)\n\t\t.fill()\n\t\t.map((item, idx) => ({\n\t\t\tid: shortid.generate(),\n\t\t\tUser: {\n\t\t\t\tid: faker.name.findName(),\n\t\t\t\tnickname: faker.internet.userName(),\n\t\t\t},\n\t\t\tcontent: faker.lorem.sentence(),\n\t\t\tImages: [],\n\t\t\tComments: [\n\t\t\t\t{\n\t\t\t\t\tid: shortid.generate(),\n\t\t\t\t\tUser: {\n\t\t\t\t\t\tid: faker.name.findName(),\n\t\t\t\t\t\tnickname: faker.internet.userName(),\n\t\t\t\t\t},\n\t\t\t\t\tcontent: faker.lorem.sentence(),\n\t\t\t\t},\n\t\t\t],\n\t\t})),\n);\nconst dummyPost = data => ({\n\tid: data.id,\n\tUser: {\n\t\tid: 1,\n\t\tnickname: 'pius',\n\t},\n\tcontent: data.content,\n\tImage: [],\n\tComments: [],\n});\n\nconst dummyComment = data => ({\n\tid: shortid.generate(),\n\tUser: {\n\t\tnickname: 'aksfbs',\n\t},\n\tcontent: data,\n});\nexport const addPostRequest = data => {\n\treturn {\n\t\ttype: ADD_POST_REQUEST,\n\t\tdata: data,\n\t};\n};\n\nexport const removePostRequest = data => {\n\treturn {\n\t\ttype: REMOVE_POST_REQUEST,\n\t\tdata: data,\n\t};\n};\nexport const addCommentRequest = data => {\n\treturn {\n\t\ttype: ADD_COMMENT_REQUEST,\n\t\tdata: data,\n\t};\n};\n\nconst reducer = (state = initialState, action) => {\n\treturn produce(state, draftState => {\n\t\tswitch (action.type) {\n\t\t\t// POST\n\t\t\tcase ADD_POST_REQUEST:\n\t\t\t\tdraftState.addPostLoading = true;\n\t\t\t\tdraftState.addPostDone = false;\n\t\t\t\tbreak;\n\n\t\t\tcase ADD_POST_SUCCESS:\n\t\t\t\tdraftState.mainPosts.unshift(dummyPost(action.data));\n\t\t\t\tdraftState.addPostLoading = false;\n\t\t\t\tdraftState.addPostDone = true;\n\t\t\t\tbreak;\n\t\t\tcase ADD_POST_FAILURE:\n\t\t\t\tdraftState.addPostError = action.error;\n\t\t\t\tbreak;\n\t\t\t// Comment\n\t\t\tcase ADD_COMMENT_REQUEST:\n\t\t\t\tdraftState.addCommentLoading = true;\n\t\t\t\tdraftState.addCommentDone = false;\n\t\t\t\tdraftState.addCommentError = null;\n\t\t\t\tbreak;\n\t\t\tcase ADD_COMMENT_SUCCESS: {\n\t\t\t\t//action.data.content, postId, userId\n\t\t\t\t// comment form에서 comment를 추가할때,\n\t\t\t\t// store에 있는 mainPosts를 찾아서 추가해준다.\n\t\t\t\tconst idx = draftState.mainPosts.findIndex(\n\t\t\t\t\titem => item.id === action.data.postId,\n\t\t\t\t);\n\t\t\t\tdraftState.mainPosts[idx].Comments.unshift(\n\t\t\t\t\tdummyComment(action.data.content),\n\t\t\t\t);\n\t\t\t\tdraftState.addCommentLoading = false;\n\t\t\t\tdraftState.addCommentDone = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ADD_COMMENT_FAILURE:\n\t\t\t\tdraftState.addCommentError = action.error;\n\t\t\t\tbreak;\n\t\t\tcase REMOVE_POST_REQUEST:\n\t\t\t\tdraftState.removePostLoading = true;\n\t\t\t\tdraftState.removePostDone = false;\n\t\t\t\tbreak;\n\t\t\tcase REMOVE_POST_SUCCESS:\n\t\t\t\tdraftState.removePostLoading = false;\n\t\t\t\tdraftState.removePostDone = true;\n\t\t\t\tdraftState.mainPosts = draftState.mainPosts.filter(\n\t\t\t\t\titem => item.id !== action.data,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase REMOVE_POST_FAILURE:\n\t\t\t\tdraftState.removePostLoading = false;\n\t\t\t\tdraftState.removePostError = action.data;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t});\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}