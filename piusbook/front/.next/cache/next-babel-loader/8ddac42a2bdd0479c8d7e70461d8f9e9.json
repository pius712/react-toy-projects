{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from '../actions';\nimport shortid from 'shortid';\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: 'pius'\n    },\n    content: '#Hello#react made by #pius ',\n    Images: [{\n      src: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRL13vWu8GOWHAFISKo9v5oBEU75C9udknN2w&usqp=CAU'\n    }, {\n      src: 'https://i.pinimg.com/736x/0b/2f/8a/0b2f8a51314ab1ebe0505aee843a33b1.jpg'\n    }, {\n      src: 'https://pbs.twimg.com/profile_images/1256251357763235842/zY8KO59p_400x400.jpg'\n    }],\n    Comments: [{\n      User: {\n        id: '',\n        nickname: 'aksfbs'\n      },\n      content: '안녕하세요'\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\n\nvar dummyPost = function dummyPost(text) {\n  return {\n    id: shortid.generate(),\n    User: {\n      id: 1,\n      nickname: 'pius'\n    },\n    content: text,\n    Image: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(content) {\n  return {\n    id: shortid.generate(),\n    User: {\n      nickname: 'aksfbs'\n    },\n    content: content\n  };\n};\n\nexport var addPostRequest = function addPostRequest(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addCommentRequest = function addCommentRequest(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // POST\n    case ADD_POST_REQUEST:\n      console.log('add post request, reducer');\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false\n      });\n\n    case ADD_POST_SUCCESS:\n      console.log('add post success, reducer');\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost(action.data)].concat(_toConsumableArray(state.mainPosts)),\n        addPostLoading: false,\n        addPostDone: true\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostError: action.error\n      });\n    // Comment\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentDone: false,\n        addCommentError: null\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        //action.data.content, postId, userId\n        // comment form에서 comment를 추가할때,\n        // store에 있는 mainPosts를 찾아서 추가해준다.\n        var idx = state.mainPosts.findIndex(function (item) {\n          return item.id === action.data.postId;\n        });\n\n        var post = _objectSpread({}, state.mainPosts[idx]);\n\n        post.Comments = [dummyComment(action.data.content)].concat(_toConsumableArray(post.Comments));\n\n        var mainPosts = _toConsumableArray(state.mainPosts);\n\n        mainPosts[idx] = post;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts: mainPosts,\n          addCommentLoading: false,\n          addCommentDone: true\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentError: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/reducer/post.js"],"names":["ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","shortid","initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","dummyPost","text","generate","Image","dummyComment","addPostRequest","data","type","addCommentRequest","reducer","state","action","console","log","error","idx","findIndex","item","postId","post"],"mappings":"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","sourcesContent":["import {\n\tADD_POST_REQUEST,\n\tADD_POST_SUCCESS,\n\tADD_POST_FAILURE,\n\tADD_COMMENT_REQUEST,\n\tADD_COMMENT_SUCCESS,\n\tADD_COMMENT_FAILURE,\n} from '../actions';\nimport shortid from 'shortid';\n\nexport const initialState = {\n\tmainPosts: [\n\t\t{\n\t\t\tid: 1,\n\t\t\tUser: {\n\t\t\t\tid: 1,\n\t\t\t\tnickname: 'pius',\n\t\t\t},\n\t\t\tcontent: '#Hello#react made by #pius ',\n\t\t\tImages: [\n\t\t\t\t{\n\t\t\t\t\tsrc:\n\t\t\t\t\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRL13vWu8GOWHAFISKo9v5oBEU75C9udknN2w&usqp=CAU',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tsrc:\n\t\t\t\t\t\t'https://i.pinimg.com/736x/0b/2f/8a/0b2f8a51314ab1ebe0505aee843a33b1.jpg',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tsrc:\n\t\t\t\t\t\t'https://pbs.twimg.com/profile_images/1256251357763235842/zY8KO59p_400x400.jpg',\n\t\t\t\t},\n\t\t\t],\n\t\t\tComments: [\n\t\t\t\t{\n\t\t\t\t\tUser: {\n\t\t\t\t\t\tid: '',\n\t\t\t\t\t\tnickname: 'aksfbs',\n\t\t\t\t\t},\n\t\t\t\t\tcontent: '안녕하세요',\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t],\n\timagePaths: [],\n\taddPostLoading: false,\n\taddPostDone: false,\n\taddPostError: null,\n\taddCommentLoading: false,\n\taddCommentDone: false,\n\taddCommentError: null,\n};\n\nconst dummyPost = text => ({\n\tid: shortid.generate(),\n\tUser: {\n\t\tid: 1,\n\t\tnickname: 'pius',\n\t},\n\tcontent: text,\n\tImage: [],\n\tComments: [],\n});\n\nconst dummyComment = content => ({\n\tid: shortid.generate(),\n\tUser: {\n\t\tnickname: 'aksfbs',\n\t},\n\tcontent: content,\n});\nexport const addPostRequest = data => {\n\treturn {\n\t\ttype: ADD_POST_REQUEST,\n\t\tdata: data,\n\t};\n};\n\nexport const addCommentRequest = data => {\n\treturn {\n\t\ttype: ADD_COMMENT_REQUEST,\n\t\tdata: data,\n\t};\n};\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\t// POST\n\t\tcase ADD_POST_REQUEST:\n\t\t\tconsole.log('add post request, reducer');\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\taddPostLoading: true,\n\t\t\t\taddPostDone: false,\n\t\t\t};\n\t\tcase ADD_POST_SUCCESS:\n\t\t\tconsole.log('add post success, reducer');\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmainPosts: [dummyPost(action.data), ...state.mainPosts],\n\t\t\t\taddPostLoading: false,\n\t\t\t\taddPostDone: true,\n\t\t\t};\n\t\tcase ADD_POST_FAILURE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\taddPostError: action.error,\n\t\t\t};\n\t\t// Comment\n\t\tcase ADD_COMMENT_REQUEST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\taddCommentLoading: true,\n\t\t\t\taddCommentDone: false,\n\t\t\t\taddCommentError: null,\n\t\t\t};\n\t\tcase ADD_COMMENT_SUCCESS: {\n\t\t\t//action.data.content, postId, userId\n\t\t\t// comment form에서 comment를 추가할때,\n\t\t\t// store에 있는 mainPosts를 찾아서 추가해준다.\n\t\t\tconst idx = state.mainPosts.findIndex(\n\t\t\t\titem => item.id === action.data.postId,\n\t\t\t);\n\t\t\tconst post = { ...state.mainPosts[idx] };\n\t\t\tpost.Comments = [dummyComment(action.data.content), ...post.Comments];\n\t\t\tconst mainPosts = [...state.mainPosts];\n\t\t\tmainPosts[idx] = post;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmainPosts,\n\t\t\t\taddCommentLoading: false,\n\t\t\t\taddCommentDone: true,\n\t\t\t};\n\t\t}\n\t\tcase ADD_COMMENT_FAILURE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\taddCommentError: action.error,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}