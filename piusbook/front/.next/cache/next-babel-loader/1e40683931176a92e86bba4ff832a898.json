{"ast":null,"code":"import { put, delay, takeLatest, all, fork, call, take } from 'redux-saga/effects';\nimport { registerUser, loginUser, logoutUser, fetchMyInfo, loadUserAPI, editNicknameAPI, followAPI, unfollowAPI, loadFollowersAPI, loadFollowingsAPI, removeFollowerAPI } from '../API/index';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, EDIT_NICKNAME_REQUEST, EDIT_NICKNAME_FAILURE, EDIT_NICKNAME_SUCCESS, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWERS_SUCCESS, REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_FAILURE, REMOVE_FOLLOWER_SUCCESS } from '../actions';\n\nfunction* login(action) {\n  try {\n    const result = yield call(loginUser, action.data); // yield delay(1000);\n\n    console.log(result);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.log(error.response);\n    yield put({\n      type: LOG_IN_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction* logout() {\n  try {\n    yield call(logoutUser); // yield delay(1000);\n\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch {\n    yield put({\n      type: LOG_OUT_FAILURE\n    });\n  }\n}\n\nfunction* signup(action) {\n  try {\n    const result = yield call(registerUser, action.data); // call(함수, 인자);\n    // {email, password, nickname}\n\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    console.log('sign_up_failure');\n    yield put({\n      type: SIGN_UP_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* follow(action) {\n  try {\n    const result = yield call(followAPI, action.data); // yield delay(1000);\n\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      data: err\n    });\n  }\n}\n\nfunction* unfollow(action) {\n  try {\n    const result = yield call(unfollowAPI, action.data);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE\n    });\n  }\n}\n\nfunction* loadMyInfo() {\n  try {\n    const result = yield call(fetchMyInfo);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      data: err.response.message\n    });\n  }\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* editNickname(action) {\n  try {\n    const result = yield call(editNicknameAPI, action.data);\n    yield put({\n      type: EDIT_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: EDIT_NICKNAME_FAILURE,\n      data: err.response.message\n    });\n  }\n}\n\nfunction* loadFollowings() {\n  try {\n    const result = yield call(loadFollowingsAPI);\n    yield put({\n      type: LOAD_FOLLOWINGS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_FOLLOWERS_FAILURE,\n      data: err.response.message\n    });\n  }\n}\n\nfunction* loadFollowers() {\n  try {\n    const result = yield call(loadFollowersAPI);\n    yield put({\n      type: LOAD_FOLLOWERS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_FOLLOWINGS_FAILURE,\n      data: err.response.message\n    });\n  }\n}\n\nfunction* removeFollower(action) {\n  try {\n    const result = yield call(removeFollowerAPI, action.data);\n    yield put({\n      type: REMOVE_FOLLOWER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: REMOVE_FOLLOWER_FAILURE,\n      data: err.response.message\n    });\n  }\n} // watch 사가\n\n\nfunction* watchLogin() {\n  console.log('watch login saga');\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* watchLogout() {\n  yield takeLatest(LOG_OUT_REQUEST, logout);\n}\n\nfunction* watchSignup() {\n  yield takeLatest(SIGN_UP_REQUEST, signup);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLoadInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction* watchEditNickname() {\n  yield takeLatest(EDIT_NICKNAME_REQUEST, editNickname);\n}\n\nfunction* watchLoadFollowings() {\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\nfunction* watchLoadFollowers() {\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\n\nfunction* watchRemoveFollower() {\n  yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogout), fork(watchSignup), fork(watchFollow), fork(watchUnfollow), fork(watchLoadInfo), fork(watchLoadUser), fork(watchEditNickname), fork(watchLoadFollowings), fork(watchLoadFollowers), fork(watchRemoveFollower)]);\n}","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/sagas/user.js"],"names":["put","delay","takeLatest","all","fork","call","take","registerUser","loginUser","logoutUser","fetchMyInfo","loadUserAPI","editNicknameAPI","followAPI","unfollowAPI","loadFollowersAPI","loadFollowingsAPI","removeFollowerAPI","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","EDIT_NICKNAME_REQUEST","EDIT_NICKNAME_FAILURE","EDIT_NICKNAME_SUCCESS","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWERS_SUCCESS","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_FAILURE","REMOVE_FOLLOWER_SUCCESS","login","action","result","data","console","log","type","error","response","logout","signup","err","follow","unfollow","loadMyInfo","message","loadUser","editNickname","loadFollowings","loadFollowers","removeFollower","watchLogin","watchLogout","watchSignup","watchFollow","watchUnfollow","watchLoadInfo","watchLoadUser","watchEditNickname","watchLoadFollowings","watchLoadFollowers","watchRemoveFollower","userSaga"],"mappings":"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","sourcesContent":["import {\n\tput,\n\tdelay,\n\ttakeLatest,\n\tall,\n\tfork,\n\tcall,\n\ttake,\n} from 'redux-saga/effects';\nimport {\n\tregisterUser,\n\tloginUser,\n\tlogoutUser,\n\tfetchMyInfo,\n\tloadUserAPI,\n\teditNicknameAPI,\n\tfollowAPI,\n\tunfollowAPI,\n\tloadFollowersAPI,\n\tloadFollowingsAPI,\n\tremoveFollowerAPI,\n} from '../API/index';\nimport {\n\tLOG_IN_REQUEST,\n\tLOG_IN_SUCCESS,\n\tLOG_IN_FAILURE,\n\tLOG_OUT_REQUEST,\n\tLOG_OUT_SUCCESS,\n\tLOG_OUT_FAILURE,\n\tSIGN_UP_REQUEST,\n\tSIGN_UP_SUCCESS,\n\tSIGN_UP_FAILURE,\n\tFOLLOW_REQUEST,\n\tFOLLOW_SUCCESS,\n\tFOLLOW_FAILURE,\n\tUNFOLLOW_REQUEST,\n\tUNFOLLOW_SUCCESS,\n\tUNFOLLOW_FAILURE,\n\tLOAD_MY_INFO_REQUEST,\n\tLOAD_MY_INFO_SUCCESS,\n\tLOAD_MY_INFO_FAILURE,\n\tLOAD_USER_REQUEST,\n\tLOAD_USER_SUCCESS,\n\tLOAD_USER_FAILURE,\n\tEDIT_NICKNAME_REQUEST,\n\tEDIT_NICKNAME_FAILURE,\n\tEDIT_NICKNAME_SUCCESS,\n\tLOAD_FOLLOWINGS_REQUEST,\n\tLOAD_FOLLOWINGS_SUCCESS,\n\tLOAD_FOLLOWINGS_FAILURE,\n\tLOAD_FOLLOWERS_REQUEST,\n\tLOAD_FOLLOWERS_FAILURE,\n\tLOAD_FOLLOWERS_SUCCESS,\n\tREMOVE_FOLLOWER_REQUEST,\n\tREMOVE_FOLLOWER_FAILURE,\n\tREMOVE_FOLLOWER_SUCCESS,\n} from '../actions';\n\nfunction* login(action) {\n\ttry {\n\t\tconst result = yield call(loginUser, action.data);\n\t\t// yield delay(1000);\n\t\tconsole.log(result);\n\t\tyield put({\n\t\t\ttype: LOG_IN_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t} catch (error) {\n\t\tconsole.log(error.response);\n\t\tyield put({\n\t\t\ttype: LOG_IN_FAILURE,\n\t\t\tdata: error.response.data,\n\t\t});\n\t}\n}\nfunction* logout() {\n\ttry {\n\t\tyield call(logoutUser);\n\t\t// yield delay(1000);\n\t\tyield put({\n\t\t\ttype: LOG_OUT_SUCCESS,\n\t\t});\n\t} catch {\n\t\tyield put({\n\t\t\ttype: LOG_OUT_FAILURE,\n\t\t});\n\t}\n}\n\nfunction* signup(action) {\n\ttry {\n\t\tconst result = yield call(registerUser, action.data); // call(함수, 인자);\n\t\t// {email, password, nickname}\n\t\tconsole.log(result);\n\t\tyield put({\n\t\t\ttype: SIGN_UP_SUCCESS,\n\t\t});\n\t} catch (err) {\n\t\tconsole.log('sign_up_failure');\n\t\tyield put({\n\t\t\ttype: SIGN_UP_FAILURE,\n\t\t\tdata: err.response.data,\n\t\t});\n\t}\n}\nfunction* follow(action) {\n\ttry {\n\t\tconst result = yield call(followAPI, action.data);\n\t\t// yield delay(1000);\n\t\tyield put({\n\t\t\ttype: FOLLOW_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: FOLLOW_FAILURE,\n\t\t\tdata: err,\n\t\t});\n\t}\n}\nfunction* unfollow(action) {\n\ttry {\n\t\tconst result = yield call(unfollowAPI, action.data);\n\t\tyield put({\n\t\t\ttype: UNFOLLOW_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: UNFOLLOW_FAILURE,\n\t\t});\n\t}\n}\nfunction* loadMyInfo() {\n\ttry {\n\t\tconst result = yield call(fetchMyInfo);\n\t\tyield put({\n\t\t\ttype: LOAD_MY_INFO_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: LOAD_MY_INFO_FAILURE,\n\t\t\tdata: err.response.message,\n\t\t});\n\t}\n}\n\nfunction* loadUser(action) {\n\ttry {\n\t\tconst result = yield call(loadUserAPI, action.data);\n\t\tyield put({\n\t\t\ttype: LOAD_USER_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t} catch (err) {\n\t\tconsole.error(err);\n\t\tyield put({\n\t\t\ttype: LOAD_USER_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n}\nfunction* editNickname(action) {\n\ttry {\n\t\tconst result = yield call(editNicknameAPI, action.data);\n\t\tyield put({\n\t\t\ttype: EDIT_NICKNAME_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: EDIT_NICKNAME_FAILURE,\n\t\t\tdata: err.response.message,\n\t\t});\n\t}\n}\nfunction* loadFollowings() {\n\ttry {\n\t\tconst result = yield call(loadFollowingsAPI);\n\t\tyield put({\n\t\t\ttype: LOAD_FOLLOWINGS_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: LOAD_FOLLOWERS_FAILURE,\n\t\t\tdata: err.response.message,\n\t\t});\n\t}\n}\nfunction* loadFollowers() {\n\ttry {\n\t\tconst result = yield call(loadFollowersAPI);\n\t\tyield put({\n\t\t\ttype: LOAD_FOLLOWERS_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: LOAD_FOLLOWINGS_FAILURE,\n\t\t\tdata: err.response.message,\n\t\t});\n\t}\n}\nfunction* removeFollower(action) {\n\ttry {\n\t\tconst result = yield call(removeFollowerAPI, action.data);\n\t\tyield put({\n\t\t\ttype: REMOVE_FOLLOWER_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t} catch (err) {\n\t\tconsole.error(err);\n\t\tyield put({\n\t\t\ttype: REMOVE_FOLLOWER_FAILURE,\n\t\t\tdata: err.response.message,\n\t\t});\n\t}\n}\n// watch 사가\nfunction* watchLogin() {\n\tconsole.log('watch login saga');\n\tyield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* watchLogout() {\n\tyield takeLatest(LOG_OUT_REQUEST, logout);\n}\nfunction* watchSignup() {\n\tyield takeLatest(SIGN_UP_REQUEST, signup);\n}\nfunction* watchFollow() {\n\tyield takeLatest(FOLLOW_REQUEST, follow);\n}\nfunction* watchUnfollow() {\n\tyield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\nfunction* watchLoadInfo() {\n\tyield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchLoadUser() {\n\tyield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\nfunction* watchEditNickname() {\n\tyield takeLatest(EDIT_NICKNAME_REQUEST, editNickname);\n}\nfunction* watchLoadFollowings() {\n\tyield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\nfunction* watchLoadFollowers() {\n\tyield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\nfunction* watchRemoveFollower() {\n\tyield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\n}\nexport default function* userSaga() {\n\tyield all([\n\t\tfork(watchLogin),\n\t\tfork(watchLogout),\n\t\tfork(watchSignup),\n\t\tfork(watchFollow),\n\t\tfork(watchUnfollow),\n\t\tfork(watchLoadInfo),\n\t\tfork(watchLoadUser),\n\t\tfork(watchEditNickname),\n\t\tfork(watchLoadFollowings),\n\t\tfork(watchLoadFollowers),\n\t\tfork(watchRemoveFollower),\n\t]);\n}\n"]},"metadata":{},"sourceType":"module"}