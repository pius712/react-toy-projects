{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect, useCallback } from 'react';\nimport useSWR from 'swr';\nimport AppLayout from '../components/AppLayout';\nimport NicknameEditForm from '../components/NicknameEditForm';\nimport FollowList from '../components/FollowList';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { END } from 'redux-saga';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport wrapper from '../store/configureStore';\nimport { LOAD_MY_INFO_REQUEST, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST } from '../actions';\n\nconst fetcher = url => {\n  return axios.get(url, {\n    withCredentials: true\n  }).then(result => result.data);\n};\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    0: followersLimit,\n    1: setFollowersLimit\n  } = useState(3);\n  const {\n    0: followingsLimit,\n    1: setFollowingsLimit\n  } = useState(3);\n  const {\n    data: followers,\n    error: followersError\n  } = useSWR(`http://localhost:8080/user/followers?limit=${followersLimit}`, fetcher);\n  const {\n    data: followings,\n    error: followingsError\n  } = useSWR(`http://localhost:8080/user/followings?limit=${followingsLimit}`, fetcher);\n  useEffect(() => {\n    // dispatch({\n    // \ttype: LOAD_MY_INFO_REQUEST,\n    // });\n    if (!me) {\n      Router.push('/');\n    }\n  }, [me]);\n  const loadMoreFollowings = useCallback(() => {\n    setFollowingsLimit(prev => prev + 3);\n  }, []);\n  const loadMoreFollowers = useCallback(() => {\n    setFollowersLimit(prev => prev + 3);\n  }, []);\n\n  if (!me) {\n    return __jsx(\"div\", null, \"\\uB0B4 \\uC815\\uBCF4 \\uB85C\\uB529\\uC911...\");\n  }\n\n  if (followersError || followingsError) {\n    console.error(followersError || followingsError);\n    return __jsx(\"div\", null, \"\\uD314\\uB85C\\uC6B0 \\uD314\\uB85C\\uC789 \\uB85C\\uB529 \\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4\");\n  } // swr로 대체\n  // useEffect(() => {\n  // \tdispatch({\n  // \t\ttype: LOAD_FOLLOWERS_REQUEST,\n  // \t});\n  // \tdispatch({\n  // \t\ttype: LOAD_FOLLOWINGS_REQUEST,\n  // \t});\n  // }, []);\n  // useEffect(() => {\n  // \tif (editNicknameDone) {\n  // \t\tRouter.push('/');\n  // \t}\n  // }, [editNicknameDone]);\n\n\n  return __jsx(AppLayout, null, __jsx(NicknameEditForm, null), __jsx(FollowList, {\n    header: \"\\uD314\\uB85C\\uC789\",\n    data: followings,\n    onClickMore: loadMoreFollowings,\n    loading: !followingsError && !followings\n  }), __jsx(FollowList, {\n    header: \"\\uD314\\uB85C\\uC6CC\",\n    data: followers,\n    onClickMore: loadMoreFollowers,\n    loading: !followersError && !followers\n  }));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async ({\n  store,\n  req\n}) => {\n  const cookie = req ? req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});\nexport default Profile;","map":null,"metadata":{},"sourceType":"module"}