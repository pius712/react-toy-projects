{"ast":null,"code":"var _jsxFileName = \"/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/pages/post/[id].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport wrapper from '../../store/configureStore';\nimport { useSelector } from 'react-redux';\nimport { LOAD_A_POST_REQUEST, LOAD_MY_INFO_REQUEST } from '../../actions';\nimport PostCard from '../../components/PostCard';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport AppLayout from '../../components/AppLayout';\n\nconst SinglePost = () => {\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 3\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAE00\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: singlePost.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: `${singlePost.User.nickname}님의 게시글`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: singlePost.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebird.com/favicon.ico',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: `https://nodebird.com/post/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  })), __jsx(PostCard, {\n    post: singlePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default SinglePost;\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_A_POST_REQUEST,\n    data: {\n      postId: context.params.id\n    }\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/pages/post/[id].js"],"names":["React","wrapper","useSelector","LOAD_A_POST_REQUEST","LOAD_MY_INFO_REQUEST","PostCard","END","axios","AppLayout","SinglePost","singlePost","state","post","User","nickname","content","Images","src","id","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","dispatch","type","data","postId","params","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React from 'react';\nimport wrapper from '../../store/configureStore';\nimport { useSelector } from 'react-redux';\nimport { LOAD_A_POST_REQUEST, LOAD_MY_INFO_REQUEST } from '../../actions';\nimport PostCard from '../../components/PostCard';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport AppLayout from '../../components/AppLayout';\nconst SinglePost = () => {\n\tconst { singlePost } = useSelector(state => state.post);\n\treturn (\n\t\t<AppLayout>\n\t\t\t<Head>\n\t\t\t\t<title>\n\t\t\t\t\t{singlePost.User.nickname}\n\t\t\t\t\t님의 글\n\t\t\t\t</title>\n\t\t\t\t<meta name=\"description\" content={singlePost.content} />\n\t\t\t\t<meta\n\t\t\t\t\tproperty=\"og:title\"\n\t\t\t\t\tcontent={`${singlePost.User.nickname}님의 게시글`}\n\t\t\t\t/>\n\t\t\t\t<meta property=\"og:description\" content={singlePost.content} />\n\t\t\t\t<meta\n\t\t\t\t\tproperty=\"og:image\"\n\t\t\t\t\tcontent={\n\t\t\t\t\t\tsinglePost.Images[0]\n\t\t\t\t\t\t\t? singlePost.Images[0].src\n\t\t\t\t\t\t\t: 'https://nodebird.com/favicon.ico'\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<meta property=\"og:url\" content={`https://nodebird.com/post/${id}`} />\n\t\t\t</Head>\n\t\t\t<PostCard post={singlePost}></PostCard>\n\t\t</AppLayout>\n\t);\n};\n\nexport default SinglePost;\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n\tconst cookie = context.req ? context.req.headers.cookie : '';\n\taxios.defaults.headers.Cookie = '';\n\tif (context.req && cookie) {\n\t\taxios.defaults.headers.Cookie = cookie;\n\t}\n\tcontext.store.dispatch({\n\t\ttype: LOAD_MY_INFO_REQUEST,\n\t});\n\tcontext.store.dispatch({\n\t\ttype: LOAD_A_POST_REQUEST,\n\t\tdata: {\n\t\t\tpostId: context.params.id,\n\t\t},\n\t});\n\tcontext.store.dispatch(END);\n\tawait context.store.sagaTask.toPromise();\n});\n"]},"metadata":{},"sourceType":"module"}