{"ast":null,"code":"var _jsxFileName = \"/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/components/PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport propTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Card, Popover, Button, List, Comment, Avatar } from 'antd';\nimport { RetweetOutlined, HeartOutlined, HeartFilled, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PostCardContent from './PostCardContent';\nimport CommentForm from './CommentForm';\nimport PostImages from './PostImages';\nimport FollowButton from './FollowButton';\nimport { removePostRequest } from '../reducer/post';\nconst PostCardWrapper = styled.div.withConfig({\n  displayName: \"PostCard__PostCardWrapper\",\n  componentId: \"v37uo4-0\"\n})([\"margin:10px 5px;\"]);\nconst Content = styled.div.withConfig({\n  displayName: \"PostCard__Content\",\n  componentId: \"v37uo4-1\"\n})([\"\"]);\nconst Image = styled.img.withConfig({\n  displayName: \"PostCard__Image\",\n  componentId: \"v37uo4-2\"\n})([\"\"]);\n\nconst PostCard = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const me = useSelector(state => state.user.me);\n  const id = me && me.id;\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentFormOpend,\n    1: setCommentFormOpend\n  } = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, [liked, setLiked]);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpend(prev => !prev);\n  }, [setCommentFormOpend]);\n  const onDeletePost = useCallback(() => {\n    dispatch(removePostRequest(post.id));\n  }, [dispatch, post]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }\n  }, __jsx(Card, {\n    cover: post.Images && __jsx(PostImages, {\n      images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 27\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 6\n      }\n    }), liked ? __jsx(HeartFilled, {\n      key: \"heart-filled\",\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"message\",\n      onClick: onToggleComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 6\n      }\n    }), __jsx(Popover, {\n      key: \"ellipsis\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 8\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        onClick: onDeletePost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 10\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 6\n      }\n    }, __jsx(EllipsisOutlined, {\n      key: \"ellipsis\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }))],\n    extra: __jsx(FollowButton, {\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 12\n      }\n    }, \"\\uD314\\uB85C\\uC6B0\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }, __jsx(Card.Meta, {\n    avatar: post.User.nickname[0],\n    title: post.User.nickname,\n    description: __jsx(PostCardContent, {\n      postData: post.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  })), commentFormOpend && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, __jsx(CommentForm, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 6\n    }\n  }), __jsx(List, {\n    header: `${post.Comments.length}개의 댓글이 있습니다.`,\n    dataSource: post.Comments,\n    renderItem: item => __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 8\n      }\n    }, __jsx(Comment, {\n      avatar: __jsx(Avatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 18\n        }\n      }, item.User.nickname[0]),\n      author: item.User.nickname,\n      content: item.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 6\n    }\n  })));\n};\n\nPostCard.propTypes = {\n  post: propTypes.object\n};\nexport default PostCard;","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/components/PostCard.js"],"names":["React","useState","useCallback","propTypes","styled","Card","Popover","Button","List","Comment","Avatar","RetweetOutlined","HeartOutlined","HeartFilled","MessageOutlined","EllipsisOutlined","useSelector","useDispatch","PostCardContent","CommentForm","PostImages","FollowButton","removePostRequest","PostCardWrapper","div","Content","Image","img","PostCard","post","dispatch","me","state","user","id","liked","setLiked","commentFormOpend","setCommentFormOpend","onToggleLike","prev","onToggleComment","onDeletePost","Images","User","nickname","content","Comments","length","item","object"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,MAAxB,EAAgCC,IAAhC,EAAsCC,OAAtC,EAA+CC,MAA/C,QAA6D,MAA7D;AACA,SACCC,eADD,EAECC,aAFD,EAGCC,WAHD,EAICC,eAJD,EAKCC,gBALD,QAMO,mBANP;AAOA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AAEA,MAAMC,eAAe,GAAGnB,MAAM,CAACoB,GAAV;AAAA;AAAA;AAAA,wBAArB;AAGA,MAAMC,OAAO,GAAGrB,MAAM,CAACoB,GAAV;AAAA;AAAA;AAAA,QAAb;AACA,MAAME,KAAK,GAAGtB,MAAM,CAACuB,GAAV;AAAA;AAAA;AAAA,QAAX;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC9B,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,EAAE,GAAGf,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,EAArB,CAAtB;AACA,QAAMG,EAAE,GAAGH,EAAE,IAAIA,EAAE,CAACG,EAApB;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBnC,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM;AAAA,OAACoC,gBAAD;AAAA,OAAmBC;AAAnB,MAA0CrC,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAMsC,YAAY,GAAGrC,WAAW,CAAC,MAAM;AACtCkC,IAAAA,QAAQ,CAACI,IAAI,IAAI,CAACA,IAAV,CAAR;AACA,GAF+B,EAE7B,CAACL,KAAD,EAAQC,QAAR,CAF6B,CAAhC;AAIA,QAAMK,eAAe,GAAGvC,WAAW,CAAC,MAAM;AACzCoC,IAAAA,mBAAmB,CAACE,IAAI,IAAI,CAACA,IAAV,CAAnB;AACA,GAFkC,EAEhC,CAACF,mBAAD,CAFgC,CAAnC;AAGA,QAAMI,YAAY,GAAGxC,WAAW,CAAC,MAAM;AACtC4B,IAAAA,QAAQ,CAACR,iBAAiB,CAACO,IAAI,CAACK,EAAN,CAAlB,CAAR;AACA,GAF+B,EAE7B,CAACJ,QAAD,EAAWD,IAAX,CAF6B,CAAhC;AAGA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AACC,IAAA,KAAK,EAAEA,IAAI,CAACc,MAAL,IAAe,MAAC,UAAD;AAAY,MAAA,MAAM,EAAEd,IAAI,CAACc,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADvB;AAEC,IAAA,OAAO,EAAE,CACR,MAAC,eAAD;AAAiB,MAAA,GAAG,EAAC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADQ,EAERR,KAAK,GACJ,MAAC,WAAD;AAAa,MAAA,GAAG,EAAC,cAAjB;AAAgC,MAAA,OAAO,EAAEI,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI,GAGJ,MAAC,aAAD;AAAe,MAAA,GAAG,EAAC,OAAnB;AAA2B,MAAA,OAAO,EAAEA,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALO,EAQR,MAAC,eAAD;AAAiB,MAAA,GAAG,EAAC,SAArB;AAA+B,MAAA,OAAO,EAAEE,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARQ,EASR,MAAC,OAAD;AACC,MAAA,GAAG,EAAC,UADL;AAEC,MAAA,OAAO,EACN,MAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEP,EAAE,IAAIL,IAAI,CAACe,IAAL,CAAUV,EAAV,KAAiBA,EAAvB,GACA,4BACC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADD,EAEC,MAAC,MAAD;AAAQ,QAAA,OAAO,EAAEQ,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFD,CADA,GAMA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF,CAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAeC,MAAC,gBAAD;AAAkB,MAAA,GAAG,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfD,CATQ,CAFV;AA6BC,IAAA,KAAK,EAAE,MAAC,YAAD;AAAc,MAAA,IAAI,EAAEb,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BA7BR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA+BC,MAAC,IAAD,CAAM,IAAN;AACC,IAAA,MAAM,EAAEA,IAAI,CAACe,IAAL,CAAUC,QAAV,CAAmB,CAAnB,CADT;AAEC,IAAA,KAAK,EAAEhB,IAAI,CAACe,IAAL,CAAUC,QAFlB;AAGC,IAAA,WAAW,EACV,MAAC,eAAD;AAAiB,MAAA,QAAQ,EAAEhB,IAAI,CAACiB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BD,CADD,EAwCET,gBAAgB,IAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,WAAD;AAAa,IAAA,IAAI,EAAER,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,MAAC,IAAD;AACC,IAAA,MAAM,EAAG,GAAEA,IAAI,CAACkB,QAAL,CAAcC,MAAO,cADjC;AAEC,IAAA,UAAU,EAAEnB,IAAI,CAACkB,QAFlB;AAGC,IAAA,UAAU,EAAEE,IAAI,IACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,MAAC,OAAD;AACC,MAAA,MAAM,EAAE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASA,IAAI,CAACL,IAAL,CAAUC,QAAV,CAAmB,CAAnB,CAAT,CADT;AAEC,MAAA,MAAM,EAAEI,IAAI,CAACL,IAAL,CAAUC,QAFnB;AAGC,MAAA,OAAO,EAAEI,IAAI,CAACH,OAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CAzCF,CADD;AA6DA,CA7ED;;AA8EAlB,QAAQ,CAACzB,SAAT,GAAqB;AACpB0B,EAAAA,IAAI,EAAE1B,SAAS,CAAC+C;AADI,CAArB;AAGA,eAAetB,QAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport propTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Card, Popover, Button, List, Comment, Avatar } from 'antd';\nimport {\n\tRetweetOutlined,\n\tHeartOutlined,\n\tHeartFilled,\n\tMessageOutlined,\n\tEllipsisOutlined,\n} from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PostCardContent from './PostCardContent';\nimport CommentForm from './CommentForm';\nimport PostImages from './PostImages';\nimport FollowButton from './FollowButton';\nimport { removePostRequest } from '../reducer/post';\n\nconst PostCardWrapper = styled.div`\n\tmargin: 10px 5px;\n`;\nconst Content = styled.div``;\nconst Image = styled.img``;\nconst PostCard = ({ post }) => {\n\tconst dispatch = useDispatch();\n\tconst me = useSelector(state => state.user.me);\n\tconst id = me && me.id;\n\tconst [liked, setLiked] = useState(false);\n\tconst [commentFormOpend, setCommentFormOpend] = useState(false);\n\tconst onToggleLike = useCallback(() => {\n\t\tsetLiked(prev => !prev);\n\t}, [liked, setLiked]);\n\n\tconst onToggleComment = useCallback(() => {\n\t\tsetCommentFormOpend(prev => !prev);\n\t}, [setCommentFormOpend]);\n\tconst onDeletePost = useCallback(() => {\n\t\tdispatch(removePostRequest(post.id));\n\t}, [dispatch, post]);\n\treturn (\n\t\t<div>\n\t\t\t<Card\n\t\t\t\tcover={post.Images && <PostImages images={post.Images}></PostImages>}\n\t\t\t\tactions={[\n\t\t\t\t\t<RetweetOutlined key=\"retweet\" />,\n\t\t\t\t\tliked ? (\n\t\t\t\t\t\t<HeartFilled key=\"heart-filled\" onClick={onToggleLike} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<HeartOutlined key=\"heart\" onClick={onToggleLike} />\n\t\t\t\t\t),\n\n\t\t\t\t\t<MessageOutlined key=\"message\" onClick={onToggleComment} />,\n\t\t\t\t\t<Popover\n\t\t\t\t\t\tkey=\"ellipsis\"\n\t\t\t\t\t\tcontent={\n\t\t\t\t\t\t\t<Button.Group>\n\t\t\t\t\t\t\t\t{id && post.User.id === id ? (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<Button>수정</Button>\n\t\t\t\t\t\t\t\t\t\t<Button onClick={onDeletePost}>삭제</Button>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Button>신고</Button>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Button.Group>\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<EllipsisOutlined key=\"ellipsis\" />\n\t\t\t\t\t</Popover>,\n\t\t\t\t]}\n\t\t\t\textra={<FollowButton post={post}>팔로우</FollowButton>}\n\t\t\t>\n\t\t\t\t<Card.Meta\n\t\t\t\t\tavatar={post.User.nickname[0]}\n\t\t\t\t\ttitle={post.User.nickname}\n\t\t\t\t\tdescription={\n\t\t\t\t\t\t<PostCardContent postData={post.content}></PostCardContent>\n\t\t\t\t\t}\n\t\t\t\t></Card.Meta>\n\t\t\t</Card>\n\t\t\t{commentFormOpend && (\n\t\t\t\t<div>\n\t\t\t\t\t<CommentForm post={post} />\n\t\t\t\t\t<List\n\t\t\t\t\t\theader={`${post.Comments.length}개의 댓글이 있습니다.`}\n\t\t\t\t\t\tdataSource={post.Comments}\n\t\t\t\t\t\trenderItem={item => (\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<Comment\n\t\t\t\t\t\t\t\t\tavatar={<Avatar>{item.User.nickname[0]}</Avatar>}\n\t\t\t\t\t\t\t\t\tauthor={item.User.nickname}\n\t\t\t\t\t\t\t\t\tcontent={item.content}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\nPostCard.propTypes = {\n\tpost: propTypes.object,\n};\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}