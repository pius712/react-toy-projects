{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/pages/hashtag/[tag].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport AppLayout from '../../components/AppLayout';\nimport PostForm from '../../components/PostForm';\nimport PostCard from '../../components/PostCard';\nimport { LOAD_POST_REQUEST, LOAD_HASHTAG_POSTS_REQUEST } from '../../actions';\nimport { useRouter } from 'next/router';\n\nvar Hashtag = function Hashtag() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePosts = _useSelector2.hasMorePosts,\n      loadPostLoading = _useSelector2.loadPostLoading;\n\n  var router = useRouter();\n  var tag = router.query.tag;\n  var dispatch = useDispatch();\n  useEffect(function () {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight + 300 > document.documentElement.scrollHeight && hasMorePosts && !loadPostLoading) {\n        // 마지막 mainPosts의 id\n        var lastId = mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id;\n        console.log('lastId', lastId);\n        dispatch({\n          type: LOAD_HASHTAG_POSTS_REQUEST,\n          data: tag\n        });\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePosts, loadPostLoading, mainPosts]);\n  return __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }\n  }, me && __jsx(PostForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), mainPosts.map(function (post, index) {\n    return __jsx(PostCard, {\n      key: post.id,\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    });\n  }));\n}; // AppLayout 안에 있는 것이 children이 되는 것.\n\n\n_s(Hashtag, \"dgZf2JS7Q1SyKju8uW1e+3IYDc0=\", false, function () {\n  return [useSelector, useSelector, useRouter, useDispatch];\n});\n\n_c = Hashtag;\nexport var __N_SSP = true;\nexport default Hashtag;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hashtag\");","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/pages/hashtag/[tag].js"],"names":["React","useEffect","useSelector","useDispatch","AppLayout","PostForm","PostCard","LOAD_POST_REQUEST","LOAD_HASHTAG_POSTS_REQUEST","useRouter","Hashtag","state","user","me","post","mainPosts","hasMorePosts","loadPostLoading","router","tag","query","dispatch","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","console","log","type","data","addEventListener","removeEventListener","map","index"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SACCC,iBADD,EAGCC,0BAHD,QAIO,eAJP;AAOA,SAASC,SAAT,QAA0B,aAA1B;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAAA,qBACNR,WAAW,CAAC,UAAAS,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CADL;AAAA,MACbC,EADa,gBACbA,EADa;;AAAA,sBAEgCX,WAAW,CAC/D,UAAAS,KAAK;AAAA,WAAIA,KAAK,CAACG,IAAV;AAAA,GAD0D,CAF3C;AAAA,MAEbC,SAFa,iBAEbA,SAFa;AAAA,MAEFC,YAFE,iBAEFA,YAFE;AAAA,MAEYC,eAFZ,iBAEYA,eAFZ;;AAKrB,MAAMC,MAAM,GAAGT,SAAS,EAAxB;AALqB,MAMbU,GANa,GAMLD,MAAM,CAACE,KANF,CAMbD,GANa;AAOrB,MAAME,QAAQ,GAAGlB,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,YAAM;AACf,aAASqB,QAAT,GAAoB;AACnB,UACCC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyD,GAAzD,GACCF,QAAQ,CAACC,eAAT,CAAyBE,YAD1B,IAEAZ,YAFA,IAGA,CAACC,eAJF,EAKE;AACD;AACA,YAAMY,MAAM,GACXd,SAAS,CAACA,SAAS,CAACe,MAAV,GAAmB,CAApB,CAAT,IAAmCf,SAAS,CAACA,SAAS,CAACe,MAAV,GAAmB,CAApB,CAAT,CAAgCC,EADpE;AAEAC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,MAAtB;AACAR,QAAAA,QAAQ,CAAC;AACRa,UAAAA,IAAI,EAAE1B,0BADE;AAER2B,UAAAA,IAAI,EAAEhB;AAFE,SAAD,CAAR;AAIA;AACD;;AACDI,IAAAA,MAAM,CAACa,gBAAP,CAAwB,QAAxB,EAAkCd,QAAlC;AACA,WAAO,YAAM;AACZC,MAAAA,MAAM,CAACc,mBAAP,CAA2B,QAA3B,EAAqCf,QAArC;AACA,KAFD;AAGA,GAtBQ,EAsBN,CAACN,YAAD,EAAeC,eAAf,EAAgCF,SAAhC,CAtBM,CAAT;AAuBA,SACC,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEF,EAAE,IAAI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,EAEEE,SAAS,CAACuB,GAAV,CAAc,UAACxB,IAAD,EAAOyB,KAAP;AAAA,WACd,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEzB,IAAI,CAACiB,EAApB;AAAwB,MAAA,IAAI,EAAEjB,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADc;AAAA,GAAd,CAFF,CADD;AAQA,CAvCD,C,CAwCA;;;GAxCMJ,O;UACUR,W,EACsCA,W,EAGtCO,S,EAEEN,W;;;KAPZO,O;;AAyCN,eAAeA,OAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { END } from 'redux-saga';\nimport AppLayout from '../../components/AppLayout';\nimport PostForm from '../../components/PostForm';\nimport PostCard from '../../components/PostCard';\nimport {\n\tLOAD_POST_REQUEST,\n\tLOAD_MY_INFO_REQUEST,\n\tLOAD_HASHTAG_POSTS_REQUEST,\n} from '../../actions';\nimport wrapper from '../../store/configureStore';\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nconst Hashtag = () => {\n\tconst { me } = useSelector(state => state.user);\n\tconst { mainPosts, hasMorePosts, loadPostLoading } = useSelector(\n\t\tstate => state.post,\n\t);\n\tconst router = useRouter();\n\tconst { tag } = router.query;\n\tconst dispatch = useDispatch();\n\tuseEffect(() => {\n\t\tfunction onScroll() {\n\t\t\tif (\n\t\t\t\twindow.scrollY + document.documentElement.clientHeight + 300 >\n\t\t\t\t\tdocument.documentElement.scrollHeight &&\n\t\t\t\thasMorePosts &&\n\t\t\t\t!loadPostLoading\n\t\t\t) {\n\t\t\t\t// 마지막 mainPosts의 id\n\t\t\t\tconst lastId =\n\t\t\t\t\tmainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id;\n\t\t\t\tconsole.log('lastId', lastId);\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: LOAD_HASHTAG_POSTS_REQUEST,\n\t\t\t\t\tdata: tag,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\twindow.addEventListener('scroll', onScroll);\n\t\treturn () => {\n\t\t\twindow.removeEventListener('scroll', onScroll);\n\t\t};\n\t}, [hasMorePosts, loadPostLoading, mainPosts]);\n\treturn (\n\t\t<AppLayout>\n\t\t\t{me && <PostForm></PostForm>}\n\t\t\t{mainPosts.map((post, index) => (\n\t\t\t\t<PostCard key={post.id} post={post}></PostCard>\n\t\t\t))}\n\t\t</AppLayout>\n\t);\n};\n// AppLayout 안에 있는 것이 children이 되는 것.\nexport default Hashtag;\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n\tasync ({ store, req, params }) => {\n\t\tconst cookie = req ? req.headers.cookie : '';\n\t\taxios.defaults.headers.Cookie = '';\n\t\tif (req && cookie) {\n\t\t\taxios.defaults.headers.Cookie = cookie;\n\t\t}\n\t\tstore.dispatch({\n\t\t\ttype: LOAD_HASHTAG_POSTS_REQUEST,\n\t\t\tdata: params.tag,\n\t\t});\n\t\tstore.dispatch({\n\t\t\ttype: LOAD_MY_INFO_REQUEST,\n\t\t});\n\t\tstore.dispatch(END);\n\t\tawait store.sagaTask.toPromise();\n\t},\n);\n"]},"metadata":{},"sourceType":"module"}