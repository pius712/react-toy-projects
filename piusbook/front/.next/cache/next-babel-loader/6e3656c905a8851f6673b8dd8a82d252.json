{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport styled from 'styled-components';\nimport useInput from '../hooks/useInput';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SIGN_UP_REQUEST } from '../actions';\nimport Router from 'next/router';\nvar SignupForm = styled.form.withConfig({\n  displayName: \"signup__SignupForm\",\n  componentId: \"md2feb-0\"\n})([\"border:1px solid gray;\"]);\nvar ErrorLog = styled.div.withConfig({\n  displayName: \"signup__ErrorLog\",\n  componentId: \"md2feb-1\"\n})([\"color:red;\"]);\n\nvar Signup = function Signup() {\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      email = _useInput2[0],\n      onChangeEmail = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      nickname = _useInput4[0],\n      onChangeNickname = _useInput4[1];\n\n  var _useInput5 = useInput(''),\n      _useInput6 = _slicedToArray(_useInput5, 2),\n      password = _useInput6[0],\n      onChangePassword = _useInput6[1];\n\n  var _useState = useState(''),\n      passwordCheck = _useState[0],\n      setPasswordCheck = _useState[1];\n\n  var _useState2 = useState(false),\n      passwordError = _useState2[0],\n      setPasswordError = _useState2[1];\n\n  var _useState3 = useState(false),\n      termChecked = _useState3[0],\n      setTermChecked = _useState3[1];\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      signUpDone = _useSelector.signUpDone,\n      signUpError = _useSelector.signUpError,\n      me = _useSelector.me;\n\n  useEffect(function () {\n    if (signUpDone) {\n      Router.replace('/');\n    }\n  }, [signUpDone]);\n  useEffect(function () {\n    if (signUpError) {\n      console.log(signUpError);\n      alert(signUpError);\n    }\n  }, [signUpError]);\n  useEffect(function () {\n    if (me && me.id) {\n      Router.replace('/'); // 라우트 기록 자체가 대체되기 때문에, 뒤로가기로 못 돌아간다.\n      // Push를 하면, 현재 페이지가 history에 남아서 뒤로가기 하면 돌아간다.\n    }\n  });\n  var onChangePasswordCheck = useCallback(function (e) {\n    e.preventDefault();\n    setPasswordCheck(e.target.value);\n    console.log(e.target.value);\n    console.log(password);\n    setPasswordError(e.target.value !== password);\n  }, [password]);\n  var onChangeTermChecked = useCallback(function (e) {\n    console.log(e.target.checked);\n    setTermChecked(e.target.checked);\n  }, []);\n  var onSubmit = useCallback(function (e) {\n    e.preventDefault();\n\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!termChecked) {\n      console.log('termChecked', termChecked);\n      return setTermChecked(false);\n    }\n\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        email: email,\n        password: password,\n        nickname: nickname\n      }\n    });\n  }, [password, passwordCheck, termChecked, dispatch, nickname, email]);\n  return __jsx(AppLayout, null, __jsx(SignupForm, {\n    onSubmit: onSubmit\n  }, __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-email\"\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"input\", {\n    type: \"email\",\n    name: \"user-email\",\n    value: email,\n    onChange: onChangeEmail\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-nickname\"\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"user-nickname\",\n    value: nickname,\n    onChange: onChangeNickname\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-password\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"input\", {\n    type: \"password\",\n    name: \"user-password\",\n    value: password,\n    onChange: onChangePassword\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-passwordCheck\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"input\", {\n    type: \"password\",\n    name: \"user-passwordCheck\",\n    value: passwordCheck,\n    onChange: onChangePasswordCheck\n  })), passwordError && __jsx(ErrorLog, null, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"), __jsx(\"div\", null, __jsx(\"input\", {\n    name: \"checkbox\",\n    type: \"checkbox\",\n    checked: termChecked,\n    onChange: onChangeTermChecked\n  }), __jsx(\"label\", {\n    htmlFor: \"checkbox\"\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\")), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")));\n};\n\nexport var __N_SSP = true;\nexport default Signup;","map":null,"metadata":{},"sourceType":"module"}