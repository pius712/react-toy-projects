{"ast":null,"code":"import axios from 'axios'; // Cors 문제로 인해서 백엔드로 cookie를 보내지 않는 문제를\n// withCredentials: true 옵션을 주어서 해결\n// const instance = axios.create({\n// \tbaseURL: 'http://localhost:8080/',\n// });\n\naxios.defaults.baseURL = 'http://localhost:8080';\naxios.defaults.withCredentials = true;\n\nvar loginUser = function loginUser(data) {\n  return axios.post('user/login', data);\n};\n\nvar registerUser = function registerUser(data) {\n  return axios.post('user', data); // data = {email, password, nickname}\n};\n\nvar logoutUser = function logoutUser() {\n  return axios.post('user/logout');\n}; // 게시글 업로드\n// data = {conetent: text}\n// postform.js\n\n\nvar uploadPost = function uploadPost(data) {\n  return axios.post('post', data);\n}; // 댓글 업로드\n// data = {\n// \tcontent: comment,\n// \tpostId: post.id,\n// \tuserId: id,\n// }\n// commentForm.js\n\n\nvar uploadComment = function uploadComment(data) {\n  return axios.post(\"post/\".concat(data.postId, \"/comment\"), data);\n};\n\nvar fetchPost = function fetchPost(lastId) {\n  return axios.get(\"post?lastId=\".concat(lastId || 0));\n};\n\nvar loadAPostAPI = function loadAPostAPI(data) {\n  return axios.get(\"post/\".concat(data.postId));\n};\n\nvar fetchMyInfo = function fetchMyInfo() {\n  return axios.get('user');\n};\n\nvar likePostAPI = function likePostAPI(data) {\n  return axios.patch(\"post/\".concat(data.postId, \"/like\"));\n};\n\nvar unlikePostAPI = function unlikePostAPI(data) {\n  return axios.patch(\"post/\".concat(data.postId, \"/unlike\"));\n};\n\nvar editNicknameAPI = function editNicknameAPI(data) {\n  return axios.patch('user/edit/nickname', data);\n};\n\nvar removePostAPI = function removePostAPI(data) {\n  return axios[\"delete\"](\"post/\".concat(data.PostId, \"/delete\"));\n};\n\nvar followAPI = function followAPI(data) {\n  return axios.patch(\"user/\".concat(data.UserId, \"/follow\"));\n};\n\nvar unfollowAPI = function unfollowAPI(data) {\n  return axios.patch(\"user/\".concat(data.UserId, \"/unfollow\"));\n};\n\nvar loadFollowingsAPI = function loadFollowingsAPI() {\n  return axios.get('user/followings');\n};\n\nvar loadFollowersAPI = function loadFollowersAPI() {\n  return axios.get('user/followers');\n};\n\nvar removeFollowerAPI = function removeFollowerAPI(data) {\n  return axios[\"delete\"](\"user/follower/\".concat(data.UserId));\n}; // form data는 {name : data} 이런식으로 보내면 json이 되서 안된다. 그냥 그대로 보내야함\n\n\nvar uploadImagesAPI = function uploadImagesAPI(data) {\n  return axios.post('post/images', data);\n};\n\nvar retweetAPI = function retweetAPI(data) {\n  return axios.post(\"post/\".concat(data.PostId, \"/retweet\"));\n};\n\nfunction loadUserAPI(data) {\n  return axios.get(\"/user/\".concat(data));\n}\n\nvar loadUserPostsAPI = function loadUserPostsAPI(data, lastId) {\n  return axios.get(\"/user/\".concat(data, \"/posts?lastId=\").concat(lastId || 0));\n};\n\nvar loadHashtagPostsAPI = function loadHashtagPostsAPI(data, lastId) {\n  return axios.get(\"hashtag/\".concat(encodeURIComponent(data), \"?lastId=\").concat(lastId || 0));\n};\n\nexport { registerUser, loginUser, logoutUser, uploadPost, uploadComment, fetchMyInfo, fetchPost, likePostAPI, unlikePostAPI, editNicknameAPI, removePostAPI, followAPI, unfollowAPI, loadFollowingsAPI, loadFollowersAPI, removeFollowerAPI, uploadImagesAPI, retweetAPI, loadAPostAPI, loadUserAPI, loadUserPostsAPI, loadHashtagPostsAPI };","map":null,"metadata":{},"sourceType":"module"}