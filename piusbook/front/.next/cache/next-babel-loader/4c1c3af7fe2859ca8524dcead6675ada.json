{"ast":null,"code":"import produce from 'immer'; // import faker from 'faker';\n// import shortid from 'shortid';\n\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, ADD_POST_TO_ME, REMOVE_POST_OF_MINE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE } from '../actions';\nexport const initialState = {\n  mainPosts: [// {\n    // \tid: shortid.generate(),\n    // \tUser: {\n    // \t\tid: 1,\n    // \t\tnickname: 'pius',\n    // \t},\n    // \tcontent: '#Hello#react made by #pius ',\n    // \tImages: [\n    // \t\t{\n    // \t\t\tid: shortid.generate(),\n    // \t\t\tsrc:\n    // \t\t\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRL13vWu8GOWHAFISKo9v5oBEU75C9udknN2w&usqp=CAU',\n    // \t\t},\n    // \t\t{\n    // \t\t\tid: shortid.generate(),\n    // \t\t\tsrc:\n    // \t\t\t\t'https://i.pinimg.com/736x/0b/2f/8a/0b2f8a51314ab1ebe0505aee843a33b1.jpg',\n    // \t\t},\n    // \t\t{\n    // \t\t\tid: shortid.generate(),\n    // \t\t\tsrc:\n    // \t\t\t\t'https://pbs.twimg.com/profile_images/1256251357763235842/zY8KO59p_400x400.jpg',\n    // \t\t},\n    // \t],\n    // \tComments: [\n    // \t\t{\n    // \t\t\tid: shortid.generate(),\n    // \t\t\tUser: {\n    // \t\t\t\tid: shortid.generate(),\n    // \t\t\t\tnickname: 'aksfbs',\n    // \t\t\t},\n    // \t\t\tcontent: '안녕하세요',\n    // \t\t},\n    // \t],\n    // },\n  ],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  hasMorePosts: true\n}; // export const generateDummyPost = num =>\n// \tArray(num)\n// \t\t.fill()\n// \t\t.map((item, idx) => ({\n// \t\t\tid: shortid.generate(),\n// \t\t\tUser: {\n// \t\t\t\tid: shortid.generate(),\n// \t\t\t\tnickname: faker.name.findName(),\n// \t\t\t},\n// \t\t\tcontent: faker.lorem.paragraph(),\n// \t\t\tImages: [],\n// \t\t\tComments: [\n// \t\t\t\t{\n// \t\t\t\t\tid: shortid.generate(),\n// \t\t\t\t\tUser: {\n// \t\t\t\t\t\tid: shortid.generate(),\n// \t\t\t\t\t\tnickname: faker.name.findName(),\n// \t\t\t\t\t},\n// \t\t\t\t\tcontent: faker.lorem.paragraph(),\n// \t\t\t\t},\n// \t\t\t],\n// \t\t}));\n// initialState.mainPosts = initialState.mainPosts.concat(\n// \tArray(20)\n// \t\t.fill()\n// \t\t.map((item, idx) => ({\n// \t\t\tid: shortid.generate(),\n// \t\t\tUser: {\n// \t\t\t\tid: shortid.generate(),\n// \t\t\t\tnickname: faker.name.findName(),\n// \t\t\t},\n// \t\t\tcontent: faker.lorem.paragraph(),\n// \t\t\tImages: [],\n// \t\t\tComments: [\n// \t\t\t\t{\n// \t\t\t\t\tid: shortid.generate(),\n// \t\t\t\t\tUser: {\n// \t\t\t\t\t\tid: shortid.generate(),\n// \t\t\t\t\t\tnickname: faker.name.findName(),\n// \t\t\t\t\t},\n// \t\t\t\t\tcontent: faker.lorem.paragraph(),\n// \t\t\t\t},\n// \t\t\t],\n// \t\t})),\n// );\n// const dummyPost = data => ({\n// \tid: data.id,\n// \tUser: {\n// \t\tid: 1,\n// \t\tnickname: 'pius',\n// \t},\n// \tcontent: data.content,\n// \tImage: [],\n// \tComments: [],\n// });\n// const dummyComment = data => ({\n// \tid: shortid.generate(),\n// \tUser: {\n// \t\tnickname: 'aksfbs',\n// \t},\n// \tcontent: data,\n// });\n\nexport const addPostRequest = data => {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport const removePostRequest = data => {\n  return {\n    type: REMOVE_POST_REQUEST,\n    data: data\n  };\n};\nexport const addCommentRequest = data => {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draftState => {\n    switch (action.type) {\n      // POST\n      case ADD_POST_REQUEST:\n        draftState.addPostLoading = true;\n        draftState.addPostDone = false;\n        break;\n\n      case ADD_POST_SUCCESS:\n        // draftState.mainPosts.unshift(dummyPost(action.data));\n        draftState.mainPosts.unshift(action.data);\n        draftState.addPostLoading = false;\n        draftState.addPostDone = true;\n        break;\n\n      case ADD_POST_FAILURE:\n        draftState.addPostError = action.error;\n        break;\n      // Comment\n\n      case ADD_COMMENT_REQUEST:\n        draftState.addCommentLoading = true;\n        draftState.addCommentDone = false;\n        draftState.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          //action.data.content, postId, userId\n          // comment form에서 comment를 추가할때,\n          // store에 있는 mainPosts를 찾아서 추가해준다.\n          const idx = draftState.mainPosts.findIndex(item => item.id === action.data.id);\n          console.log('idx', idx);\n          draftState.mainPosts[idx].Comments.unshift(action.data // dummyComment(action.data.content),\n          );\n          draftState.addCommentLoading = false;\n          draftState.addCommentDone = true;\n          break;\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draftState.addCommentError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draftState.removePostLoading = true;\n        draftState.removePostDone = false;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draftState.removePostLoading = false;\n        draftState.removePostDone = true;\n        draftState.mainPosts = draftState.mainPosts.filter(item => item.id !== action.data);\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draftState.removePostLoading = false;\n        draftState.removePostError = action.data;\n        break;\n\n      case LOAD_POST_REQUEST:\n        draftState.loadPostLoading = true;\n        draftState.loadPostDone = false;\n        break;\n\n      case LOAD_POST_SUCCESS:\n        draftState.loadPostLoading = false;\n        draftState.loadPostDone = true;\n        draftState.mainPosts = action.data.concat(draftState.mainPosts);\n        draftState.hasMorePosts = draftState.mainPosts.length < 30;\n        break;\n\n      case LOAD_POST_FAILURE:\n        draftState.loadPostError = action.data;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/reducer/post.js"],"names":["produce","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_MINE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","initialState","mainPosts","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","removePostLoading","removePostDone","removePostError","loadPostLoading","loadPostDone","loadPostError","hasMorePosts","addPostRequest","data","type","removePostRequest","addCommentRequest","reducer","state","action","draftState","unshift","error","idx","findIndex","item","id","console","log","Comments","filter","concat","length"],"mappings":"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","sourcesContent":["import produce from 'immer';\n// import faker from 'faker';\n// import shortid from 'shortid';\nimport {\n\tADD_POST_REQUEST,\n\tADD_POST_SUCCESS,\n\tADD_POST_FAILURE,\n\tADD_COMMENT_REQUEST,\n\tADD_COMMENT_SUCCESS,\n\tADD_COMMENT_FAILURE,\n\tADD_POST_TO_ME,\n\tREMOVE_POST_OF_MINE,\n\tREMOVE_POST_REQUEST,\n\tREMOVE_POST_SUCCESS,\n\tREMOVE_POST_FAILURE,\n\tLOAD_POST_REQUEST,\n\tLOAD_POST_SUCCESS,\n\tLOAD_POST_FAILURE,\n} from '../actions';\n\nexport const initialState = {\n\tmainPosts: [\n\t\t// {\n\t\t// \tid: shortid.generate(),\n\t\t// \tUser: {\n\t\t// \t\tid: 1,\n\t\t// \t\tnickname: 'pius',\n\t\t// \t},\n\t\t// \tcontent: '#Hello#react made by #pius ',\n\t\t// \tImages: [\n\t\t// \t\t{\n\t\t// \t\t\tid: shortid.generate(),\n\t\t// \t\t\tsrc:\n\t\t// \t\t\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRL13vWu8GOWHAFISKo9v5oBEU75C9udknN2w&usqp=CAU',\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\tid: shortid.generate(),\n\t\t// \t\t\tsrc:\n\t\t// \t\t\t\t'https://i.pinimg.com/736x/0b/2f/8a/0b2f8a51314ab1ebe0505aee843a33b1.jpg',\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\tid: shortid.generate(),\n\t\t// \t\t\tsrc:\n\t\t// \t\t\t\t'https://pbs.twimg.com/profile_images/1256251357763235842/zY8KO59p_400x400.jpg',\n\t\t// \t\t},\n\t\t// \t],\n\t\t// \tComments: [\n\t\t// \t\t{\n\t\t// \t\t\tid: shortid.generate(),\n\t\t// \t\t\tUser: {\n\t\t// \t\t\t\tid: shortid.generate(),\n\t\t// \t\t\t\tnickname: 'aksfbs',\n\t\t// \t\t\t},\n\t\t// \t\t\tcontent: '안녕하세요',\n\t\t// \t\t},\n\t\t// \t],\n\t\t// },\n\t],\n\timagePaths: [],\n\taddPostLoading: false,\n\taddPostDone: false,\n\taddPostError: null,\n\taddCommentLoading: false,\n\taddCommentDone: false,\n\taddCommentError: null,\n\tremovePostLoading: false,\n\tremovePostDone: false,\n\tremovePostError: null,\n\tloadPostLoading: false,\n\tloadPostDone: false,\n\tloadPostError: null,\n\thasMorePosts: true,\n};\n// export const generateDummyPost = num =>\n// \tArray(num)\n// \t\t.fill()\n// \t\t.map((item, idx) => ({\n// \t\t\tid: shortid.generate(),\n// \t\t\tUser: {\n// \t\t\t\tid: shortid.generate(),\n// \t\t\t\tnickname: faker.name.findName(),\n// \t\t\t},\n// \t\t\tcontent: faker.lorem.paragraph(),\n// \t\t\tImages: [],\n// \t\t\tComments: [\n// \t\t\t\t{\n// \t\t\t\t\tid: shortid.generate(),\n// \t\t\t\t\tUser: {\n// \t\t\t\t\t\tid: shortid.generate(),\n// \t\t\t\t\t\tnickname: faker.name.findName(),\n// \t\t\t\t\t},\n// \t\t\t\t\tcontent: faker.lorem.paragraph(),\n// \t\t\t\t},\n// \t\t\t],\n// \t\t}));\n// initialState.mainPosts = initialState.mainPosts.concat(\n// \tArray(20)\n// \t\t.fill()\n// \t\t.map((item, idx) => ({\n// \t\t\tid: shortid.generate(),\n// \t\t\tUser: {\n// \t\t\t\tid: shortid.generate(),\n// \t\t\t\tnickname: faker.name.findName(),\n// \t\t\t},\n// \t\t\tcontent: faker.lorem.paragraph(),\n// \t\t\tImages: [],\n// \t\t\tComments: [\n// \t\t\t\t{\n// \t\t\t\t\tid: shortid.generate(),\n// \t\t\t\t\tUser: {\n// \t\t\t\t\t\tid: shortid.generate(),\n// \t\t\t\t\t\tnickname: faker.name.findName(),\n// \t\t\t\t\t},\n// \t\t\t\t\tcontent: faker.lorem.paragraph(),\n// \t\t\t\t},\n// \t\t\t],\n// \t\t})),\n// );\n// const dummyPost = data => ({\n// \tid: data.id,\n// \tUser: {\n// \t\tid: 1,\n// \t\tnickname: 'pius',\n// \t},\n// \tcontent: data.content,\n// \tImage: [],\n// \tComments: [],\n// });\n\n// const dummyComment = data => ({\n// \tid: shortid.generate(),\n// \tUser: {\n// \t\tnickname: 'aksfbs',\n// \t},\n// \tcontent: data,\n// });\n\nexport const addPostRequest = data => {\n\treturn {\n\t\ttype: ADD_POST_REQUEST,\n\t\tdata: data,\n\t};\n};\n\nexport const removePostRequest = data => {\n\treturn {\n\t\ttype: REMOVE_POST_REQUEST,\n\t\tdata: data,\n\t};\n};\nexport const addCommentRequest = data => {\n\treturn {\n\t\ttype: ADD_COMMENT_REQUEST,\n\t\tdata: data,\n\t};\n};\n\nconst reducer = (state = initialState, action) => {\n\treturn produce(state, draftState => {\n\t\tswitch (action.type) {\n\t\t\t// POST\n\t\t\tcase ADD_POST_REQUEST:\n\t\t\t\tdraftState.addPostLoading = true;\n\t\t\t\tdraftState.addPostDone = false;\n\t\t\t\tbreak;\n\n\t\t\tcase ADD_POST_SUCCESS:\n\t\t\t\t// draftState.mainPosts.unshift(dummyPost(action.data));\n\t\t\t\tdraftState.mainPosts.unshift(action.data);\n\t\t\t\tdraftState.addPostLoading = false;\n\t\t\t\tdraftState.addPostDone = true;\n\t\t\t\tbreak;\n\t\t\tcase ADD_POST_FAILURE:\n\t\t\t\tdraftState.addPostError = action.error;\n\t\t\t\tbreak;\n\t\t\t// Comment\n\t\t\tcase ADD_COMMENT_REQUEST:\n\t\t\t\tdraftState.addCommentLoading = true;\n\t\t\t\tdraftState.addCommentDone = false;\n\t\t\t\tdraftState.addCommentError = null;\n\t\t\t\tbreak;\n\t\t\tcase ADD_COMMENT_SUCCESS: {\n\t\t\t\t//action.data.content, postId, userId\n\t\t\t\t// comment form에서 comment를 추가할때,\n\t\t\t\t// store에 있는 mainPosts를 찾아서 추가해준다.\n\t\t\t\tconst idx = draftState.mainPosts.findIndex(\n\t\t\t\t\titem => item.id === action.data.id,\n\t\t\t\t);\n\t\t\t\tconsole.log('idx', idx);\n\t\t\t\tdraftState.mainPosts[idx].Comments.unshift(\n\t\t\t\t\taction.data,\n\t\t\t\t\t// dummyComment(action.data.content),\n\t\t\t\t);\n\t\t\t\tdraftState.addCommentLoading = false;\n\t\t\t\tdraftState.addCommentDone = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ADD_COMMENT_FAILURE:\n\t\t\t\tdraftState.addCommentError = action.error;\n\t\t\t\tbreak;\n\t\t\tcase REMOVE_POST_REQUEST:\n\t\t\t\tdraftState.removePostLoading = true;\n\t\t\t\tdraftState.removePostDone = false;\n\t\t\t\tbreak;\n\t\t\tcase REMOVE_POST_SUCCESS:\n\t\t\t\tdraftState.removePostLoading = false;\n\t\t\t\tdraftState.removePostDone = true;\n\t\t\t\tdraftState.mainPosts = draftState.mainPosts.filter(\n\t\t\t\t\titem => item.id !== action.data,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase REMOVE_POST_FAILURE:\n\t\t\t\tdraftState.removePostLoading = false;\n\t\t\t\tdraftState.removePostError = action.data;\n\t\t\t\tbreak;\n\t\t\tcase LOAD_POST_REQUEST:\n\t\t\t\tdraftState.loadPostLoading = true;\n\t\t\t\tdraftState.loadPostDone = false;\n\t\t\t\tbreak;\n\t\t\tcase LOAD_POST_SUCCESS:\n\t\t\t\tdraftState.loadPostLoading = false;\n\t\t\t\tdraftState.loadPostDone = true;\n\t\t\t\tdraftState.mainPosts = action.data.concat(draftState.mainPosts);\n\t\t\t\tdraftState.hasMorePosts = draftState.mainPosts.length < 30;\n\t\t\t\tbreak;\n\t\t\tcase LOAD_POST_FAILURE:\n\t\t\t\tdraftState.loadPostError = action.data;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t});\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}