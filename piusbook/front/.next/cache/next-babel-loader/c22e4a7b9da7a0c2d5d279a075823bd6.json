{"ast":null,"code":"import { call, put, delay, takeLatest, all, fork } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_SUCCESS, LOG_OUT_FAILURE } from '../actions';\n\nfunction* login(action) {\n  try {\n    // const result = yield call();\n    yield delay(1000);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: action.data\n    });\n  } catch (error) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: error.response.message\n    });\n  }\n}\n\nfunction* logout() {\n  try {\n    // yield call();\n    yield delay(1000);\n    yield put({\n      type: 'LOG_OUT_SUCCESS'\n    });\n  } catch {\n    yield put({\n      type: 'LOG_OUT_FAILURE'\n    });\n  }\n}\n\nfunction* signup() {\n  try {\n    // yield call();\n    yield delay(1000);\n    yield put({\n      type: 'LOG_OUT_SUCCESS'\n    });\n  } catch {\n    yield put({\n      type: 'LOG_OUT_FAILURE'\n    });\n  }\n}\n\nfunction* watchLogin() {\n  console.log('saga');\n  yield takeLatest('LOG_IN_REQUEST', login);\n}\n\nfunction* watchLogout() {\n  yield takeLatest('LOG_OUT_REQUEST', logout);\n}\n\nfunction* watchSignup() {\n  yield takeLatest('LOG_OUT_REQUEST', signup);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogout)]);\n}","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/sagas/user.js"],"names":["call","put","delay","takeLatest","all","fork","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","login","action","type","data","error","response","message","logout","signup","watchLogin","console","log","watchLogout","watchSignup","userSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,KAApB,EAA2BC,UAA3B,EAAuCC,GAAvC,EAA4CC,IAA5C,QAAwD,oBAAxD;AACA,SACCC,cADD,EAECC,cAFD,EAGCC,cAHD,EAICC,eAJD,EAKCC,eALD,QAMO,YANP;;AAOA,UAAUC,KAAV,CAAgBC,MAAhB,EAAwB;AACvB,MAAI;AACH;AACA,UAAMV,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACTY,MAAAA,IAAI,EAAE,gBADG;AAETC,MAAAA,IAAI,EAAEF,MAAM,CAACE;AAFJ,KAAD,CAAT;AAIA,GAPD,CAOE,OAAOC,KAAP,EAAc;AACf,UAAMd,GAAG,CAAC;AACTY,MAAAA,IAAI,EAAE,gBADG;AAETC,MAAAA,IAAI,EAAEC,KAAK,CAACC,QAAN,CAAeC;AAFZ,KAAD,CAAT;AAIA;AACD;;AACD,UAAUC,MAAV,GAAmB;AAClB,MAAI;AACH;AACA,UAAMhB,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACTY,MAAAA,IAAI,EAAE;AADG,KAAD,CAAT;AAGA,GAND,CAME,MAAM;AACP,UAAMZ,GAAG,CAAC;AACTY,MAAAA,IAAI,EAAE;AADG,KAAD,CAAT;AAGA;AACD;;AACD,UAAUM,MAAV,GAAmB;AAClB,MAAI;AACH;AACA,UAAMjB,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACTY,MAAAA,IAAI,EAAE;AADG,KAAD,CAAT;AAGA,GAND,CAME,MAAM;AACP,UAAMZ,GAAG,CAAC;AACTY,MAAAA,IAAI,EAAE;AADG,KAAD,CAAT;AAGA;AACD;;AAED,UAAUO,UAAV,GAAuB;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,QAAMnB,UAAU,CAAC,gBAAD,EAAmBQ,KAAnB,CAAhB;AACA;;AAED,UAAUY,WAAV,GAAwB;AACvB,QAAMpB,UAAU,CAAC,iBAAD,EAAoBe,MAApB,CAAhB;AACA;;AACD,UAAUM,WAAV,GAAwB;AACvB,QAAMrB,UAAU,CAAC,iBAAD,EAAoBgB,MAApB,CAAhB;AACA;;AAED,eAAe,UAAUM,QAAV,GAAqB;AACnC,QAAMrB,GAAG,CAAC,CAACC,IAAI,CAACe,UAAD,CAAL,EAAmBf,IAAI,CAACkB,WAAD,CAAvB,CAAD,CAAT;AACA","sourcesContent":["import { call, put, delay, takeLatest, all, fork } from 'redux-saga/effects';\nimport {\n\tLOG_IN_REQUEST,\n\tLOG_IN_SUCCESS,\n\tLOG_IN_FAILURE,\n\tLOG_OUT_SUCCESS,\n\tLOG_OUT_FAILURE,\n} from '../actions';\nfunction* login(action) {\n\ttry {\n\t\t// const result = yield call();\n\t\tyield delay(1000);\n\t\tyield put({\n\t\t\ttype: 'LOG_IN_SUCCESS',\n\t\t\tdata: action.data,\n\t\t});\n\t} catch (error) {\n\t\tyield put({\n\t\t\ttype: 'LOG_IN_FAILURE',\n\t\t\tdata: error.response.message,\n\t\t});\n\t}\n}\nfunction* logout() {\n\ttry {\n\t\t// yield call();\n\t\tyield delay(1000);\n\t\tyield put({\n\t\t\ttype: 'LOG_OUT_SUCCESS',\n\t\t});\n\t} catch {\n\t\tyield put({\n\t\t\ttype: 'LOG_OUT_FAILURE',\n\t\t});\n\t}\n}\nfunction* signup() {\n\ttry {\n\t\t// yield call();\n\t\tyield delay(1000);\n\t\tyield put({\n\t\t\ttype: 'LOG_OUT_SUCCESS',\n\t\t});\n\t} catch {\n\t\tyield put({\n\t\t\ttype: 'LOG_OUT_FAILURE',\n\t\t});\n\t}\n}\n\nfunction* watchLogin() {\n\tconsole.log('saga');\n\tyield takeLatest('LOG_IN_REQUEST', login);\n}\n\nfunction* watchLogout() {\n\tyield takeLatest('LOG_OUT_REQUEST', logout);\n}\nfunction* watchSignup() {\n\tyield takeLatest('LOG_OUT_REQUEST', signup);\n}\n\nexport default function* userSaga() {\n\tyield all([fork(watchLogin), fork(watchLogout)]);\n}\n"]},"metadata":{},"sourceType":"module"}