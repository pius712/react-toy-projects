{"ast":null,"code":"import { put, delay, takeEvery, takeLatest, all, fork } from 'redux-saga/effects';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, ADD_POST_TO_ME } from '../actions/index';\nimport shortid from 'shortid';\n\nfunction* addPost(action) {\n  console.log('saga add post');\n\n  try {\n    // const result = yield call();\n    // console.log('sga add post');\n    yield delay(1000);\n    const id = shortid.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data\n      }\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call();\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  console.log('saga post');\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/sagas/post.js"],"names":["put","delay","takeEvery","takeLatest","all","fork","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","ADD_POST_TO_ME","shortid","addPost","action","console","log","id","generate","type","data","content","error","response","addComment","watchAddPost","watchAddComment","postSaga"],"mappings":"AAAA,SACCA,GADD,EAECC,KAFD,EAGCC,SAHD,EAICC,UAJD,EAKCC,GALD,EAMCC,IAND,QAOO,oBAPP;AAQA,SACCC,gBADD,EAECC,gBAFD,EAGCC,gBAHD,EAICC,mBAJD,EAKCC,mBALD,EAMCC,mBAND,EAOCC,cAPD,QAQO,kBARP;AASA,OAAOC,OAAP,MAAoB,SAApB;;AAEA,UAAUC,OAAV,CAAkBC,MAAlB,EAA0B;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AACA,MAAI;AACH;AACA;AACA,UAAMhB,KAAK,CAAC,IAAD,CAAX;AACA,UAAMiB,EAAE,GAAGL,OAAO,CAACM,QAAR,EAAX;AACA,UAAMnB,GAAG,CAAC;AACToB,MAAAA,IAAI,EAAEb,gBADG;AAETc,MAAAA,IAAI,EAAE;AACLH,QAAAA,EADK;AAELI,QAAAA,OAAO,EAAEP,MAAM,CAACM;AAFX;AAFG,KAAD,CAAT;AAOA,UAAMrB,GAAG,CAAC;AACToB,MAAAA,IAAI,EAAER,cADG;AAETS,MAAAA,IAAI,EAAEH;AAFG,KAAD,CAAT;AAIA,GAhBD,CAgBE,OAAOK,KAAP,EAAc;AACf,UAAMvB,GAAG,CAAC;AACToB,MAAAA,IAAI,EAAEZ,gBADG;AAETe,MAAAA,KAAK,EAAEA,KAAK,CAACC,QAAN,CAAeH;AAFb,KAAD,CAAT;AAIA;AACD;;AACD,UAAUI,UAAV,CAAqBV,MAArB,EAA6B;AAC5B,MAAI;AACH;AACA,UAAMd,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACToB,MAAAA,IAAI,EAAEV,mBADG;AAETW,MAAAA,IAAI,EAAEN,MAAM,CAACM;AAFJ,KAAD,CAAT;AAIA,GAPD,CAOE,OAAOE,KAAP,EAAc;AACf,UAAMvB,GAAG,CAAC;AACToB,MAAAA,IAAI,EAAET,mBADG;AAETY,MAAAA,KAAK,EAAEA,KAAK,CAACC,QAAN,CAAeH;AAFb,KAAD,CAAT;AAIA;AACD;;AAED,UAAUK,YAAV,GAAyB;AACxBV,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,QAAMd,UAAU,CAACG,gBAAD,EAAmBQ,OAAnB,CAAhB;AACA;;AACD,UAAUa,eAAV,GAA4B;AAC3B,QAAMxB,UAAU,CAACM,mBAAD,EAAsBgB,UAAtB,CAAhB;AACA;;AAED,eAAe,UAAUG,QAAV,GAAqB;AACnC,QAAMxB,GAAG,CAAC,CAACC,IAAI,CAACqB,YAAD,CAAL,EAAqBrB,IAAI,CAACsB,eAAD,CAAzB,CAAD,CAAT;AACA","sourcesContent":["import {\n\tput,\n\tdelay,\n\ttakeEvery,\n\ttakeLatest,\n\tall,\n\tfork,\n} from 'redux-saga/effects';\nimport {\n\tADD_POST_REQUEST,\n\tADD_POST_SUCCESS,\n\tADD_POST_FAILURE,\n\tADD_COMMENT_REQUEST,\n\tADD_COMMENT_SUCCESS,\n\tADD_COMMENT_FAILURE,\n\tADD_POST_TO_ME,\n} from '../actions/index';\nimport shortid from 'shortid';\n\nfunction* addPost(action) {\n\tconsole.log('saga add post');\n\ttry {\n\t\t// const result = yield call();\n\t\t// console.log('sga add post');\n\t\tyield delay(1000);\n\t\tconst id = shortid.generate();\n\t\tyield put({\n\t\t\ttype: ADD_POST_SUCCESS,\n\t\t\tdata: {\n\t\t\t\tid,\n\t\t\t\tcontent: action.data,\n\t\t\t},\n\t\t});\n\t\tyield put({\n\t\t\ttype: ADD_POST_TO_ME,\n\t\t\tdata: id,\n\t\t});\n\t} catch (error) {\n\t\tyield put({\n\t\t\ttype: ADD_POST_FAILURE,\n\t\t\terror: error.response.data,\n\t\t});\n\t}\n}\nfunction* addComment(action) {\n\ttry {\n\t\t// const result = yield call();\n\t\tyield delay(1000);\n\t\tyield put({\n\t\t\ttype: ADD_COMMENT_SUCCESS,\n\t\t\tdata: action.data,\n\t\t});\n\t} catch (error) {\n\t\tyield put({\n\t\t\ttype: ADD_COMMENT_FAILURE,\n\t\t\terror: error.response.data,\n\t\t});\n\t}\n}\n\nfunction* watchAddPost() {\n\tconsole.log('saga post');\n\tyield takeLatest(ADD_POST_REQUEST, addPost);\n}\nfunction* watchAddComment() {\n\tyield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n\tyield all([fork(watchAddPost), fork(watchAddComment)]);\n}\n"]},"metadata":{},"sourceType":"module"}