{"ast":null,"code":"var _jsxFileName = \"/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/pages/post/[id].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport wrapper from '../../store/configureStore';\nimport { useSelector } from 'react-redux';\nimport { LOAD_A_POST_REQUEST } from '../../actions';\nimport PostCard from '../../components/PostCard';\nimport { END } from 'redux-saga';\nimport { Row, Col } from 'antd';\nimport axios from 'axios';\nimport AppLayout from '../../components/AppLayout';\n\nconst SinglePost = () => {\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 3\n    }\n  }, __jsx(PostCard, {\n    post: singlePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default SinglePost;\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = req ? req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_A_POST_REQUEST,\n    data: {\n      postId: context.params.id\n    }\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});","map":{"version":3,"sources":["/Users/pius712/Documents/GitHub/react-todo-list/piusbook/front/pages/post/[id].js"],"names":["React","wrapper","useSelector","LOAD_A_POST_REQUEST","PostCard","END","Row","Col","axios","AppLayout","SinglePost","singlePost","state","post","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","dispatch","type","data","postId","params","id","sagaTask","toPromise"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,mBAAT,QAAoC,eAApC;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,MAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;AACA,MAAMC,UAAU,GAAG,MAAM;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAiBT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAlC;AACA,SACC,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEF,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD;AAKA,CAPD;;AASA,eAAeD,UAAf;AAEA,OAAO,MAAMI,kBAAkB,GAAGb,OAAO,CAACa,kBAAR,CAA2B,MAAMC,OAAN,IAAiB;AAC7E,QAAMC,MAAM,GAAGC,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAYF,MAAf,GAAwB,EAA1C;AACAR,EAAAA,KAAK,CAACW,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIH,GAAG,IAAID,MAAX,EAAmB;AAClBR,IAAAA,KAAK,CAACW,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACA;;AACDD,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AACtBC,IAAAA,IAAI,EAAEpB,mBADgB;AAEtBqB,IAAAA,IAAI,EAAE;AACLC,MAAAA,MAAM,EAAEV,OAAO,CAACW,MAAR,CAAeC;AADlB;AAFgB,GAAvB;AAMAZ,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuBjB,GAAvB;AACA,QAAMU,OAAO,CAACM,KAAR,CAAcO,QAAd,CAAuBC,SAAvB,EAAN;AACA,CAdiC,CAA3B","sourcesContent":["import React from 'react';\nimport wrapper from '../../store/configureStore';\nimport { useSelector } from 'react-redux';\nimport { LOAD_A_POST_REQUEST } from '../../actions';\nimport PostCard from '../../components/PostCard';\nimport { END } from 'redux-saga';\nimport { Row, Col } from 'antd';\nimport axios from 'axios';\nimport AppLayout from '../../components/AppLayout';\nconst SinglePost = () => {\n\tconst { singlePost } = useSelector(state => state.post);\n\treturn (\n\t\t<AppLayout>\n\t\t\t<PostCard post={singlePost}></PostCard>\n\t\t</AppLayout>\n\t);\n};\n\nexport default SinglePost;\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n\tconst cookie = req ? req.headers.cookie : '';\n\taxios.defaults.headers.Cookie = '';\n\tif (req && cookie) {\n\t\taxios.defaults.headers.Cookie = cookie;\n\t}\n\tcontext.store.dispatch({\n\t\ttype: LOAD_A_POST_REQUEST,\n\t\tdata: {\n\t\t\tpostId: context.params.id,\n\t\t},\n\t});\n\tcontext.store.dispatch(END);\n\tawait context.store.sagaTask.toPromise();\n});\n"]},"metadata":{},"sourceType":"module"}